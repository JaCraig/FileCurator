{
  "api/FileCurator.BaseClasses.DirectoryBase-2.html": {
    "href": "api/FileCurator.BaseClasses.DirectoryBase-2.html",
    "title": "Class DirectoryBase<TInternalDirectoryType, TDirectoryType> | FileCurator API Reference",
    "keywords": "Class DirectoryBase<TInternalDirectoryType, TDirectoryType> Directory base class Inheritance object DirectoryBase<TInternalDirectoryType, TDirectoryType> FtpDirectory LocalDirectory MemoryDirectory ResourceDirectory WebDirectory Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.BaseClasses Assembly: FileCurator.dll Syntax public abstract class DirectoryBase<TInternalDirectoryType, TDirectoryType> : IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> where TDirectoryType : DirectoryBase<TInternalDirectoryType, TDirectoryType>, new() Type Parameters Name Description TInternalDirectoryType Data type internally to hold true directory info TDirectoryType Directory type Constructors | Edit this page View Source DirectoryBase() Constructor Declaration protected DirectoryBase() | Edit this page View Source DirectoryBase(TInternalDirectoryType, Credentials?) Constructor Declaration protected DirectoryBase(TInternalDirectoryType internalDirectory, Credentials? credentials = null) Parameters Type Name Description TInternalDirectoryType internalDirectory Internal directory object Credentials credentials The credentials. Properties | Edit this page View Source Accessed Last time accessed (UTC time) Declaration public abstract DateTime Accessed { get; } Property Value Type Description DateTime | Edit this page View Source Created Date created (UTC time) Declaration public abstract DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Credentials Gets the credentials. Declaration public Credentials? Credentials { get; } Property Value Type Description Credentials The credentials. | Edit this page View Source Exists Does it exist? Declaration public abstract bool Exists { get; } Property Value Type Description bool | Edit this page View Source FullName Full path Declaration public abstract string FullName { get; } Property Value Type Description string | Edit this page View Source InternalDirectory Internal directory Declaration protected TInternalDirectoryType InternalDirectory { get; set; } Property Value Type Description TInternalDirectoryType | Edit this page View Source Modified Date modified (UTC time) Declaration public abstract DateTime Modified { get; } Property Value Type Description DateTime | Edit this page View Source Name Name Declaration public abstract string Name { get; } Property Value Type Description string | Edit this page View Source Parent Parent directory Declaration public abstract IDirectory? Parent { get; } Property Value Type Description IDirectory | Edit this page View Source Root Root directory Declaration public abstract IDirectory? Root { get; } Property Value Type Description IDirectory | Edit this page View Source Size Size of the directory Declaration public abstract long Size { get; } Property Value Type Description long Methods | Edit this page View Source CompareTo(IDirectory) Compares this to another directory Declaration public int CompareTo(IDirectory other) Parameters Type Name Description IDirectory other Directory to compare to Returns Type Description int | Edit this page View Source CompareTo(object) Compares this object to another object Declaration public int CompareTo(object obj) Parameters Type Name Description object obj Object to compare it to Returns Type Description int | Edit this page View Source CopyTo(IDirectory, CopyOptions) Copies the directory to the specified parent directory Declaration public virtual IDirectory CopyTo(IDirectory directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Copy options Returns Type Description IDirectory Returns the new directory | Edit this page View Source CopyToAsync(IDirectory, CopyOptions) Copies the directory to the specified parent directory Declaration public Task<IDirectory> CopyToAsync(IDirectory directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Copy options Returns Type Description Task<IDirectory> | Edit this page View Source Create() Creates the directory Declaration public abstract IDirectory Create() Returns Type Description IDirectory | Edit this page View Source CreateAsync() Creates the directory if it does not currently exist Declaration public virtual Task<IDirectory> CreateAsync() Returns Type Description Task<IDirectory> | Edit this page View Source Delete() Deletes the directory Declaration public abstract IDirectory Delete() Returns Type Description IDirectory | Edit this page View Source DeleteAsync() Deletes the directory Declaration public virtual Task<IDirectory> DeleteAsync() Returns Type Description Task<IDirectory> | Edit this page View Source EnumerateDirectories(Predicate<IDirectory>, SearchOption) Enumerates sub directories (defaults to top level sub directories) Declaration public IEnumerable<IDirectory> EnumerateDirectories(Predicate<IDirectory> predicate, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description Predicate<IDirectory> predicate Predicate used to filter directories SearchOption options Search options to use Returns Type Description IEnumerable<IDirectory> The list of directories | Edit this page View Source EnumerateDirectories(string, SearchOption) Enumerates directories under this directory Declaration public abstract IEnumerable<IDirectory> EnumerateDirectories(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern SearchOption options Search options Returns Type Description IEnumerable<IDirectory> List of directories under this directory | Edit this page View Source EnumerateFiles(Predicate<IFile>, SearchOption) Enumerates files within the directory (defaults to top level directory and not the sub directories) Declaration public IEnumerable<IFile> EnumerateFiles(Predicate<IFile> predicate, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description Predicate<IFile> predicate Predicate used to filter files SearchOption options Search options to use Returns Type Description IEnumerable<IFile> The list of files | Edit this page View Source EnumerateFiles(string, SearchOption) Enumerates files under this directory Declaration public abstract IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern SearchOption options Search options Returns Type Description IEnumerable<IFile> List of files under this directory | Edit this page View Source Equals(IDirectory) Determines if the directories are equal Declaration public bool Equals(IDirectory other) Parameters Type Name Description IDirectory other Other directory Returns Type Description bool True if they are equal, false otherwise | Edit this page View Source Equals(object) Determines if the two directories are the same Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Object to compare to Returns Type Description bool True if they're the same, false otherwise Overrides object.Equals(object) | Edit this page View Source GetEnumerator() Enumerates the files in the directory Declaration public IEnumerator<IFile> GetEnumerator() Returns Type Description IEnumerator<IFile> The files in the directory | Edit this page View Source GetHashCode() Returns the hash code for the directory Declaration public override int GetHashCode() Returns Type Description int The hash code for the directory Overrides object.GetHashCode() | Edit this page View Source MoveTo(IDirectory) Moves this directory under another directory Declaration public virtual IDirectory MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IDirectory | Edit this page View Source MoveToAsync(IDirectory) Moves the directory to the specified parent directory Declaration public Task<IDirectory> MoveToAsync(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description Task<IDirectory> | Edit this page View Source Rename(string) Renames the directory Declaration public abstract IDirectory Rename(string name) Parameters Type Name Description string name Name of the new directory Returns Type Description IDirectory | Edit this page View Source RenameAsync(string) Renames the directory Declaration public virtual Task<IDirectory> RenameAsync(string name) Parameters Type Name Description string name The new name of the directory Returns Type Description Task<IDirectory> | Edit this page View Source ToString() Gets info for the directory Declaration public override string ToString() Returns Type Description string The full path to the directory Overrides object.ToString() Operators | Edit this page View Source operator ==(DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory) Determines if two directories are equal Declaration public static bool operator ==(DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1, IDirectory directory2) Parameters Type Name Description DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1 Directory 1 IDirectory directory2 Directory 2 Returns Type Description bool True if they are, false otherwise | Edit this page View Source operator >(DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory) Greater than Declaration public static bool operator >(DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1, IDirectory directory2) Parameters Type Name Description DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1 Directory 1 IDirectory directory2 Directory 2 Returns Type Description bool The result | Edit this page View Source operator >=(DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory) Greater than or equal Declaration public static bool operator >=(DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1, IDirectory directory2) Parameters Type Name Description DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1 Directory 1 IDirectory directory2 Directory 2 Returns Type Description bool The result | Edit this page View Source operator !=(DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory) Determines if two directories are not equal Declaration public static bool operator !=(DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1, IDirectory directory2) Parameters Type Name Description DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1 Directory 1 IDirectory directory2 Directory 2 Returns Type Description bool True if they are not equal, false otherwise | Edit this page View Source operator <(DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory) Less than Declaration public static bool operator <(DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1, IDirectory directory2) Parameters Type Name Description DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1 Directory 1 IDirectory directory2 Directory 2 Returns Type Description bool The result | Edit this page View Source operator <=(DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory) Less than or equal Declaration public static bool operator <=(DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1, IDirectory directory2) Parameters Type Name Description DirectoryBase<TInternalDirectoryType, TDirectoryType> directory1 Directory 1 IDirectory directory2 Directory 2 Returns Type Description bool The result Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T>"
  },
  "api/FileCurator.BaseClasses.FileBase-2.html": {
    "href": "api/FileCurator.BaseClasses.FileBase-2.html",
    "title": "Class FileBase<InternalFileType, FileType> | FileCurator API Reference",
    "keywords": "Class FileBase<InternalFileType, FileType> Directory base class Inheritance object FileBase<InternalFileType, FileType> FtpFile LocalFile MemoryFile ResourceFile WebFile Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.BaseClasses Assembly: FileCurator.dll Syntax public abstract class FileBase<InternalFileType, FileType> : IFile, IComparable<IFile>, IComparable, IEquatable<IFile> where FileType : FileBase<InternalFileType, FileType>, new() Type Parameters Name Description InternalFileType Internal file type FileType File type Constructors | Edit this page View Source FileBase() Constructor Declaration protected FileBase() | Edit this page View Source FileBase(InternalFileType) Constructor Declaration protected FileBase(InternalFileType internalFile) Parameters Type Name Description InternalFileType internalFile Internal file | Edit this page View Source FileBase(InternalFileType, Credentials?) Constructor Declaration protected FileBase(InternalFileType internalFile, Credentials? credentials = null) Parameters Type Name Description InternalFileType internalFile Internal file Credentials credentials The credentials. Properties | Edit this page View Source Accessed Last time accessed (UTC time) Declaration public abstract DateTime Accessed { get; } Property Value Type Description DateTime | Edit this page View Source Created Time created (UTC time) Declaration public abstract DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Credentials Gets the credentials. Declaration public Credentials? Credentials { get; } Property Value Type Description Credentials The credentials. | Edit this page View Source Directory Directory the file is within Declaration public abstract IDirectory? Directory { get; } Property Value Type Description IDirectory | Edit this page View Source Exists Does the file exist? Declaration public abstract bool Exists { get; } Property Value Type Description bool | Edit this page View Source Extension File extension Declaration public abstract string Extension { get; } Property Value Type Description string | Edit this page View Source FormatManager Gets or sets the internal manager. Declaration protected Manager? FormatManager { get; } Property Value Type Description Manager The internal manager. | Edit this page View Source FullName Full path Declaration public abstract string FullName { get; } Property Value Type Description string | Edit this page View Source InternalFile Internal directory Declaration protected InternalFileType InternalFile { get; set; } Property Value Type Description InternalFileType | Edit this page View Source Length Size of the file Declaration public abstract long Length { get; } Property Value Type Description long | Edit this page View Source Modified Time modified (UTC time) Declaration public abstract DateTime Modified { get; } Property Value Type Description DateTime | Edit this page View Source Name Name of the file Declaration public abstract string Name { get; } Property Value Type Description string Methods | Edit this page View Source CompareTo(IFile) Compares this to another file Declaration public int CompareTo(IFile other) Parameters Type Name Description IFile other File to compare to Returns Type Description int | Edit this page View Source CompareTo(object) Compares this object to another object Declaration public int CompareTo(object obj) Parameters Type Name Description object obj Object to compare it to Returns Type Description int | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration public abstract IFile CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file | Edit this page View Source CopyToAsync(IDirectory, bool) Copies the file to another directory Declaration public virtual Task<IFile?> CopyToAsync(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description Task<IFile> The newly created file | Edit this page View Source Delete() Deletes the file Declaration public abstract string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) | Edit this page View Source DeleteAsync() Deletes the file Declaration public virtual Task<string> DeleteAsync() Returns Type Description Task<string> Any response for deleting the resource (usually FTP, HTTP, etc) | Edit this page View Source Equals(IFile) Determines if the files are equal Declaration public bool Equals(IFile other) Parameters Type Name Description IFile other Other file Returns Type Description bool True if they are equal, false otherwise | Edit this page View Source Equals(object) Determines if the objects are equal Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Object to compare to Returns Type Description bool True if they are equal, false otherwise Overrides object.Equals(object) | Edit this page View Source GetHashCode() Gets the hash code for the file Declaration public override int GetHashCode() Returns Type Description int The hash code Overrides object.GetHashCode() | Edit this page View Source MoveTo(IDirectory) Moves the file to a new directory Declaration public abstract IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IFile | Edit this page View Source MoveToAsync(IDirectory) Moves the file to another directory Declaration public virtual Task<IFile> MoveToAsync(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move the file to Returns Type Description Task<IFile> | Edit this page View Source Parse() Parses this instance. Declaration public IGenericFile Parse() Returns Type Description IGenericFile The parsed file Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source ParseAsync() Parses this instance. Declaration public Task<IGenericFile> ParseAsync() Returns Type Description Task<IGenericFile> The parsed file Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source ParseAsync<TFile>() Parses this instance. Declaration public Task<TFile> ParseAsync<TFile>() where TFile : IGenericFile Returns Type Description Task<TFile> The parsed file Type Parameters Name Description TFile The type of the file object expected. Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source Parse<TFile>() Parses this instance. Declaration public TFile Parse<TFile>() where TFile : IGenericFile Returns Type Description TFile The parsed file Type Parameters Name Description TFile The type of the file object expected. Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source Read() Reads the file in as a string Declaration public abstract string Read() Returns Type Description string The file contents as a string | Edit this page View Source ReadAsync() Reads the file to the end as a string Declaration public virtual Task<string> ReadAsync() Returns Type Description Task<string> A string containing the contents of the file | Edit this page View Source ReadBinary() Reads a file as binary Declaration public abstract byte[] ReadBinary() Returns Type Description byte[] The file contents as a byte array | Edit this page View Source ReadBinaryAsync() Reads the file to the end as a byte array Declaration public virtual Task<byte[]> ReadBinaryAsync() Returns Type Description Task<byte[]> A byte array containing the contents of the file | Edit this page View Source Rename(string) Renames the file Declaration public abstract IFile Rename(string newName) Parameters Type Name Description string newName New name for the file Returns Type Description IFile | Edit this page View Source RenameAsync(string) Renames the file Declaration public virtual Task<IFile> RenameAsync(string newName) Parameters Type Name Description string newName New file name Returns Type Description Task<IFile> | Edit this page View Source ToString() Returns the name of the file Declaration public override string ToString() Returns Type Description string The name of the file Overrides object.ToString() | Edit this page View Source Write(IGenericFile, FileMode) Writes the specified data. Declaration public bool Write(IGenericFile data, FileMode mode = FileMode.Create) Parameters Type Name Description IGenericFile data The data. FileMode mode The mode. Returns Type Description bool True if it was written successfully, false otherwise. | Edit this page View Source Write(byte[], FileMode) Writes content to the file Declaration public abstract byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode Mode to open the file as Returns Type Description byte[] The result of the write or original content | Edit this page View Source Write(string, FileMode, Encoding?) Writes content to the file Declaration public abstract string Write(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode Mode to open the file as Encoding encoding Encoding to use for the content Returns Type Description string The result of the write or original content | Edit this page View Source WriteAsync(IGenericFile, FileMode) Writes the specified data. Declaration public Task<bool> WriteAsync(IGenericFile data, FileMode mode = FileMode.Create) Parameters Type Name Description IGenericFile data The data. FileMode mode The mode. Returns Type Description Task<bool> True if it was written successfully, false otherwise. | Edit this page View Source WriteAsync(byte[], FileMode) Writes content to the file Declaration public virtual Task<byte[]> WriteAsync(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode File mode Returns Type Description Task<byte[]> The result of the write or original content | Edit this page View Source WriteAsync(string, FileMode, Encoding?) Writes content to the file Declaration public virtual Task<string> WriteAsync(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode File mode Encoding encoding Encoding that the content should be saved as (default is UTF8) Returns Type Description Task<string> The result of the write or original content Operators | Edit this page View Source operator ==(FileBase<InternalFileType, FileType>, IFile) Determines if two directories are equal Declaration public static bool operator ==(FileBase<InternalFileType, FileType> file1, IFile file2) Parameters Type Name Description FileBase<InternalFileType, FileType> file1 File 1 IFile file2 File 2 Returns Type Description bool True if they are, false otherwise | Edit this page View Source operator >(FileBase<InternalFileType, FileType>, IFile) Greater than Declaration public static bool operator >(FileBase<InternalFileType, FileType> file1, IFile file2) Parameters Type Name Description FileBase<InternalFileType, FileType> file1 File 1 IFile file2 File 2 Returns Type Description bool The result | Edit this page View Source operator >=(FileBase<InternalFileType, FileType>, IFile) Greater than or equal Declaration public static bool operator >=(FileBase<InternalFileType, FileType> file1, IFile file2) Parameters Type Name Description FileBase<InternalFileType, FileType> file1 File 1 IFile file2 File 2 Returns Type Description bool The result | Edit this page View Source implicit operator byte[](FileBase<InternalFileType, FileType>) Reads the file and converts it to a byte array Declaration public static implicit operator byte[](FileBase<InternalFileType, FileType> file) Parameters Type Name Description FileBase<InternalFileType, FileType> file File to read Returns Type Description byte[] The file as a byte array | Edit this page View Source implicit operator string(FileBase<InternalFileType, FileType>) Reads the file and converts it to a string Declaration public static implicit operator string(FileBase<InternalFileType, FileType> file) Parameters Type Name Description FileBase<InternalFileType, FileType> file File to read Returns Type Description string The file as a string | Edit this page View Source operator !=(FileBase<InternalFileType, FileType>, IFile) Determines if two directories are not equal Declaration public static bool operator !=(FileBase<InternalFileType, FileType> file1, IFile file2) Parameters Type Name Description FileBase<InternalFileType, FileType> file1 File 1 IFile file2 File 2 Returns Type Description bool True if they are not equal, false otherwise | Edit this page View Source operator <(FileBase<InternalFileType, FileType>, IFile) Less than Declaration public static bool operator <(FileBase<InternalFileType, FileType> file1, IFile file2) Parameters Type Name Description FileBase<InternalFileType, FileType> file1 File 1 IFile file2 File 2 Returns Type Description bool The result | Edit this page View Source operator <=(FileBase<InternalFileType, FileType>, IFile) Less than or equal Declaration public static bool operator <=(FileBase<InternalFileType, FileType> file1, IFile file2) Parameters Type Name Description FileBase<InternalFileType, FileType> file1 File 1 IFile file2 File 2 Returns Type Description bool The result Implements IFile IComparable<T> IComparable IEquatable<T>"
  },
  "api/FileCurator.BaseClasses.FileSystemBase.html": {
    "href": "api/FileCurator.BaseClasses.FileSystemBase.html",
    "title": "Class FileSystemBase | FileCurator API Reference",
    "keywords": "Class FileSystemBase File system base class Inheritance object FileSystemBase LocalFileSystemBase FtpFileSystem HttpFileSystem MemoryFileSystem ResourceFileSystem Implements IDisposable IFileSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.BaseClasses Assembly: FileCurator.dll Syntax public abstract class FileSystemBase : IDisposable, IFileSystem Constructors | Edit this page View Source FileSystemBase() Constructor Declaration protected FileSystemBase() See Also IDisposable IFileSystem Properties | Edit this page View Source HandleRegex Regex used to determine if the file system can handle the path Declaration protected Regex HandleRegex { get; } Property Value Type Description Regex See Also IDisposable IFileSystem | Edit this page View Source HandleRegexString Regex string used to determine if the file system can handle the path Declaration protected abstract string HandleRegexString { get; } Property Value Type Description string See Also IDisposable IFileSystem | Edit this page View Source Name Name of the file system Declaration public abstract string Name { get; } Property Value Type Description string See Also IDisposable IFileSystem | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public abstract int Order { get; } Property Value Type Description int The order. See Also IDisposable IFileSystem Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected abstract string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in See Also IDisposable IFileSystem | Edit this page View Source CanHandle(string) Returns true if it can handle the path, false otherwise Declaration public bool CanHandle(string path) Parameters Type Name Description string path The path to check against Returns Type Description bool True if it can handle the path, false otherwise See Also IDisposable IFileSystem | Edit this page View Source Directory(string, Credentials?) Gets the directory representation for the directory Declaration public abstract IDirectory Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object See Also IDisposable IFileSystem | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IDisposable IFileSystem | Edit this page View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected abstract void Dispose(bool managed) Parameters Type Name Description bool managed true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IDisposable IFileSystem | Edit this page View Source File(string, Credentials?) Gets the class representation for the file Declaration public abstract IFile File(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object See Also IDisposable IFileSystem Implements IDisposable IFileSystem See Also IDisposable IFileSystem"
  },
  "api/FileCurator.BaseClasses.LocalFileSystemBase.html": {
    "href": "api/FileCurator.BaseClasses.LocalFileSystemBase.html",
    "title": "Class LocalFileSystemBase | FileCurator API Reference",
    "keywords": "Class LocalFileSystemBase Local file system base class Inheritance object FileSystemBase LocalFileSystemBase AbsoluteLocalFileSystem NetworkFileSystem RelativeLocalFileSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.Name FileSystemBase.Order FileSystemBase.HandleRegex FileSystemBase.HandleRegexString FileSystemBase.CanHandle(string) FileSystemBase.Dispose() FileSystemBase.AbsolutePath(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.BaseClasses Assembly: FileCurator.dll Syntax public abstract class LocalFileSystemBase : FileSystemBase, IDisposable, IFileSystem Constructors | Edit this page View Source LocalFileSystemBase() Constructor Declaration protected LocalFileSystemBase() See Also FileSystemBase Methods | Edit this page View Source Directory(string, Credentials?) Gets the directory representation for the directory Declaration public override IDirectory Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object Overrides FileSystemBase.Directory(string, Credentials?) See Also FileSystemBase | Edit this page View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool managed) Parameters Type Name Description bool managed true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides FileSystemBase.Dispose(bool) See Also FileSystemBase | Edit this page View Source File(string, Credentials?) Gets the class representation for the file Declaration public override IFile File(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object Overrides FileSystemBase.File(string, Credentials?) See Also FileSystemBase Implements IDisposable IFileSystem See Also FileSystemBase"
  },
  "api/FileCurator.BaseClasses.html": {
    "href": "api/FileCurator.BaseClasses.html",
    "title": "Namespace FileCurator.BaseClasses | FileCurator API Reference",
    "keywords": "Namespace FileCurator.BaseClasses Classes DirectoryBase<TInternalDirectoryType, TDirectoryType> Directory base class FileBase<InternalFileType, FileType> Directory base class FileSystemBase File system base class LocalFileSystemBase Local file system base class"
  },
  "api/FileCurator.Credentials.html": {
    "href": "api/FileCurator.Credentials.html",
    "title": "Class Credentials | FileCurator API Reference",
    "keywords": "Class Credentials Credentials info Inheritance object Credentials Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator Assembly: FileCurator.dll Syntax public class Credentials Properties | Edit this page View Source Domain Gets or sets the domain. Declaration public string? Domain { get; set; } Property Value Type Description string The domain. | Edit this page View Source NoCredentials Gets the no credentials. Declaration public static Credentials NoCredentials { get; } Property Value Type Description Credentials The no credentials. | Edit this page View Source Password Gets or sets the password. Declaration public string? Password { get; set; } Property Value Type Description string The password. | Edit this page View Source UseDefaultCredentials Gets or sets a value indicating whether [use default credentials]. Declaration public bool UseDefaultCredentials { get; set; } Property Value Type Description bool true if [use default credentials]; otherwise, false. | Edit this page View Source UserName Gets or sets the name of the user. Declaration public string? UserName { get; set; } Property Value Type Description string The name of the user. Methods | Edit this page View Source Equals(object) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode()"
  },
  "api/FileCurator.Data.FixedLength.BaseClasses.FieldBaseClass-1.html": {
    "href": "api/FileCurator.Data.FixedLength.BaseClasses.FieldBaseClass-1.html",
    "title": "Class FieldBaseClass<TField> | FileCurator API Reference",
    "keywords": "Class FieldBaseClass<TField> Field base class Inheritance object FieldBaseClass<TField> StringField Implements IField<TField> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Data.FixedLength.BaseClasses Assembly: FileCurator.dll Syntax public abstract class FieldBaseClass<TField> : IField<TField> Type Parameters Name Description TField The type of the field. Properties | Edit this page View Source Length Gets or sets the length. Declaration public int Length { get; set; } Property Value Type Description int The length. See Also IField<TField> | Edit this page View Source Value Gets or sets the value. Declaration public TField Value { get; set; } Property Value Type Description TField The value. See Also IField<TField> Methods | Edit this page View Source Parse(string, int, string) Parses the specified value. Declaration public abstract void Parse(string value, int length = -1, string fillerCharacter = \" \") Parameters Type Name Description string value The value. int length The length. string fillerCharacter The filler character. See Also IField<TField> | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also IField<TField> Implements IField<TField> See Also IField<TField>"
  },
  "api/FileCurator.Data.FixedLength.BaseClasses.FixedLengthBaseClass.html": {
    "href": "api/FileCurator.Data.FixedLength.BaseClasses.FixedLengthBaseClass.html",
    "title": "Class FixedLengthBaseClass | FileCurator API Reference",
    "keywords": "Class FixedLengthBaseClass Fixed length base class Inheritance object FileBaseClass<FixedLengthBaseClass> FixedLengthBaseClass Implements IGenericFile Inherited Members FileBaseClass<FixedLengthBaseClass>.Content FileBaseClass<FixedLengthBaseClass>.Meta FileBaseClass<FixedLengthBaseClass>.Title FileBaseClass<FixedLengthBaseClass>.CompareTo(object) FileBaseClass<FixedLengthBaseClass>.CompareTo(FixedLengthBaseClass) FileBaseClass<FixedLengthBaseClass>.Equals(FixedLengthBaseClass) FileBaseClass<FixedLengthBaseClass>.Equals(object) FileBaseClass<FixedLengthBaseClass>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Data.FixedLength.BaseClasses Assembly: FileCurator.dll Syntax public abstract class FixedLengthBaseClass : FileBaseClass<FixedLengthBaseClass>, IGenericFile Constructors | Edit this page View Source FixedLengthBaseClass() Initializes a new instance of the FixedLengthBaseClass class. Declaration protected FixedLengthBaseClass() See Also FileBaseClass<FormatFileType> Properties | Edit this page View Source Records Gets or sets the records. Declaration protected IList<IRecord> Records { get; set; } Property Value Type Description IList<IRecord> The records. See Also FileBaseClass<FormatFileType> Methods | Edit this page View Source Parse(string, int) Parses the specified value. Declaration public abstract void Parse(string Value, int Length = -1) Parameters Type Name Description string Value The value. int Length The length. See Also FileBaseClass<FormatFileType> | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also FileBaseClass<FormatFileType> Implements IGenericFile See Also FileBaseClass<FormatFileType>"
  },
  "api/FileCurator.Data.FixedLength.BaseClasses.RecordBase-1.html": {
    "href": "api/FileCurator.Data.FixedLength.BaseClasses.RecordBase-1.html",
    "title": "Class RecordBase<TField> | FileCurator API Reference",
    "keywords": "Class RecordBase<TField> Record base class Inheritance object RecordBase<TField> Implements IRecord IList<IField<TField>> ICollection<IField<TField>> IEnumerable<IField<TField>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Data.FixedLength.BaseClasses Assembly: FileCurator.dll Syntax public abstract class RecordBase<TField> : IRecord, IList<IField<TField>>, ICollection<IField<TField>>, IEnumerable<IField<TField>>, IEnumerable Type Parameters Name Description TField The type of the field. Constructors | Edit this page View Source RecordBase() Constructor Declaration protected RecordBase() See Also IRecord Properties | Edit this page View Source Count Number of Fields Declaration public int Count { get; } Property Value Type Description int See Also IRecord | Edit this page View Source Fields The list of fields Declaration protected IList<IField<TField>> Fields { get; } Property Value Type Description IList<IField<TField>> See Also IRecord | Edit this page View Source IsReadOnly Is the file read only Declaration public bool IsReadOnly { get; } Property Value Type Description bool See Also IRecord | Edit this page View Source this[int] Individual records Declaration public IField<TField> this[int index] { get; set; } Parameters Type Name Description int index The record that you want to get Property Value Type Description IField<TField> The record requested See Also IRecord | Edit this page View Source Length Length Declaration public int Length { get; set; } Property Value Type Description int See Also IRecord Methods | Edit this page View Source Add(IField<TField>) Adds a Field to the file Declaration public void Add(IField<TField> item) Parameters Type Name Description IField<TField> item Field to add See Also IRecord | Edit this page View Source Clear() Clears the file Declaration public void Clear() See Also IRecord | Edit this page View Source Contains(IField<TField>) Determines if the file contains a Field Declaration public bool Contains(IField<TField> item) Parameters Type Name Description IField<TField> item Field to check for Returns Type Description bool True if it does, false otherwise See Also IRecord | Edit this page View Source CopyTo(IField<TField>[], int) Copies the delimited file to an array Declaration public void CopyTo(IField<TField>[] array, int arrayIndex) Parameters Type Name Description IField<TField>[] array Array to copy to int arrayIndex Index to start at See Also IRecord | Edit this page View Source GetEnumerator() Gets the enumerator for the file Declaration public IEnumerator<IField<TField>> GetEnumerator() Returns Type Description IEnumerator<IField<TField>> The enumerator for this file See Also IRecord | Edit this page View Source IndexOf(IField<TField>) Index of a specific Field Declaration public int IndexOf(IField<TField> item) Parameters Type Name Description IField<TField> item Field to search for Returns Type Description int The index of a specific Field See Also IRecord | Edit this page View Source Insert(int, IField<TField>) Inserts a Field at a specific index Declaration public void Insert(int index, IField<TField> item) Parameters Type Name Description int index Index to insert at IField<TField> item Field to insert See Also IRecord | Edit this page View Source Parse(string, int) Parses the record Declaration public abstract void Parse(string value, int length = -1) Parameters Type Name Description string value Value int length Length of the record See Also IRecord | Edit this page View Source Remove(IField<TField>) Removes a Field from the file Declaration public bool Remove(IField<TField> item) Parameters Type Name Description IField<TField> item Field to remove Returns Type Description bool True if it is removed, false otherwise See Also IRecord | Edit this page View Source RemoveAt(int) Removes a Field at a specific index Declaration public void RemoveAt(int index) Parameters Type Name Description int index Index of the Field to remove See Also IRecord | Edit this page View Source ToString() Converts the record to a string Declaration public override string ToString() Returns Type Description string The record as a string Overrides object.ToString() See Also IRecord Implements IRecord IList<T> ICollection<T> IEnumerable<T> IEnumerable See Also IRecord"
  },
  "api/FileCurator.Data.FixedLength.BaseClasses.html": {
    "href": "api/FileCurator.Data.FixedLength.BaseClasses.html",
    "title": "Namespace FileCurator.Data.FixedLength.BaseClasses | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Data.FixedLength.BaseClasses Classes FieldBaseClass<TField> Field base class FixedLengthBaseClass Fixed length base class RecordBase<TField> Record base class"
  },
  "api/FileCurator.Data.FixedLength.Interfaces.IField-1.html": {
    "href": "api/FileCurator.Data.FixedLength.Interfaces.IField-1.html",
    "title": "Interface IField<TField> | FileCurator API Reference",
    "keywords": "Interface IField<TField> Field interface Namespace: FileCurator.Data.FixedLength.Interfaces Assembly: FileCurator.dll Syntax public interface IField<TField> Type Parameters Name Description TField The type of the field. Properties | Edit this page View Source Length Gets or sets the length. Declaration int Length { get; set; } Property Value Type Description int The length. | Edit this page View Source Value Gets or sets the value. Declaration TField Value { get; set; } Property Value Type Description TField The value. Methods | Edit this page View Source Parse(string, int, string) Parses the specified value. Declaration void Parse(string value, int length = -1, string fillerCharacter = \" \") Parameters Type Name Description string value The value. int length The length. string fillerCharacter The filler character."
  },
  "api/FileCurator.Data.FixedLength.Interfaces.IRecord.html": {
    "href": "api/FileCurator.Data.FixedLength.Interfaces.IRecord.html",
    "title": "Interface IRecord | FileCurator API Reference",
    "keywords": "Interface IRecord Record interface Namespace: FileCurator.Data.FixedLength.Interfaces Assembly: FileCurator.dll Syntax public interface IRecord Properties | Edit this page View Source Length Gets or sets the length. Declaration int Length { get; set; } Property Value Type Description int The length. Methods | Edit this page View Source Parse(string, int) Parses the specified value. Declaration void Parse(string value, int length = -1) Parameters Type Name Description string value The value. int length The length."
  },
  "api/FileCurator.Data.FixedLength.Interfaces.html": {
    "href": "api/FileCurator.Data.FixedLength.Interfaces.html",
    "title": "Namespace FileCurator.Data.FixedLength.Interfaces | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Data.FixedLength.Interfaces Interfaces IField<TField> Field interface IRecord Record interface"
  },
  "api/FileCurator.Data.FixedLength.StringField.html": {
    "href": "api/FileCurator.Data.FixedLength.StringField.html",
    "title": "Class StringField | FileCurator API Reference",
    "keywords": "Class StringField Basic string field Inheritance object FieldBaseClass<string> StringField Implements IField<string> Inherited Members FieldBaseClass<string>.Length FieldBaseClass<string>.Value FieldBaseClass<string>.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Data.FixedLength Assembly: FileCurator.dll Syntax public class StringField : FieldBaseClass<string>, IField<string> Constructors | Edit this page View Source StringField(string, int) Initializes a new instance of the StringField class. Declaration public StringField(string value, int length = -1) Parameters Type Name Description string value The value. int length The length. See Also FieldBaseClass<TField> Methods | Edit this page View Source Parse(string, int, string) Parses the specified value. Declaration public override void Parse(string value, int length = -1, string fillerCharacter = \" \") Parameters Type Name Description string value The value. int length The length. string fillerCharacter The filler character. Overrides FieldBaseClass<string>.Parse(string, int, string) See Also FieldBaseClass<TField> Implements IField<TField> See Also FieldBaseClass<TField>"
  },
  "api/FileCurator.Data.FixedLength.html": {
    "href": "api/FileCurator.Data.FixedLength.html",
    "title": "Namespace FileCurator.Data.FixedLength | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Data.FixedLength Classes StringField Basic string field"
  },
  "api/FileCurator.Default.AbsoluteLocalFileSystem.html": {
    "href": "api/FileCurator.Default.AbsoluteLocalFileSystem.html",
    "title": "Class AbsoluteLocalFileSystem | FileCurator API Reference",
    "keywords": "Class AbsoluteLocalFileSystem Absolute local file system Inheritance object FileSystemBase LocalFileSystemBase AbsoluteLocalFileSystem Implements IDisposable IFileSystem Inherited Members LocalFileSystemBase.Directory(string, Credentials) LocalFileSystemBase.File(string, Credentials) LocalFileSystemBase.Dispose(bool) FileSystemBase.HandleRegex FileSystemBase.CanHandle(string) FileSystemBase.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class AbsoluteLocalFileSystem : LocalFileSystemBase, IDisposable, IFileSystem Properties | Edit this page View Source HandleRegexString Relative starter Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString | Edit this page View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) Implements IDisposable IFileSystem"
  },
  "api/FileCurator.Default.Ftp.FtpDirectory.html": {
    "href": "api/FileCurator.Default.Ftp.FtpDirectory.html",
    "title": "Class FtpDirectory | FileCurator API Reference",
    "keywords": "Class FtpDirectory Ftp directory Inheritance object DirectoryBase<Uri, FtpDirectory> FtpDirectory Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members DirectoryBase<Uri, FtpDirectory>.Accessed DirectoryBase<Uri, FtpDirectory>.Created DirectoryBase<Uri, FtpDirectory>.Credentials DirectoryBase<Uri, FtpDirectory>.Exists DirectoryBase<Uri, FtpDirectory>.FullName DirectoryBase<Uri, FtpDirectory>.Modified DirectoryBase<Uri, FtpDirectory>.Name DirectoryBase<Uri, FtpDirectory>.Parent DirectoryBase<Uri, FtpDirectory>.Root DirectoryBase<Uri, FtpDirectory>.Size DirectoryBase<Uri, FtpDirectory>.InternalDirectory DirectoryBase<Uri, FtpDirectory>.CompareTo(IDirectory) DirectoryBase<Uri, FtpDirectory>.CompareTo(object) DirectoryBase<Uri, FtpDirectory>.CopyTo(IDirectory, CopyOptions) DirectoryBase<Uri, FtpDirectory>.CopyToAsync(IDirectory, CopyOptions) DirectoryBase<Uri, FtpDirectory>.Create() DirectoryBase<Uri, FtpDirectory>.CreateAsync() DirectoryBase<Uri, FtpDirectory>.Delete() DirectoryBase<Uri, FtpDirectory>.DeleteAsync() DirectoryBase<Uri, FtpDirectory>.EnumerateDirectories(string, SearchOption) DirectoryBase<Uri, FtpDirectory>.EnumerateDirectories(Predicate<IDirectory>, SearchOption) DirectoryBase<Uri, FtpDirectory>.EnumerateFiles(string, SearchOption) DirectoryBase<Uri, FtpDirectory>.EnumerateFiles(Predicate<IFile>, SearchOption) DirectoryBase<Uri, FtpDirectory>.Equals(object) DirectoryBase<Uri, FtpDirectory>.Equals(IDirectory) DirectoryBase<Uri, FtpDirectory>.GetEnumerator() DirectoryBase<Uri, FtpDirectory>.GetHashCode() DirectoryBase<Uri, FtpDirectory>.MoveTo(IDirectory) DirectoryBase<Uri, FtpDirectory>.MoveToAsync(IDirectory) DirectoryBase<Uri, FtpDirectory>.Rename(string) DirectoryBase<Uri, FtpDirectory>.RenameAsync(string) DirectoryBase<Uri, FtpDirectory>.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default.Ftp Assembly: FileCurator.dll Syntax public class FtpDirectory : DirectoryBase<Uri, FtpDirectory>, IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> Constructors | Edit this page View Source FtpDirectory() Constructor Declaration public FtpDirectory() See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source FtpDirectory(string, Credentials?) Constructor Declaration public FtpDirectory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source FtpDirectory(Uri?, Credentials?) Constructor Declaration public FtpDirectory(Uri? directory, Credentials? credentials = null) Parameters Type Name Description Uri directory Internal directory Credentials credentials The credentials. See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> Properties | Edit this page View Source Accessed returns now Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides DirectoryBase<Uri, FtpDirectory>.Accessed See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Created returns now Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides DirectoryBase<Uri, FtpDirectory>.Created See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Exists returns true Declaration public override bool Exists { get; } Property Value Type Description bool Overrides DirectoryBase<Uri, FtpDirectory>.Exists See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides DirectoryBase<Uri, FtpDirectory>.FullName See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Modified returns now Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides DirectoryBase<Uri, FtpDirectory>.Modified See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Name Full path Declaration public override string Name { get; } Property Value Type Description string Overrides DirectoryBase<Uri, FtpDirectory>.Name See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Parent Full path Declaration public override IDirectory? Parent { get; } Property Value Type Description IDirectory Overrides DirectoryBase<Uri, FtpDirectory>.Parent See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Root Root Declaration public override IDirectory? Root { get; } Property Value Type Description IDirectory Overrides DirectoryBase<Uri, FtpDirectory>.Root See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Size Size (returns 0) Declaration public override long Size { get; } Property Value Type Description long Overrides DirectoryBase<Uri, FtpDirectory>.Size See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> Methods | Edit this page View Source CopyTo(IDirectory, CopyOptions) Copies the directory to the specified parent directory Declaration public override IDirectory CopyTo(IDirectory directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Options Returns Type Description IDirectory Newly created directory Overrides DirectoryBase<Uri, FtpDirectory>.CopyTo(IDirectory, CopyOptions) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Create() Not used Declaration public override IDirectory Create() Returns Type Description IDirectory Overrides DirectoryBase<Uri, FtpDirectory>.Create() See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Delete() Not used Declaration public override IDirectory Delete() Returns Type Description IDirectory Overrides DirectoryBase<Uri, FtpDirectory>.Delete() See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source EnumerateDirectories(string, SearchOption) Not used Declaration public override IEnumerable<IDirectory> EnumerateDirectories(string searchPattern, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern SearchOption options Returns Type Description IEnumerable<IDirectory> Overrides DirectoryBase<Uri, FtpDirectory>.EnumerateDirectories(string, SearchOption) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source EnumerateFiles(string, SearchOption) Not used Declaration public override IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern SearchOption options Returns Type Description IEnumerable<IFile> Overrides DirectoryBase<Uri, FtpDirectory>.EnumerateFiles(string, SearchOption) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Rename(string) Not used Declaration public override IDirectory Rename(string name) Parameters Type Name Description string name Returns Type Description IDirectory Overrides DirectoryBase<Uri, FtpDirectory>.Rename(string) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T> See Also DirectoryBase<TInternalDirectoryType, TDirectoryType>"
  },
  "api/FileCurator.Default.Ftp.FtpFile.html": {
    "href": "api/FileCurator.Default.Ftp.FtpFile.html",
    "title": "Class FtpFile | FileCurator API Reference",
    "keywords": "Class FtpFile Ftp File Inheritance object FileBase<Uri, FtpFile> FtpFile Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members FileBase<Uri, FtpFile>.Accessed FileBase<Uri, FtpFile>.Created FileBase<Uri, FtpFile>.Credentials FileBase<Uri, FtpFile>.Directory FileBase<Uri, FtpFile>.Exists FileBase<Uri, FtpFile>.Extension FileBase<Uri, FtpFile>.FullName FileBase<Uri, FtpFile>.Length FileBase<Uri, FtpFile>.Modified FileBase<Uri, FtpFile>.Name FileBase<Uri, FtpFile>.FormatManager FileBase<Uri, FtpFile>.InternalFile FileBase<Uri, FtpFile>.CompareTo(IFile) FileBase<Uri, FtpFile>.CompareTo(object) FileBase<Uri, FtpFile>.CopyTo(IDirectory, bool) FileBase<Uri, FtpFile>.CopyToAsync(IDirectory, bool) FileBase<Uri, FtpFile>.Delete() FileBase<Uri, FtpFile>.DeleteAsync() FileBase<Uri, FtpFile>.Equals(object) FileBase<Uri, FtpFile>.Equals(IFile) FileBase<Uri, FtpFile>.GetHashCode() FileBase<Uri, FtpFile>.MoveTo(IDirectory) FileBase<Uri, FtpFile>.MoveToAsync(IDirectory) FileBase<Uri, FtpFile>.Parse<TFile>() FileBase<Uri, FtpFile>.Parse() FileBase<Uri, FtpFile>.ParseAsync<TFile>() FileBase<Uri, FtpFile>.ParseAsync() FileBase<Uri, FtpFile>.Read() FileBase<Uri, FtpFile>.ReadAsync() FileBase<Uri, FtpFile>.ReadBinary() FileBase<Uri, FtpFile>.ReadBinaryAsync() FileBase<Uri, FtpFile>.Rename(string) FileBase<Uri, FtpFile>.RenameAsync(string) FileBase<Uri, FtpFile>.ToString() FileBase<Uri, FtpFile>.Write(string, FileMode, Encoding) FileBase<Uri, FtpFile>.Write(byte[], FileMode) FileBase<Uri, FtpFile>.Write(IGenericFile, FileMode) FileBase<Uri, FtpFile>.WriteAsync(string, FileMode, Encoding) FileBase<Uri, FtpFile>.WriteAsync(byte[], FileMode) FileBase<Uri, FtpFile>.WriteAsync(IGenericFile, FileMode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default.Ftp Assembly: FileCurator.dll Syntax public class FtpFile : FileBase<Uri, FtpFile>, IFile, IComparable<IFile>, IComparable, IEquatable<IFile> Constructors | Edit this page View Source FtpFile() Constructor Declaration public FtpFile() See Also FileBase<InternalFileType, FileType> | Edit this page View Source FtpFile(string, Credentials?) Constructor Declaration public FtpFile(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. See Also FileBase<InternalFileType, FileType> | Edit this page View Source FtpFile(Uri?, Credentials?) Constructor Declaration public FtpFile(Uri? file, Credentials? credentials) Parameters Type Name Description Uri file File to use Credentials credentials The credentials. See Also FileBase<InternalFileType, FileType> Properties | Edit this page View Source Accessed Time accessed (Just returns now) Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides FileBase<Uri, FtpFile>.Accessed See Also FileBase<InternalFileType, FileType> | Edit this page View Source Created Time created (Just returns now) Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides FileBase<Uri, FtpFile>.Created See Also FileBase<InternalFileType, FileType> | Edit this page View Source Directory Directory base path Declaration public override IDirectory? Directory { get; } Property Value Type Description IDirectory Overrides FileBase<Uri, FtpFile>.Directory See Also FileBase<InternalFileType, FileType> | Edit this page View Source Exists Does it exist? Always true. Declaration public override bool Exists { get; } Property Value Type Description bool Overrides FileBase<Uri, FtpFile>.Exists See Also FileBase<InternalFileType, FileType> | Edit this page View Source Extension Extension (always empty) Declaration public override string Extension { get; } Property Value Type Description string Overrides FileBase<Uri, FtpFile>.Extension See Also FileBase<InternalFileType, FileType> | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides FileBase<Uri, FtpFile>.FullName See Also FileBase<InternalFileType, FileType> | Edit this page View Source Length Size of the file (always 0) Declaration public override long Length { get; } Property Value Type Description long Overrides FileBase<Uri, FtpFile>.Length See Also FileBase<InternalFileType, FileType> | Edit this page View Source Modified Time modified (just returns now) Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides FileBase<Uri, FtpFile>.Modified See Also FileBase<InternalFileType, FileType> | Edit this page View Source Name Absolute path of the file (same as FullName) Declaration public override string Name { get; } Property Value Type Description string Overrides FileBase<Uri, FtpFile>.Name See Also FileBase<InternalFileType, FileType> Methods | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration public override IFile CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file Overrides FileBase<Uri, FtpFile>.CopyTo(IDirectory, bool) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Delete() Delete (does nothing) Declaration public override string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) Overrides FileBase<Uri, FtpFile>.Delete() See Also FileBase<InternalFileType, FileType> | Edit this page View Source MoveTo(IDirectory) Moves the file (not used) Declaration public override IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Not used Returns Type Description IFile Overrides FileBase<Uri, FtpFile>.MoveTo(IDirectory) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Read() Reads the web page Declaration public override string Read() Returns Type Description string The content as a string Overrides FileBase<Uri, FtpFile>.Read() See Also FileBase<InternalFileType, FileType> | Edit this page View Source ReadBinary() Reads the web page Declaration public override byte[] ReadBinary() Returns Type Description byte[] The content as a byte array Overrides FileBase<Uri, FtpFile>.ReadBinary() See Also FileBase<InternalFileType, FileType> | Edit this page View Source Rename(string) Renames the file (not used) Declaration public override IFile Rename(string newName) Parameters Type Name Description string newName Not used Returns Type Description IFile Overrides FileBase<Uri, FtpFile>.Rename(string) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Write(byte[], FileMode) Not used Declaration public override byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Not used FileMode mode Not used Returns Type Description byte[] The result of the write or original content Overrides FileBase<Uri, FtpFile>.Write(byte[], FileMode) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Write(string, FileMode, Encoding?) Not used Declaration public override string Write(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Not used FileMode mode Not used Encoding encoding Not used Returns Type Description string The result of the write or original content Overrides FileBase<Uri, FtpFile>.Write(string, FileMode, Encoding) See Also FileBase<InternalFileType, FileType> Implements IFile IComparable<T> IComparable IEquatable<T> See Also FileBase<InternalFileType, FileType>"
  },
  "api/FileCurator.Default.Ftp.FtpFileSystem.html": {
    "href": "api/FileCurator.Default.Ftp.FtpFileSystem.html",
    "title": "Class FtpFileSystem | FileCurator API Reference",
    "keywords": "Class FtpFileSystem Ftp file system Inheritance object FileSystemBase FtpFileSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.HandleRegex FileSystemBase.CanHandle(string) FileSystemBase.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default.Ftp Assembly: FileCurator.dll Syntax public class FtpFileSystem : FileSystemBase, IDisposable, IFileSystem Properties | Edit this page View Source HandleRegexString Relative starter Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString See Also FileSystemBase | Edit this page View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name See Also FileSystemBase | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order See Also FileSystemBase Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) See Also FileSystemBase | Edit this page View Source Directory(string, Credentials?) Gets the directory representation for the directory Declaration public override IDirectory Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object Overrides FileSystemBase.Directory(string, Credentials?) See Also FileSystemBase | Edit this page View Source Dispose(bool) Used to dispose of any resources Declaration protected override void Dispose(bool managed) Parameters Type Name Description bool managed Overrides FileSystemBase.Dispose(bool) See Also FileSystemBase | Edit this page View Source File(string, Credentials?) Gets the class representation for the file Declaration public override IFile File(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object Overrides FileSystemBase.File(string, Credentials?) See Also FileSystemBase Implements IDisposable IFileSystem See Also FileSystemBase"
  },
  "api/FileCurator.Default.Ftp.html": {
    "href": "api/FileCurator.Default.Ftp.html",
    "title": "Namespace FileCurator.Default.Ftp | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Default.Ftp Classes FtpDirectory Ftp directory FtpFile Ftp File FtpFileSystem Ftp file system"
  },
  "api/FileCurator.Default.HttpFileSystem.html": {
    "href": "api/FileCurator.Default.HttpFileSystem.html",
    "title": "Class HttpFileSystem | FileCurator API Reference",
    "keywords": "Class HttpFileSystem HTTP file system Inheritance object FileSystemBase HttpFileSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.HandleRegex FileSystemBase.CanHandle(string) FileSystemBase.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class HttpFileSystem : FileSystemBase, IDisposable, IFileSystem Constructors | Edit this page View Source HttpFileSystem(InternalHttpClientFactory) Initializes a new instance of the HttpFileSystem class. Declaration public HttpFileSystem(InternalHttpClientFactory httpClientFactory) Parameters Type Name Description InternalHttpClientFactory httpClientFactory The HTTP client factory. Properties | Edit this page View Source HandleRegexString Relative starter Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString | Edit this page View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) | Edit this page View Source Directory(string, Credentials?) Gets the directory representation for the directory Declaration public override IDirectory Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object Overrides FileSystemBase.Directory(string, Credentials?) | Edit this page View Source Dispose(bool) Used to dispose of any resources Declaration protected override void Dispose(bool managed) Parameters Type Name Description bool managed Overrides FileSystemBase.Dispose(bool) | Edit this page View Source File(string, Credentials?) Gets the class representation for the file Declaration public override IFile File(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object Overrides FileSystemBase.File(string, Credentials?) Implements IDisposable IFileSystem"
  },
  "api/FileCurator.Default.LocalDirectory.html": {
    "href": "api/FileCurator.Default.LocalDirectory.html",
    "title": "Class LocalDirectory | FileCurator API Reference",
    "keywords": "Class LocalDirectory Local directory class Inheritance object DirectoryBase<DirectoryInfo, LocalDirectory> LocalDirectory Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members DirectoryBase<DirectoryInfo, LocalDirectory>.Accessed DirectoryBase<DirectoryInfo, LocalDirectory>.Created DirectoryBase<DirectoryInfo, LocalDirectory>.Credentials DirectoryBase<DirectoryInfo, LocalDirectory>.Exists DirectoryBase<DirectoryInfo, LocalDirectory>.FullName DirectoryBase<DirectoryInfo, LocalDirectory>.Modified DirectoryBase<DirectoryInfo, LocalDirectory>.Name DirectoryBase<DirectoryInfo, LocalDirectory>.Parent DirectoryBase<DirectoryInfo, LocalDirectory>.Root DirectoryBase<DirectoryInfo, LocalDirectory>.Size DirectoryBase<DirectoryInfo, LocalDirectory>.InternalDirectory DirectoryBase<DirectoryInfo, LocalDirectory>.CompareTo(IDirectory) DirectoryBase<DirectoryInfo, LocalDirectory>.CompareTo(object) DirectoryBase<DirectoryInfo, LocalDirectory>.CopyTo(IDirectory, CopyOptions) DirectoryBase<DirectoryInfo, LocalDirectory>.CopyToAsync(IDirectory, CopyOptions) DirectoryBase<DirectoryInfo, LocalDirectory>.Create() DirectoryBase<DirectoryInfo, LocalDirectory>.CreateAsync() DirectoryBase<DirectoryInfo, LocalDirectory>.Delete() DirectoryBase<DirectoryInfo, LocalDirectory>.DeleteAsync() DirectoryBase<DirectoryInfo, LocalDirectory>.EnumerateDirectories(string, SearchOption) DirectoryBase<DirectoryInfo, LocalDirectory>.EnumerateDirectories(Predicate<IDirectory>, SearchOption) DirectoryBase<DirectoryInfo, LocalDirectory>.EnumerateFiles(string, SearchOption) DirectoryBase<DirectoryInfo, LocalDirectory>.EnumerateFiles(Predicate<IFile>, SearchOption) DirectoryBase<DirectoryInfo, LocalDirectory>.Equals(object) DirectoryBase<DirectoryInfo, LocalDirectory>.Equals(IDirectory) DirectoryBase<DirectoryInfo, LocalDirectory>.GetEnumerator() DirectoryBase<DirectoryInfo, LocalDirectory>.GetHashCode() DirectoryBase<DirectoryInfo, LocalDirectory>.MoveTo(IDirectory) DirectoryBase<DirectoryInfo, LocalDirectory>.MoveToAsync(IDirectory) DirectoryBase<DirectoryInfo, LocalDirectory>.Rename(string) DirectoryBase<DirectoryInfo, LocalDirectory>.RenameAsync(string) DirectoryBase<DirectoryInfo, LocalDirectory>.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class LocalDirectory : DirectoryBase<DirectoryInfo, LocalDirectory>, IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> Constructors | Edit this page View Source LocalDirectory() Constructor Declaration public LocalDirectory() | Edit this page View Source LocalDirectory(DirectoryInfo) Constructor Declaration public LocalDirectory(DirectoryInfo directory) Parameters Type Name Description DirectoryInfo directory Internal directory | Edit this page View Source LocalDirectory(string) Constructor Declaration public LocalDirectory(string path) Parameters Type Name Description string path Path to the directory Properties | Edit this page View Source Accessed Time accessed (UTC time) Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Accessed | Edit this page View Source Created Time created (UTC time) Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Created | Edit this page View Source Exists Does the directory exist? Declaration public override bool Exists { get; } Property Value Type Description bool Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Exists | Edit this page View Source FullName Full path of the directory Declaration public override string FullName { get; } Property Value Type Description string Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.FullName | Edit this page View Source Modified Time modified (UTC time) Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Modified | Edit this page View Source Name Name of the directory Declaration public override string Name { get; } Property Value Type Description string Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Name | Edit this page View Source Parent Parent directory Declaration public override IDirectory Parent { get; } Property Value Type Description IDirectory Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Parent | Edit this page View Source Root Root directory Declaration public override IDirectory Root { get; } Property Value Type Description IDirectory Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Root | Edit this page View Source Size Size of the directory Declaration public override long Size { get; } Property Value Type Description long Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Size Methods | Edit this page View Source Create() Creates the directory Declaration public override IDirectory Create() Returns Type Description IDirectory Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Create() | Edit this page View Source Delete() Deletes the directory Declaration public override IDirectory Delete() Returns Type Description IDirectory Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Delete() | Edit this page View Source EnumerateDirectories(string, SearchOption) Enumerates directories under this directory Declaration public override IEnumerable<IDirectory> EnumerateDirectories(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern SearchOption options Search options Returns Type Description IEnumerable<IDirectory> List of directories under this directory Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.EnumerateDirectories(string, SearchOption) | Edit this page View Source EnumerateFiles(string, SearchOption) Enumerates files under this directory Declaration public override IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern SearchOption options Search options Returns Type Description IEnumerable<IFile> List of files under this directory Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.EnumerateFiles(string, SearchOption) | Edit this page View Source Rename(string) Renames the directory Declaration public override IDirectory Rename(string name) Parameters Type Name Description string name Name of the new directory Returns Type Description IDirectory Overrides DirectoryBase<DirectoryInfo, LocalDirectory>.Rename(string) Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T>"
  },
  "api/FileCurator.Default.LocalFile.html": {
    "href": "api/FileCurator.Default.LocalFile.html",
    "title": "Class LocalFile | FileCurator API Reference",
    "keywords": "Class LocalFile Basic local file class Inheritance object FileBase<FileInfo, LocalFile> LocalFile Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members FileBase<FileInfo, LocalFile>.Accessed FileBase<FileInfo, LocalFile>.Created FileBase<FileInfo, LocalFile>.Credentials FileBase<FileInfo, LocalFile>.Directory FileBase<FileInfo, LocalFile>.Exists FileBase<FileInfo, LocalFile>.Extension FileBase<FileInfo, LocalFile>.FullName FileBase<FileInfo, LocalFile>.Length FileBase<FileInfo, LocalFile>.Modified FileBase<FileInfo, LocalFile>.Name FileBase<FileInfo, LocalFile>.FormatManager FileBase<FileInfo, LocalFile>.InternalFile FileBase<FileInfo, LocalFile>.CompareTo(IFile) FileBase<FileInfo, LocalFile>.CompareTo(object) FileBase<FileInfo, LocalFile>.CopyTo(IDirectory, bool) FileBase<FileInfo, LocalFile>.CopyToAsync(IDirectory, bool) FileBase<FileInfo, LocalFile>.Delete() FileBase<FileInfo, LocalFile>.DeleteAsync() FileBase<FileInfo, LocalFile>.Equals(object) FileBase<FileInfo, LocalFile>.Equals(IFile) FileBase<FileInfo, LocalFile>.GetHashCode() FileBase<FileInfo, LocalFile>.MoveTo(IDirectory) FileBase<FileInfo, LocalFile>.MoveToAsync(IDirectory) FileBase<FileInfo, LocalFile>.Parse<TFile>() FileBase<FileInfo, LocalFile>.Parse() FileBase<FileInfo, LocalFile>.ParseAsync<TFile>() FileBase<FileInfo, LocalFile>.ParseAsync() FileBase<FileInfo, LocalFile>.Read() FileBase<FileInfo, LocalFile>.ReadAsync() FileBase<FileInfo, LocalFile>.ReadBinary() FileBase<FileInfo, LocalFile>.ReadBinaryAsync() FileBase<FileInfo, LocalFile>.Rename(string) FileBase<FileInfo, LocalFile>.RenameAsync(string) FileBase<FileInfo, LocalFile>.ToString() FileBase<FileInfo, LocalFile>.Write(string, FileMode, Encoding) FileBase<FileInfo, LocalFile>.Write(byte[], FileMode) FileBase<FileInfo, LocalFile>.Write(IGenericFile, FileMode) FileBase<FileInfo, LocalFile>.WriteAsync(string, FileMode, Encoding) FileBase<FileInfo, LocalFile>.WriteAsync(byte[], FileMode) FileBase<FileInfo, LocalFile>.WriteAsync(IGenericFile, FileMode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class LocalFile : FileBase<FileInfo, LocalFile>, IFile, IComparable<IFile>, IComparable, IEquatable<IFile> Constructors | Edit this page View Source LocalFile() Constructor Declaration public LocalFile() | Edit this page View Source LocalFile(FileInfo) Constructor Declaration public LocalFile(FileInfo file) Parameters Type Name Description FileInfo file File to use | Edit this page View Source LocalFile(string) Constructor Declaration public LocalFile(string path) Parameters Type Name Description string path Path to the file Properties | Edit this page View Source Accessed Last time accessed (UTC time) Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides FileBase<FileInfo, LocalFile>.Accessed | Edit this page View Source Created Time created (UTC time) Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides FileBase<FileInfo, LocalFile>.Created | Edit this page View Source Directory Directory the file is within Declaration public override IDirectory Directory { get; } Property Value Type Description IDirectory Overrides FileBase<FileInfo, LocalFile>.Directory | Edit this page View Source Exists Does the file exist? Declaration public override bool Exists { get; } Property Value Type Description bool Overrides FileBase<FileInfo, LocalFile>.Exists | Edit this page View Source Extension File extension Declaration public override string Extension { get; } Property Value Type Description string Overrides FileBase<FileInfo, LocalFile>.Extension | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides FileBase<FileInfo, LocalFile>.FullName | Edit this page View Source Length Size of the file Declaration public override long Length { get; } Property Value Type Description long Overrides FileBase<FileInfo, LocalFile>.Length | Edit this page View Source Modified Time modified (UTC time) Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides FileBase<FileInfo, LocalFile>.Modified | Edit this page View Source Name Name of the file Declaration public override string Name { get; } Property Value Type Description string Overrides FileBase<FileInfo, LocalFile>.Name Methods | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration public override IFile CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file Overrides FileBase<FileInfo, LocalFile>.CopyTo(IDirectory, bool) | Edit this page View Source Delete() Deletes the file Declaration public override string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) Overrides FileBase<FileInfo, LocalFile>.Delete() | Edit this page View Source MoveTo(IDirectory) Moves the file to a new directory Declaration public override IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IFile Overrides FileBase<FileInfo, LocalFile>.MoveTo(IDirectory) | Edit this page View Source Read() Reads the file in as a string Declaration public override string Read() Returns Type Description string The file contents as a string Overrides FileBase<FileInfo, LocalFile>.Read() | Edit this page View Source ReadBinary() Reads a file as binary Declaration public override byte[] ReadBinary() Returns Type Description byte[] The file contents as a byte array Overrides FileBase<FileInfo, LocalFile>.ReadBinary() | Edit this page View Source Rename(string) Renames the file Declaration public override IFile Rename(string newName) Parameters Type Name Description string newName New name for the file Returns Type Description IFile Overrides FileBase<FileInfo, LocalFile>.Rename(string) | Edit this page View Source Write(byte[], FileMode) Writes content to the file Declaration public override byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode Mode to open the file as Returns Type Description byte[] The result of the write or original content Overrides FileBase<FileInfo, LocalFile>.Write(byte[], FileMode) | Edit this page View Source Write(string, FileMode, Encoding?) Writes content to the file Declaration public override string Write(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode Mode to open the file as Encoding encoding Encoding to use for the content Returns Type Description string The result of the write or original content Overrides FileBase<FileInfo, LocalFile>.Write(string, FileMode, Encoding) Implements IFile IComparable<T> IComparable IEquatable<T>"
  },
  "api/FileCurator.Default.Memory.MemoryDirectory.html": {
    "href": "api/FileCurator.Default.Memory.MemoryDirectory.html",
    "title": "Class MemoryDirectory | FileCurator API Reference",
    "keywords": "Class MemoryDirectory Memory directory Inheritance object DirectoryBase<string, MemoryDirectory> MemoryDirectory Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members DirectoryBase<string, MemoryDirectory>.Accessed DirectoryBase<string, MemoryDirectory>.Created DirectoryBase<string, MemoryDirectory>.Credentials DirectoryBase<string, MemoryDirectory>.Exists DirectoryBase<string, MemoryDirectory>.FullName DirectoryBase<string, MemoryDirectory>.Modified DirectoryBase<string, MemoryDirectory>.Name DirectoryBase<string, MemoryDirectory>.Parent DirectoryBase<string, MemoryDirectory>.Root DirectoryBase<string, MemoryDirectory>.Size DirectoryBase<string, MemoryDirectory>.InternalDirectory DirectoryBase<string, MemoryDirectory>.CompareTo(IDirectory) DirectoryBase<string, MemoryDirectory>.CompareTo(object) DirectoryBase<string, MemoryDirectory>.CopyTo(IDirectory, CopyOptions) DirectoryBase<string, MemoryDirectory>.CopyToAsync(IDirectory, CopyOptions) DirectoryBase<string, MemoryDirectory>.Create() DirectoryBase<string, MemoryDirectory>.CreateAsync() DirectoryBase<string, MemoryDirectory>.Delete() DirectoryBase<string, MemoryDirectory>.DeleteAsync() DirectoryBase<string, MemoryDirectory>.EnumerateDirectories(string, SearchOption) DirectoryBase<string, MemoryDirectory>.EnumerateDirectories(Predicate<IDirectory>, SearchOption) DirectoryBase<string, MemoryDirectory>.EnumerateFiles(string, SearchOption) DirectoryBase<string, MemoryDirectory>.EnumerateFiles(Predicate<IFile>, SearchOption) DirectoryBase<string, MemoryDirectory>.Equals(object) DirectoryBase<string, MemoryDirectory>.Equals(IDirectory) DirectoryBase<string, MemoryDirectory>.GetEnumerator() DirectoryBase<string, MemoryDirectory>.GetHashCode() DirectoryBase<string, MemoryDirectory>.MoveTo(IDirectory) DirectoryBase<string, MemoryDirectory>.MoveToAsync(IDirectory) DirectoryBase<string, MemoryDirectory>.Rename(string) DirectoryBase<string, MemoryDirectory>.RenameAsync(string) DirectoryBase<string, MemoryDirectory>.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default.Memory Assembly: FileCurator.dll Syntax public class MemoryDirectory : DirectoryBase<string, MemoryDirectory>, IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> Constructors | Edit this page View Source MemoryDirectory() Constructor Declaration public MemoryDirectory() See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source MemoryDirectory(string, Credentials?) Constructor Declaration public MemoryDirectory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> Properties | Edit this page View Source Accessed returns now Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides DirectoryBase<string, MemoryDirectory>.Accessed See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Created returns now Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides DirectoryBase<string, MemoryDirectory>.Created See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Exists returns true Declaration public override bool Exists { get; } Property Value Type Description bool Overrides DirectoryBase<string, MemoryDirectory>.Exists See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides DirectoryBase<string, MemoryDirectory>.FullName See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Modified returns now Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides DirectoryBase<string, MemoryDirectory>.Modified See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Name Full path Declaration public override string Name { get; } Property Value Type Description string Overrides DirectoryBase<string, MemoryDirectory>.Name See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Parent Full path Declaration public override IDirectory? Parent { get; } Property Value Type Description IDirectory Overrides DirectoryBase<string, MemoryDirectory>.Parent See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Root Root Declaration public override IDirectory Root { get; } Property Value Type Description IDirectory Overrides DirectoryBase<string, MemoryDirectory>.Root See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Size Size (returns 0) Declaration public override long Size { get; } Property Value Type Description long Overrides DirectoryBase<string, MemoryDirectory>.Size See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> Methods | Edit this page View Source Create() Not used Declaration public override IDirectory Create() Returns Type Description IDirectory This Overrides DirectoryBase<string, MemoryDirectory>.Create() See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Delete() Not used Declaration public override IDirectory Delete() Returns Type Description IDirectory Overrides DirectoryBase<string, MemoryDirectory>.Delete() See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source EnumerateDirectories(string, SearchOption) Not used Declaration public override IEnumerable<IDirectory> EnumerateDirectories(string searchPattern, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern SearchOption options Search options Returns Type Description IEnumerable<IDirectory> List of directories under this directory Overrides DirectoryBase<string, MemoryDirectory>.EnumerateDirectories(string, SearchOption) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source EnumerateFiles(string, SearchOption) Not used Declaration public override IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern SearchOption options Returns Type Description IEnumerable<IFile> Overrides DirectoryBase<string, MemoryDirectory>.EnumerateFiles(string, SearchOption) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source MoveTo(IDirectory) Moves this directory under another directory Declaration public override IDirectory MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IDirectory Overrides DirectoryBase<string, MemoryDirectory>.MoveTo(IDirectory) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Edit this page View Source Rename(string) Not used Declaration public override IDirectory Rename(string name) Parameters Type Name Description string name The name. Returns Type Description IDirectory Overrides DirectoryBase<string, MemoryDirectory>.Rename(string) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T> See Also DirectoryBase<TInternalDirectoryType, TDirectoryType>"
  },
  "api/FileCurator.Default.Memory.MemoryFile.html": {
    "href": "api/FileCurator.Default.Memory.MemoryFile.html",
    "title": "Class MemoryFile | FileCurator API Reference",
    "keywords": "Class MemoryFile Memory file Inheritance object FileBase<string, MemoryFile> MemoryFile Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members FileBase<string, MemoryFile>.Accessed FileBase<string, MemoryFile>.Created FileBase<string, MemoryFile>.Credentials FileBase<string, MemoryFile>.Directory FileBase<string, MemoryFile>.Exists FileBase<string, MemoryFile>.Extension FileBase<string, MemoryFile>.FullName FileBase<string, MemoryFile>.Length FileBase<string, MemoryFile>.Modified FileBase<string, MemoryFile>.Name FileBase<string, MemoryFile>.FormatManager FileBase<string, MemoryFile>.InternalFile FileBase<string, MemoryFile>.CompareTo(IFile) FileBase<string, MemoryFile>.CompareTo(object) FileBase<string, MemoryFile>.CopyTo(IDirectory, bool) FileBase<string, MemoryFile>.CopyToAsync(IDirectory, bool) FileBase<string, MemoryFile>.Delete() FileBase<string, MemoryFile>.DeleteAsync() FileBase<string, MemoryFile>.Equals(object) FileBase<string, MemoryFile>.Equals(IFile) FileBase<string, MemoryFile>.GetHashCode() FileBase<string, MemoryFile>.MoveTo(IDirectory) FileBase<string, MemoryFile>.MoveToAsync(IDirectory) FileBase<string, MemoryFile>.Parse<TFile>() FileBase<string, MemoryFile>.Parse() FileBase<string, MemoryFile>.ParseAsync<TFile>() FileBase<string, MemoryFile>.ParseAsync() FileBase<string, MemoryFile>.Read() FileBase<string, MemoryFile>.ReadAsync() FileBase<string, MemoryFile>.ReadBinary() FileBase<string, MemoryFile>.ReadBinaryAsync() FileBase<string, MemoryFile>.Rename(string) FileBase<string, MemoryFile>.RenameAsync(string) FileBase<string, MemoryFile>.ToString() FileBase<string, MemoryFile>.Write(string, FileMode, Encoding) FileBase<string, MemoryFile>.Write(byte[], FileMode) FileBase<string, MemoryFile>.Write(IGenericFile, FileMode) FileBase<string, MemoryFile>.WriteAsync(string, FileMode, Encoding) FileBase<string, MemoryFile>.WriteAsync(byte[], FileMode) FileBase<string, MemoryFile>.WriteAsync(IGenericFile, FileMode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default.Memory Assembly: FileCurator.dll Syntax public class MemoryFile : FileBase<string, MemoryFile>, IFile, IComparable<IFile>, IComparable, IEquatable<IFile> Constructors | Edit this page View Source MemoryFile() Initializes a new instance of the MemoryFile class. Declaration public MemoryFile() See Also FileBase<InternalFileType, FileType> | Edit this page View Source MemoryFile(string, Credentials?) Initializes a new instance of the MemoryFile class. Declaration public MemoryFile(string path, Credentials? credentials) Parameters Type Name Description string path The path. Credentials credentials The credentials. See Also FileBase<InternalFileType, FileType> Properties | Edit this page View Source Accessed Last time accessed (UTC time) Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides FileBase<string, MemoryFile>.Accessed See Also FileBase<InternalFileType, FileType> | Edit this page View Source Created Time created (UTC time) Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides FileBase<string, MemoryFile>.Created See Also FileBase<InternalFileType, FileType> | Edit this page View Source Directory Directory the file is within Declaration public override IDirectory? Directory { get; } Property Value Type Description IDirectory Overrides FileBase<string, MemoryFile>.Directory See Also FileBase<InternalFileType, FileType> | Edit this page View Source Exists Does the file exist? Declaration public override bool Exists { get; } Property Value Type Description bool Overrides FileBase<string, MemoryFile>.Exists See Also FileBase<InternalFileType, FileType> | Edit this page View Source Extension File extension Declaration public override string Extension { get; } Property Value Type Description string Overrides FileBase<string, MemoryFile>.Extension See Also FileBase<InternalFileType, FileType> | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides FileBase<string, MemoryFile>.FullName See Also FileBase<InternalFileType, FileType> | Edit this page View Source Length Size of the file Declaration public override long Length { get; } Property Value Type Description long Overrides FileBase<string, MemoryFile>.Length See Also FileBase<InternalFileType, FileType> | Edit this page View Source Modified Time modified (UTC time) Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides FileBase<string, MemoryFile>.Modified See Also FileBase<InternalFileType, FileType> | Edit this page View Source Name Name of the file Declaration public override string Name { get; } Property Value Type Description string Overrides FileBase<string, MemoryFile>.Name See Also FileBase<InternalFileType, FileType> Methods | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration public override IFile CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file Overrides FileBase<string, MemoryFile>.CopyTo(IDirectory, bool) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Delete() Deletes the file Declaration public override string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) Overrides FileBase<string, MemoryFile>.Delete() See Also FileBase<InternalFileType, FileType> | Edit this page View Source MoveTo(IDirectory) Moves the file to a new directory Declaration public override IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IFile The resulting file. Overrides FileBase<string, MemoryFile>.MoveTo(IDirectory) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Read() Reads the file in as a string Declaration public override string Read() Returns Type Description string The file contents as a string Overrides FileBase<string, MemoryFile>.Read() See Also FileBase<InternalFileType, FileType> | Edit this page View Source ReadBinary() Reads a file as binary Declaration public override byte[] ReadBinary() Returns Type Description byte[] The file contents as a byte array Overrides FileBase<string, MemoryFile>.ReadBinary() See Also FileBase<InternalFileType, FileType> | Edit this page View Source Rename(string) Renames the file Declaration public override IFile Rename(string newName) Parameters Type Name Description string newName New name for the file Returns Type Description IFile Renames the file. Overrides FileBase<string, MemoryFile>.Rename(string) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Write(byte[], FileMode) Writes content to the file Declaration public override byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode Mode to open the file as Returns Type Description byte[] The result of the write or original content Overrides FileBase<string, MemoryFile>.Write(byte[], FileMode) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Write(string, FileMode, Encoding?) Writes content to the file Declaration public override string Write(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode Mode to open the file as Encoding encoding Encoding to use for the content Returns Type Description string The result of the write or original content Overrides FileBase<string, MemoryFile>.Write(string, FileMode, Encoding) See Also FileBase<InternalFileType, FileType> Implements IFile IComparable<T> IComparable IEquatable<T> See Also FileBase<InternalFileType, FileType>"
  },
  "api/FileCurator.Default.Memory.MemoryFileSystem.html": {
    "href": "api/FileCurator.Default.Memory.MemoryFileSystem.html",
    "title": "Class MemoryFileSystem | FileCurator API Reference",
    "keywords": "Class MemoryFileSystem Temporary file system held in memory (this is not for memory mapped files) Inheritance object FileSystemBase MemoryFileSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.HandleRegex FileSystemBase.CanHandle(string) FileSystemBase.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default.Memory Assembly: FileCurator.dll Syntax public class MemoryFileSystem : FileSystemBase, IDisposable, IFileSystem Properties | Edit this page View Source HandleRegexString Regex string used to determine if the file system can handle the path Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString See Also FileSystemBase | Edit this page View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name See Also FileSystemBase | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order See Also FileSystemBase Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) See Also FileSystemBase | Edit this page View Source Directory(string, Credentials?) Gets the directory representation for the directory Declaration public override IDirectory Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object Overrides FileSystemBase.Directory(string, Credentials?) See Also FileSystemBase | Edit this page View Source Dispose(bool) Function to override in order to dispose objects Declaration protected override void Dispose(bool managed) Parameters Type Name Description bool managed Overrides FileSystemBase.Dispose(bool) See Also FileSystemBase | Edit this page View Source File(string, Credentials?) Gets the class representation for the file Declaration public override IFile File(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object Overrides FileSystemBase.File(string, Credentials?) See Also FileSystemBase Implements IDisposable IFileSystem See Also FileSystemBase"
  },
  "api/FileCurator.Default.Memory.html": {
    "href": "api/FileCurator.Default.Memory.html",
    "title": "Namespace FileCurator.Default.Memory | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Default.Memory Classes MemoryDirectory Memory directory MemoryFile Memory file MemoryFileSystem Temporary file system held in memory (this is not for memory mapped files)"
  },
  "api/FileCurator.Default.NetworkFileSystem.html": {
    "href": "api/FileCurator.Default.NetworkFileSystem.html",
    "title": "Class NetworkFileSystem | FileCurator API Reference",
    "keywords": "Class NetworkFileSystem Network file system Inheritance object FileSystemBase LocalFileSystemBase NetworkFileSystem Implements IDisposable IFileSystem Inherited Members LocalFileSystemBase.Directory(string, Credentials) LocalFileSystemBase.File(string, Credentials) LocalFileSystemBase.Dispose(bool) FileSystemBase.HandleRegex FileSystemBase.CanHandle(string) FileSystemBase.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class NetworkFileSystem : LocalFileSystemBase, IDisposable, IFileSystem Properties | Edit this page View Source HandleRegexString Relative starter Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString | Edit this page View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) Implements IDisposable IFileSystem"
  },
  "api/FileCurator.Default.RelativeLocalFileSystem.html": {
    "href": "api/FileCurator.Default.RelativeLocalFileSystem.html",
    "title": "Class RelativeLocalFileSystem | FileCurator API Reference",
    "keywords": "Class RelativeLocalFileSystem Relative local file system Inheritance object FileSystemBase LocalFileSystemBase RelativeLocalFileSystem Implements IDisposable IFileSystem Inherited Members LocalFileSystemBase.Directory(string, Credentials) LocalFileSystemBase.File(string, Credentials) LocalFileSystemBase.Dispose(bool) FileSystemBase.HandleRegex FileSystemBase.CanHandle(string) FileSystemBase.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class RelativeLocalFileSystem : LocalFileSystemBase, IDisposable, IFileSystem Properties | Edit this page View Source HandleRegexString Relative starter Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString | Edit this page View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) Implements IDisposable IFileSystem"
  },
  "api/FileCurator.Default.ResourceDirectory.html": {
    "href": "api/FileCurator.Default.ResourceDirectory.html",
    "title": "Class ResourceDirectory | FileCurator API Reference",
    "keywords": "Class ResourceDirectory Directory class Inheritance object DirectoryBase<string, ResourceDirectory> ResourceDirectory Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members DirectoryBase<string, ResourceDirectory>.Accessed DirectoryBase<string, ResourceDirectory>.Created DirectoryBase<string, ResourceDirectory>.Credentials DirectoryBase<string, ResourceDirectory>.Exists DirectoryBase<string, ResourceDirectory>.FullName DirectoryBase<string, ResourceDirectory>.Modified DirectoryBase<string, ResourceDirectory>.Name DirectoryBase<string, ResourceDirectory>.Parent DirectoryBase<string, ResourceDirectory>.Root DirectoryBase<string, ResourceDirectory>.Size DirectoryBase<string, ResourceDirectory>.InternalDirectory DirectoryBase<string, ResourceDirectory>.CompareTo(IDirectory) DirectoryBase<string, ResourceDirectory>.CompareTo(object) DirectoryBase<string, ResourceDirectory>.CopyTo(IDirectory, CopyOptions) DirectoryBase<string, ResourceDirectory>.CopyToAsync(IDirectory, CopyOptions) DirectoryBase<string, ResourceDirectory>.Create() DirectoryBase<string, ResourceDirectory>.CreateAsync() DirectoryBase<string, ResourceDirectory>.Delete() DirectoryBase<string, ResourceDirectory>.DeleteAsync() DirectoryBase<string, ResourceDirectory>.EnumerateDirectories(string, SearchOption) DirectoryBase<string, ResourceDirectory>.EnumerateDirectories(Predicate<IDirectory>, SearchOption) DirectoryBase<string, ResourceDirectory>.EnumerateFiles(string, SearchOption) DirectoryBase<string, ResourceDirectory>.EnumerateFiles(Predicate<IFile>, SearchOption) DirectoryBase<string, ResourceDirectory>.Equals(object) DirectoryBase<string, ResourceDirectory>.Equals(IDirectory) DirectoryBase<string, ResourceDirectory>.GetEnumerator() DirectoryBase<string, ResourceDirectory>.GetHashCode() DirectoryBase<string, ResourceDirectory>.MoveTo(IDirectory) DirectoryBase<string, ResourceDirectory>.MoveToAsync(IDirectory) DirectoryBase<string, ResourceDirectory>.Rename(string) DirectoryBase<string, ResourceDirectory>.RenameAsync(string) DirectoryBase<string, ResourceDirectory>.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class ResourceDirectory : DirectoryBase<string, ResourceDirectory>, IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> Constructors | Edit this page View Source ResourceDirectory() Constructor Declaration public ResourceDirectory() | Edit this page View Source ResourceDirectory(string, Credentials?) Constructor Declaration public ResourceDirectory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Properties | Edit this page View Source Accessed returns now Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides DirectoryBase<string, ResourceDirectory>.Accessed | Edit this page View Source Created returns now Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides DirectoryBase<string, ResourceDirectory>.Created | Edit this page View Source Exists returns true Declaration public override bool Exists { get; } Property Value Type Description bool Overrides DirectoryBase<string, ResourceDirectory>.Exists | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides DirectoryBase<string, ResourceDirectory>.FullName | Edit this page View Source Modified returns now Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides DirectoryBase<string, ResourceDirectory>.Modified | Edit this page View Source Name Full path Declaration public override string Name { get; } Property Value Type Description string Overrides DirectoryBase<string, ResourceDirectory>.Name | Edit this page View Source Parent Full path Declaration public override IDirectory? Parent { get; } Property Value Type Description IDirectory Overrides DirectoryBase<string, ResourceDirectory>.Parent | Edit this page View Source Root Root Declaration public override IDirectory? Root { get; } Property Value Type Description IDirectory Overrides DirectoryBase<string, ResourceDirectory>.Root | Edit this page View Source Size Size (returns 0) Declaration public override long Size { get; } Property Value Type Description long Overrides DirectoryBase<string, ResourceDirectory>.Size Methods | Edit this page View Source Create() Not used Declaration public override IDirectory Create() Returns Type Description IDirectory This Overrides DirectoryBase<string, ResourceDirectory>.Create() | Edit this page View Source Delete() Not used Declaration public override IDirectory Delete() Returns Type Description IDirectory Overrides DirectoryBase<string, ResourceDirectory>.Delete() | Edit this page View Source EnumerateDirectories(string, SearchOption) Not used Declaration public override IEnumerable<IDirectory> EnumerateDirectories(string searchPattern, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern SearchOption options Returns Type Description IEnumerable<IDirectory> Overrides DirectoryBase<string, ResourceDirectory>.EnumerateDirectories(string, SearchOption) | Edit this page View Source EnumerateFiles(string, SearchOption) Not used Declaration public override IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern SearchOption options Returns Type Description IEnumerable<IFile> Overrides DirectoryBase<string, ResourceDirectory>.EnumerateFiles(string, SearchOption) | Edit this page View Source Rename(string) Not used Declaration public override IDirectory Rename(string name) Parameters Type Name Description string name The name. Returns Type Description IDirectory Overrides DirectoryBase<string, ResourceDirectory>.Rename(string) Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T>"
  },
  "api/FileCurator.Default.ResourceFile.html": {
    "href": "api/FileCurator.Default.ResourceFile.html",
    "title": "Class ResourceFile | FileCurator API Reference",
    "keywords": "Class ResourceFile Basic Resource file class Inheritance object FileBase<string, ResourceFile> ResourceFile Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members FileBase<string, ResourceFile>.Accessed FileBase<string, ResourceFile>.Created FileBase<string, ResourceFile>.Credentials FileBase<string, ResourceFile>.Directory FileBase<string, ResourceFile>.Exists FileBase<string, ResourceFile>.Extension FileBase<string, ResourceFile>.FullName FileBase<string, ResourceFile>.Length FileBase<string, ResourceFile>.Modified FileBase<string, ResourceFile>.Name FileBase<string, ResourceFile>.FormatManager FileBase<string, ResourceFile>.InternalFile FileBase<string, ResourceFile>.CompareTo(IFile) FileBase<string, ResourceFile>.CompareTo(object) FileBase<string, ResourceFile>.CopyTo(IDirectory, bool) FileBase<string, ResourceFile>.CopyToAsync(IDirectory, bool) FileBase<string, ResourceFile>.Delete() FileBase<string, ResourceFile>.DeleteAsync() FileBase<string, ResourceFile>.Equals(object) FileBase<string, ResourceFile>.Equals(IFile) FileBase<string, ResourceFile>.GetHashCode() FileBase<string, ResourceFile>.MoveTo(IDirectory) FileBase<string, ResourceFile>.MoveToAsync(IDirectory) FileBase<string, ResourceFile>.Parse<TFile>() FileBase<string, ResourceFile>.Parse() FileBase<string, ResourceFile>.ParseAsync<TFile>() FileBase<string, ResourceFile>.ParseAsync() FileBase<string, ResourceFile>.Read() FileBase<string, ResourceFile>.ReadAsync() FileBase<string, ResourceFile>.ReadBinary() FileBase<string, ResourceFile>.ReadBinaryAsync() FileBase<string, ResourceFile>.Rename(string) FileBase<string, ResourceFile>.RenameAsync(string) FileBase<string, ResourceFile>.ToString() FileBase<string, ResourceFile>.Write(string, FileMode, Encoding) FileBase<string, ResourceFile>.Write(byte[], FileMode) FileBase<string, ResourceFile>.Write(IGenericFile, FileMode) FileBase<string, ResourceFile>.WriteAsync(string, FileMode, Encoding) FileBase<string, ResourceFile>.WriteAsync(byte[], FileMode) FileBase<string, ResourceFile>.WriteAsync(IGenericFile, FileMode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class ResourceFile : FileBase<string, ResourceFile>, IFile, IComparable<IFile>, IComparable, IEquatable<IFile> Constructors | Edit this page View Source ResourceFile() Constructor Declaration public ResourceFile() | Edit this page View Source ResourceFile(string, Credentials?) Constructor Declaration public ResourceFile(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Properties | Edit this page View Source Accessed Time accessed (Just returns now) Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides FileBase<string, ResourceFile>.Accessed | Edit this page View Source Created Time created (Just returns now) Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides FileBase<string, ResourceFile>.Created | Edit this page View Source Directory Directory base path Declaration public override IDirectory Directory { get; } Property Value Type Description IDirectory Overrides FileBase<string, ResourceFile>.Directory | Edit this page View Source Exists Does it exist? Always true. Declaration public override bool Exists { get; } Property Value Type Description bool Overrides FileBase<string, ResourceFile>.Exists | Edit this page View Source Extension Extension (always empty) Declaration public override string Extension { get; } Property Value Type Description string Overrides FileBase<string, ResourceFile>.Extension | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides FileBase<string, ResourceFile>.FullName | Edit this page View Source Length Size of the file Declaration public override long Length { get; } Property Value Type Description long Overrides FileBase<string, ResourceFile>.Length | Edit this page View Source Modified Time modified (just returns now) Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides FileBase<string, ResourceFile>.Modified | Edit this page View Source Name Absolute path of the file (same as FullName) Declaration public override string Name { get; } Property Value Type Description string Overrides FileBase<string, ResourceFile>.Name Methods | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration public override IFile CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file Overrides FileBase<string, ResourceFile>.CopyTo(IDirectory, bool) | Edit this page View Source Delete() Delete (does nothing) Declaration public override string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) Overrides FileBase<string, ResourceFile>.Delete() | Edit this page View Source MoveTo(IDirectory) Moves the file (not used) Declaration public override IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Not used Returns Type Description IFile Overrides FileBase<string, ResourceFile>.MoveTo(IDirectory) | Edit this page View Source Read() Reads the Resource page Declaration public override string Read() Returns Type Description string The content as a string Overrides FileBase<string, ResourceFile>.Read() | Edit this page View Source ReadBinary() Reads the Resource page Declaration public override byte[] ReadBinary() Returns Type Description byte[] The content as a byte array Overrides FileBase<string, ResourceFile>.ReadBinary() | Edit this page View Source Rename(string) Renames the file (not used) Declaration public override IFile Rename(string newName) Parameters Type Name Description string newName Not used Returns Type Description IFile Overrides FileBase<string, ResourceFile>.Rename(string) | Edit this page View Source Write(byte[], FileMode) Not used Declaration public override byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Not used FileMode mode Not used Returns Type Description byte[] The result of the write or original content Overrides FileBase<string, ResourceFile>.Write(byte[], FileMode) | Edit this page View Source Write(string, FileMode, Encoding) Not used Declaration public override string Write(string content, FileMode mode = FileMode.Create, Encoding encoding = null) Parameters Type Name Description string content Not used FileMode mode Not used Encoding encoding Not used Returns Type Description string The result of the write or original content Overrides FileBase<string, ResourceFile>.Write(string, FileMode, Encoding) Implements IFile IComparable<T> IComparable IEquatable<T>"
  },
  "api/FileCurator.Default.ResourceFileSystem.html": {
    "href": "api/FileCurator.Default.ResourceFileSystem.html",
    "title": "Class ResourceFileSystem | FileCurator API Reference",
    "keywords": "Class ResourceFileSystem Resource file system Inheritance object FileSystemBase ResourceFileSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.HandleRegex FileSystemBase.CanHandle(string) FileSystemBase.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class ResourceFileSystem : FileSystemBase, IDisposable, IFileSystem Properties | Edit this page View Source HandleRegexString Regex string used to determine if the file system can handle the path Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString | Edit this page View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order Methods | Edit this page View Source AbsolutePath(string) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) | Edit this page View Source Directory(string, Credentials) Gets the directory representation for the directory Declaration public override IDirectory Directory(string path, Credentials credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object Overrides FileSystemBase.Directory(string, Credentials?) | Edit this page View Source Dispose(bool) Function to override in order to dispose objects Declaration protected override void Dispose(bool managed) Parameters Type Name Description bool managed Overrides FileSystemBase.Dispose(bool) | Edit this page View Source File(string, Credentials) Gets the class representation for the file Declaration public override IFile File(string path, Credentials credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object Overrides FileSystemBase.File(string, Credentials?) Implements IDisposable IFileSystem"
  },
  "api/FileCurator.Default.WebDirectory.html": {
    "href": "api/FileCurator.Default.WebDirectory.html",
    "title": "Class WebDirectory | FileCurator API Reference",
    "keywords": "Class WebDirectory Directory class Inheritance object DirectoryBase<Uri, WebDirectory> WebDirectory Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members DirectoryBase<Uri, WebDirectory>.Accessed DirectoryBase<Uri, WebDirectory>.Created DirectoryBase<Uri, WebDirectory>.Credentials DirectoryBase<Uri, WebDirectory>.Exists DirectoryBase<Uri, WebDirectory>.FullName DirectoryBase<Uri, WebDirectory>.Modified DirectoryBase<Uri, WebDirectory>.Name DirectoryBase<Uri, WebDirectory>.Parent DirectoryBase<Uri, WebDirectory>.Root DirectoryBase<Uri, WebDirectory>.Size DirectoryBase<Uri, WebDirectory>.InternalDirectory DirectoryBase<Uri, WebDirectory>.CompareTo(IDirectory) DirectoryBase<Uri, WebDirectory>.CompareTo(object) DirectoryBase<Uri, WebDirectory>.CopyTo(IDirectory, CopyOptions) DirectoryBase<Uri, WebDirectory>.CopyToAsync(IDirectory, CopyOptions) DirectoryBase<Uri, WebDirectory>.Create() DirectoryBase<Uri, WebDirectory>.CreateAsync() DirectoryBase<Uri, WebDirectory>.Delete() DirectoryBase<Uri, WebDirectory>.DeleteAsync() DirectoryBase<Uri, WebDirectory>.EnumerateDirectories(string, SearchOption) DirectoryBase<Uri, WebDirectory>.EnumerateDirectories(Predicate<IDirectory>, SearchOption) DirectoryBase<Uri, WebDirectory>.EnumerateFiles(string, SearchOption) DirectoryBase<Uri, WebDirectory>.EnumerateFiles(Predicate<IFile>, SearchOption) DirectoryBase<Uri, WebDirectory>.Equals(object) DirectoryBase<Uri, WebDirectory>.Equals(IDirectory) DirectoryBase<Uri, WebDirectory>.GetEnumerator() DirectoryBase<Uri, WebDirectory>.GetHashCode() DirectoryBase<Uri, WebDirectory>.MoveTo(IDirectory) DirectoryBase<Uri, WebDirectory>.MoveToAsync(IDirectory) DirectoryBase<Uri, WebDirectory>.Rename(string) DirectoryBase<Uri, WebDirectory>.RenameAsync(string) DirectoryBase<Uri, WebDirectory>.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class WebDirectory : DirectoryBase<Uri, WebDirectory>, IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> Constructors | Edit this page View Source WebDirectory() Constructor Declaration public WebDirectory() | Edit this page View Source WebDirectory(string, HttpClient?, Credentials?) Constructor Declaration public WebDirectory(string path, HttpClient? client, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory HttpClient client The client. Credentials credentials The credentials. | Edit this page View Source WebDirectory(Uri?, HttpClient?, Credentials?) Constructor Declaration public WebDirectory(Uri? directory, HttpClient? client, Credentials? credentials = null) Parameters Type Name Description Uri directory Internal directory HttpClient client The client. Credentials credentials The credentials. Properties | Edit this page View Source Accessed returns now Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides DirectoryBase<Uri, WebDirectory>.Accessed | Edit this page View Source Created returns now Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides DirectoryBase<Uri, WebDirectory>.Created | Edit this page View Source Exists returns true Declaration public override bool Exists { get; } Property Value Type Description bool Overrides DirectoryBase<Uri, WebDirectory>.Exists | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides DirectoryBase<Uri, WebDirectory>.FullName | Edit this page View Source Modified returns now Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides DirectoryBase<Uri, WebDirectory>.Modified | Edit this page View Source Name Full path Declaration public override string Name { get; } Property Value Type Description string Overrides DirectoryBase<Uri, WebDirectory>.Name | Edit this page View Source Parent Full path Declaration public override IDirectory? Parent { get; } Property Value Type Description IDirectory Overrides DirectoryBase<Uri, WebDirectory>.Parent | Edit this page View Source Root Root Declaration public override IDirectory? Root { get; } Property Value Type Description IDirectory Overrides DirectoryBase<Uri, WebDirectory>.Root | Edit this page View Source Size Size (returns 0) Declaration public override long Size { get; } Property Value Type Description long Overrides DirectoryBase<Uri, WebDirectory>.Size Methods | Edit this page View Source CopyTo(IDirectory, CopyOptions) Copies the directory to the specified parent directory Declaration public override IDirectory CopyTo(IDirectory directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Options Returns Type Description IDirectory Newly created directory Overrides DirectoryBase<Uri, WebDirectory>.CopyTo(IDirectory, CopyOptions) | Edit this page View Source Create() Not used Declaration public override IDirectory Create() Returns Type Description IDirectory Overrides DirectoryBase<Uri, WebDirectory>.Create() | Edit this page View Source Delete() Not used Declaration public override IDirectory Delete() Returns Type Description IDirectory Overrides DirectoryBase<Uri, WebDirectory>.Delete() | Edit this page View Source EnumerateDirectories(string, SearchOption) Not used Declaration public override IEnumerable<IDirectory> EnumerateDirectories(string searchPattern, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern SearchOption options Returns Type Description IEnumerable<IDirectory> Overrides DirectoryBase<Uri, WebDirectory>.EnumerateDirectories(string, SearchOption) | Edit this page View Source EnumerateFiles(string, SearchOption) Not used Declaration public override IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern SearchOption options Returns Type Description IEnumerable<IFile> Overrides DirectoryBase<Uri, WebDirectory>.EnumerateFiles(string, SearchOption) | Edit this page View Source Rename(string) Not used Declaration public override IDirectory Rename(string name) Parameters Type Name Description string name Returns Type Description IDirectory Overrides DirectoryBase<Uri, WebDirectory>.Rename(string) Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T>"
  },
  "api/FileCurator.Default.WebFile.html": {
    "href": "api/FileCurator.Default.WebFile.html",
    "title": "Class WebFile | FileCurator API Reference",
    "keywords": "Class WebFile Web file Inheritance object FileBase<Uri, WebFile> WebFile Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members FileBase<Uri, WebFile>.Accessed FileBase<Uri, WebFile>.Created FileBase<Uri, WebFile>.Credentials FileBase<Uri, WebFile>.Directory FileBase<Uri, WebFile>.Exists FileBase<Uri, WebFile>.Extension FileBase<Uri, WebFile>.FullName FileBase<Uri, WebFile>.Length FileBase<Uri, WebFile>.Modified FileBase<Uri, WebFile>.Name FileBase<Uri, WebFile>.FormatManager FileBase<Uri, WebFile>.InternalFile FileBase<Uri, WebFile>.CompareTo(IFile) FileBase<Uri, WebFile>.CompareTo(object) FileBase<Uri, WebFile>.CopyTo(IDirectory, bool) FileBase<Uri, WebFile>.CopyToAsync(IDirectory, bool) FileBase<Uri, WebFile>.Delete() FileBase<Uri, WebFile>.DeleteAsync() FileBase<Uri, WebFile>.Equals(object) FileBase<Uri, WebFile>.Equals(IFile) FileBase<Uri, WebFile>.GetHashCode() FileBase<Uri, WebFile>.MoveTo(IDirectory) FileBase<Uri, WebFile>.MoveToAsync(IDirectory) FileBase<Uri, WebFile>.Parse<TFile>() FileBase<Uri, WebFile>.Parse() FileBase<Uri, WebFile>.ParseAsync<TFile>() FileBase<Uri, WebFile>.ParseAsync() FileBase<Uri, WebFile>.Read() FileBase<Uri, WebFile>.ReadAsync() FileBase<Uri, WebFile>.ReadBinary() FileBase<Uri, WebFile>.ReadBinaryAsync() FileBase<Uri, WebFile>.Rename(string) FileBase<Uri, WebFile>.RenameAsync(string) FileBase<Uri, WebFile>.ToString() FileBase<Uri, WebFile>.Write(string, FileMode, Encoding) FileBase<Uri, WebFile>.Write(byte[], FileMode) FileBase<Uri, WebFile>.Write(IGenericFile, FileMode) FileBase<Uri, WebFile>.WriteAsync(string, FileMode, Encoding) FileBase<Uri, WebFile>.WriteAsync(byte[], FileMode) FileBase<Uri, WebFile>.WriteAsync(IGenericFile, FileMode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Default Assembly: FileCurator.dll Syntax public class WebFile : FileBase<Uri, WebFile>, IFile, IComparable<IFile>, IComparable, IEquatable<IFile> Constructors | Edit this page View Source WebFile() Constructor Declaration public WebFile() See Also FileBase<InternalFileType, FileType> | Edit this page View Source WebFile(string, HttpClient?, Credentials?) Constructor Declaration public WebFile(string path, HttpClient? client, Credentials? credentials = null) Parameters Type Name Description string path Path to the file HttpClient client The client. Credentials credentials The credentials. See Also FileBase<InternalFileType, FileType> | Edit this page View Source WebFile(Uri?, HttpClient?, Credentials?) Constructor Declaration public WebFile(Uri? directory, HttpClient? client, Credentials? credentials = null) Parameters Type Name Description Uri directory Internal directory HttpClient client The client. Credentials credentials The credentials. See Also FileBase<InternalFileType, FileType> Properties | Edit this page View Source Accessed Time accessed (Just returns now) Declaration public override DateTime Accessed { get; } Property Value Type Description DateTime Overrides FileBase<Uri, WebFile>.Accessed See Also FileBase<InternalFileType, FileType> | Edit this page View Source Created Time created (Just returns now) Declaration public override DateTime Created { get; } Property Value Type Description DateTime Overrides FileBase<Uri, WebFile>.Created See Also FileBase<InternalFileType, FileType> | Edit this page View Source Directory Directory base path Declaration public override IDirectory? Directory { get; } Property Value Type Description IDirectory Overrides FileBase<Uri, WebFile>.Directory See Also FileBase<InternalFileType, FileType> | Edit this page View Source Exists Does it exist? Always true. Declaration public override bool Exists { get; } Property Value Type Description bool Overrides FileBase<Uri, WebFile>.Exists See Also FileBase<InternalFileType, FileType> | Edit this page View Source Extension Extension (always empty) Declaration public override string Extension { get; } Property Value Type Description string Overrides FileBase<Uri, WebFile>.Extension See Also FileBase<InternalFileType, FileType> | Edit this page View Source FullName Full path Declaration public override string FullName { get; } Property Value Type Description string Overrides FileBase<Uri, WebFile>.FullName See Also FileBase<InternalFileType, FileType> | Edit this page View Source Length Size of the file (always 0) Declaration public override long Length { get; } Property Value Type Description long Overrides FileBase<Uri, WebFile>.Length See Also FileBase<InternalFileType, FileType> | Edit this page View Source Modified Time modified (just returns now) Declaration public override DateTime Modified { get; } Property Value Type Description DateTime Overrides FileBase<Uri, WebFile>.Modified See Also FileBase<InternalFileType, FileType> | Edit this page View Source Name Absolute path of the file (same as FullName) Declaration public override string Name { get; } Property Value Type Description string Overrides FileBase<Uri, WebFile>.Name See Also FileBase<InternalFileType, FileType> Methods | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration public override IFile CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file Overrides FileBase<Uri, WebFile>.CopyTo(IDirectory, bool) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Delete() Delete (does nothing) Declaration public override string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) Overrides FileBase<Uri, WebFile>.Delete() See Also FileBase<InternalFileType, FileType> | Edit this page View Source MoveTo(IDirectory) Moves the file (not used) Declaration public override IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Not used Returns Type Description IFile Overrides FileBase<Uri, WebFile>.MoveTo(IDirectory) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Read() Reads the web page Declaration public override string Read() Returns Type Description string The content as a string Overrides FileBase<Uri, WebFile>.Read() See Also FileBase<InternalFileType, FileType> | Edit this page View Source ReadBinary() Reads the web page Declaration public override byte[] ReadBinary() Returns Type Description byte[] The content as a byte array Overrides FileBase<Uri, WebFile>.ReadBinary() See Also FileBase<InternalFileType, FileType> | Edit this page View Source Rename(string) Renames the file (not used) Declaration public override IFile Rename(string newName) Parameters Type Name Description string newName Not used Returns Type Description IFile Overrides FileBase<Uri, WebFile>.Rename(string) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Write(byte[], FileMode) Not used Declaration public override byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Not used FileMode mode Not used Returns Type Description byte[] The result of the write or original content Overrides FileBase<Uri, WebFile>.Write(byte[], FileMode) See Also FileBase<InternalFileType, FileType> | Edit this page View Source Write(string, FileMode, Encoding?) Not used Declaration public override string Write(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Not used FileMode mode Not used Encoding encoding Not used Returns Type Description string The result of the write or original content Overrides FileBase<Uri, WebFile>.Write(string, FileMode, Encoding) See Also FileBase<InternalFileType, FileType> Implements IFile IComparable<T> IComparable IEquatable<T> See Also FileBase<InternalFileType, FileType>"
  },
  "api/FileCurator.Default.html": {
    "href": "api/FileCurator.Default.html",
    "title": "Namespace FileCurator.Default | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Default Classes AbsoluteLocalFileSystem Absolute local file system HttpFileSystem HTTP file system LocalDirectory Local directory class LocalFile Basic local file class NetworkFileSystem Network file system RelativeLocalFileSystem Relative local file system ResourceDirectory Directory class ResourceFile Basic Resource file class ResourceFileSystem Resource file system WebDirectory Directory class WebFile Web file"
  },
  "api/FileCurator.DirectoryInfo.html": {
    "href": "api/FileCurator.DirectoryInfo.html",
    "title": "Class DirectoryInfo | FileCurator API Reference",
    "keywords": "Class DirectoryInfo Directory info class Inheritance object DirectoryInfo Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator Assembly: FileCurator.dll Syntax public class DirectoryInfo : IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> Constructors | Edit this page View Source DirectoryInfo(IDirectory?) Constructor Declaration public DirectoryInfo(IDirectory? directory) Parameters Type Name Description IDirectory directory Directory object | Edit this page View Source DirectoryInfo(string, Credentials?) Constructor Declaration public DirectoryInfo(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Properties | Edit this page View Source Accessed Last time it was accessed Declaration public DateTime Accessed { get; } Property Value Type Description DateTime | Edit this page View Source Created When it was created Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Exists Does the directory exist Declaration public bool Exists { get; } Property Value Type Description bool | Edit this page View Source FullName Full path to the directory Declaration public string FullName { get; } Property Value Type Description string | Edit this page View Source InternalDirectory Internal directory object Declaration protected IDirectory? InternalDirectory { get; } Property Value Type Description IDirectory | Edit this page View Source Modified When it was last modified Declaration public DateTime Modified { get; } Property Value Type Description DateTime | Edit this page View Source Name Name of the directory Declaration public string Name { get; } Property Value Type Description string | Edit this page View Source Parent Parent directory Declaration public IDirectory? Parent { get; } Property Value Type Description IDirectory | Edit this page View Source Root Root directory Declaration public IDirectory? Root { get; } Property Value Type Description IDirectory | Edit this page View Source Size Size of the contents of the directory in bytes Declaration public long Size { get; } Property Value Type Description long Methods | Edit this page View Source CompareTo(IDirectory?) Compares this to another directory Declaration public int CompareTo(IDirectory? other) Parameters Type Name Description IDirectory other Directory to compare to Returns Type Description int | Edit this page View Source CompareTo(object) Compares this object to another object Declaration public int CompareTo(object obj) Parameters Type Name Description object obj Object to compare it to Returns Type Description int | Edit this page View Source CopyTo(IDirectory?, CopyOptions) Copies the directory to the specified parent directory Declaration public IDirectory CopyTo(IDirectory? directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Copy options Returns Type Description IDirectory Returns the new directory | Edit this page View Source CopyToAsync(IDirectory, CopyOptions) Copies the directory to the specified parent directory Declaration public Task<IDirectory> CopyToAsync(IDirectory directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Copy options Returns Type Description Task<IDirectory> | Edit this page View Source Create() Creates the directory if it does not currently exist Declaration public IDirectory Create() Returns Type Description IDirectory | Edit this page View Source CreateAsync() Creates the directory if it does not currently exist Declaration public Task<IDirectory> CreateAsync() Returns Type Description Task<IDirectory> | Edit this page View Source Delete() Deletes the directory Declaration public IDirectory Delete() Returns Type Description IDirectory | Edit this page View Source DeleteAsync() Deletes the directory Declaration public Task<IDirectory> DeleteAsync() Returns Type Description Task<IDirectory> | Edit this page View Source EnumerateDirectories(Predicate<IDirectory>, SearchOption) Enumerates sub directories (defaults to top level sub directories) Declaration public IEnumerable<IDirectory> EnumerateDirectories(Predicate<IDirectory> predicate, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description Predicate<IDirectory> predicate Predicate used to filter directories SearchOption options Search options to use Returns Type Description IEnumerable<IDirectory> The list of directories | Edit this page View Source EnumerateDirectories(string, SearchOption) Enumerates sub directories (defaults to top level sub directories) Declaration public IEnumerable<IDirectory> EnumerateDirectories(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern to use SearchOption options Search options to use Returns Type Description IEnumerable<IDirectory> The list of directories | Edit this page View Source EnumerateFiles(Predicate<IFile>, SearchOption) Enumerates files within the directory (defaults to top level directory and not the sub directories) Declaration public IEnumerable<IFile> EnumerateFiles(Predicate<IFile> predicate, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description Predicate<IFile> predicate Predicate used to filter files SearchOption options Search options to use Returns Type Description IEnumerable<IFile> The list of files | Edit this page View Source EnumerateFiles(string, SearchOption) Enumerates files within the directory (defaults to top level directory and not the sub directories) Declaration public IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern to use SearchOption options Search options to use Returns Type Description IEnumerable<IFile> The list of files | Edit this page View Source Equals(IDirectory?) Determines if the directories are equal Declaration public bool Equals(IDirectory? other) Parameters Type Name Description IDirectory other Other directory Returns Type Description bool True if they are equal, false otherwise | Edit this page View Source Equals(object) Determines if the two directories are the same Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Object to compare to Returns Type Description bool True if they're the same, false otherwise Overrides object.Equals(object) | Edit this page View Source GetEnumerator() Enumerates the files in the directory Declaration public IEnumerator<IFile> GetEnumerator() Returns Type Description IEnumerator<IFile> The files in the directory | Edit this page View Source GetHashCode() Returns the hash code for the directory Declaration public override int GetHashCode() Returns Type Description int The hash code for the directory Overrides object.GetHashCode() | Edit this page View Source MoveTo(IDirectory?) Moves the directory to the specified parent directory Declaration public IDirectory MoveTo(IDirectory? directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IDirectory | Edit this page View Source MoveToAsync(IDirectory) Moves the directory to the specified parent directory Declaration public Task<IDirectory> MoveToAsync(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description Task<IDirectory> | Edit this page View Source Rename(string) Renames the directory Declaration public IDirectory Rename(string name) Parameters Type Name Description string name The new name of the directory Returns Type Description IDirectory | Edit this page View Source RenameAsync(string) Renames the directory Declaration public Task<IDirectory> RenameAsync(string name) Parameters Type Name Description string name The new name of the directory Returns Type Description Task<IDirectory> | Edit this page View Source ToString() Gets info for the directory Declaration public override string ToString() Returns Type Description string The full path to the directory Overrides object.ToString() Operators | Edit this page View Source operator ==(DirectoryInfo, DirectoryInfo) Determines if two directories are equal Declaration public static bool operator ==(DirectoryInfo directory1, DirectoryInfo directory2) Parameters Type Name Description DirectoryInfo directory1 Directory 1 DirectoryInfo directory2 Directory 2 Returns Type Description bool True if they are, false otherwise | Edit this page View Source operator >(DirectoryInfo, DirectoryInfo) Greater than Declaration public static bool operator >(DirectoryInfo directory1, DirectoryInfo directory2) Parameters Type Name Description DirectoryInfo directory1 Directory 1 DirectoryInfo directory2 Directory 2 Returns Type Description bool The result | Edit this page View Source operator >=(DirectoryInfo, DirectoryInfo) Greater than or equal Declaration public static bool operator >=(DirectoryInfo directory1, DirectoryInfo directory2) Parameters Type Name Description DirectoryInfo directory1 Directory 1 DirectoryInfo directory2 Directory 2 Returns Type Description bool The result | Edit this page View Source operator !=(DirectoryInfo, DirectoryInfo) Determines if two directories are not equal Declaration public static bool operator !=(DirectoryInfo directory1, DirectoryInfo directory2) Parameters Type Name Description DirectoryInfo directory1 Directory 1 DirectoryInfo directory2 Directory 2 Returns Type Description bool True if they are not equal, false otherwise | Edit this page View Source operator <(DirectoryInfo, DirectoryInfo) Less than Declaration public static bool operator <(DirectoryInfo directory1, DirectoryInfo directory2) Parameters Type Name Description DirectoryInfo directory1 Directory 1 DirectoryInfo directory2 Directory 2 Returns Type Description bool The result | Edit this page View Source operator <=(DirectoryInfo, DirectoryInfo) Less than or equal Declaration public static bool operator <=(DirectoryInfo directory1, DirectoryInfo directory2) Parameters Type Name Description DirectoryInfo directory1 Directory 1 DirectoryInfo directory2 Directory 2 Returns Type Description bool The result Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T>"
  },
  "api/FileCurator.Enums.CopyOptions.html": {
    "href": "api/FileCurator.Enums.CopyOptions.html",
    "title": "Enum CopyOptions | FileCurator API Reference",
    "keywords": "Enum CopyOptions Options used in directory copying Namespace: FileCurator.Enums Assembly: FileCurator.dll Syntax public enum CopyOptions Fields Name Description CopyAlways Copy always CopyIfNewer Copy if newer than the DateTime specified DoNotOverwrite Do not overwrite a file"
  },
  "api/FileCurator.Enums.MimeType.html": {
    "href": "api/FileCurator.Enums.MimeType.html",
    "title": "Class MimeType | FileCurator API Reference",
    "keywords": "Class MimeType Mime type enum like static class Inheritance object MimeType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Enums Assembly: FileCurator.dll Syntax public class MimeType Constructors | Edit this page View Source MimeType(string) Initializes a new instance of the MimeType class. Declaration protected MimeType(string name) Parameters Type Name Description string name The name. Properties | Edit this page View Source CSV Gets the CSV. Declaration public static MimeType CSV { get; } Property Value Type Description MimeType The CSV. | Edit this page View Source Excel Gets the excel. Declaration public static MimeType Excel { get; } Property Value Type Description MimeType The excel. | Edit this page View Source Html Gets the HTML. Declaration public static MimeType Html { get; } Property Value Type Description MimeType The HTML. | Edit this page View Source ICal Gets the i cal. Declaration public static MimeType ICal { get; } Property Value Type Description MimeType The i cal. | Edit this page View Source PowerPoint Gets the power point. Declaration public static MimeType PowerPoint { get; } Property Value Type Description MimeType The power point. | Edit this page View Source RSS Gets the RSS. Declaration public static MimeType RSS { get; } Property Value Type Description MimeType The RSS. | Edit this page View Source Text Gets the text. Declaration public static MimeType Text { get; } Property Value Type Description MimeType The text. | Edit this page View Source Unknown Gets the unknown. Declaration public static MimeType Unknown { get; } Property Value Type Description MimeType The unknown. | Edit this page View Source VCal Gets the v cal. Declaration public static MimeType VCal { get; } Property Value Type Description MimeType The v cal. | Edit this page View Source VCard Gets the v card. Declaration public static MimeType VCard { get; } Property Value Type Description MimeType The v card. | Edit this page View Source Word Gets the word. Declaration public static MimeType Word { get; } Property Value Type Description MimeType The word. | Edit this page View Source XML Gets the XML. Declaration public static MimeType XML { get; } Property Value Type Description MimeType The XML. Methods | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() Operators | Edit this page View Source implicit operator string(MimeType) Performs an implicit conversion from MimeType to string. Declaration public static implicit operator string(MimeType mimeType) Parameters Type Name Description MimeType mimeType Type of the MIME. Returns Type Description string The result of the conversion. | Edit this page View Source implicit operator MimeType(string) Performs an implicit conversion from string to MimeType. Declaration public static implicit operator MimeType(string name) Parameters Type Name Description string name The name. Returns Type Description MimeType The result of the conversion."
  },
  "api/FileCurator.Enums.html": {
    "href": "api/FileCurator.Enums.html",
    "title": "Namespace FileCurator.Enums | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Enums Classes MimeType Mime type enum like static class Enums CopyOptions Options used in directory copying"
  },
  "api/FileCurator.FileInfo.html": {
    "href": "api/FileCurator.FileInfo.html",
    "title": "Class FileInfo | FileCurator API Reference",
    "keywords": "Class FileInfo File info class Inheritance object FileInfo Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator Assembly: FileCurator.dll Syntax public class FileInfo : IFile, IComparable<IFile>, IComparable, IEquatable<IFile> Constructors | Edit this page View Source FileInfo(IFile?) Constructor Declaration public FileInfo(IFile? internalFile) Parameters Type Name Description IFile internalFile Internal file | Edit this page View Source FileInfo(string, Credentials?) Constructor Declaration public FileInfo(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Properties | Edit this page View Source Accessed Last time accessed (UTC time) Declaration public DateTime Accessed { get; } Property Value Type Description DateTime | Edit this page View Source Created Time created (UTC time) Declaration public DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Directory Directory the file is within Declaration public IDirectory? Directory { get; } Property Value Type Description IDirectory | Edit this page View Source Exists Does the file exist? Declaration public bool Exists { get; } Property Value Type Description bool | Edit this page View Source Extension File extension Declaration public string Extension { get; } Property Value Type Description string | Edit this page View Source FormatManager Gets or sets the internal manager. Declaration protected Manager? FormatManager { get; } Property Value Type Description Manager The internal manager. | Edit this page View Source FullName Full path Declaration public string FullName { get; } Property Value Type Description string | Edit this page View Source InternalFile Internal directory Declaration protected IFile? InternalFile { get; } Property Value Type Description IFile | Edit this page View Source Length Size of the file Declaration public long Length { get; } Property Value Type Description long | Edit this page View Source Modified Time modified (UTC time) Declaration public DateTime Modified { get; } Property Value Type Description DateTime | Edit this page View Source Name Name of the file Declaration public string Name { get; } Property Value Type Description string Methods | Edit this page View Source CompareTo(IFile) Compares this to another file Declaration public int CompareTo(IFile other) Parameters Type Name Description IFile other File to compare to Returns Type Description int | Edit this page View Source CompareTo(object) Compares this object to another object Declaration public int CompareTo(object obj) Parameters Type Name Description object obj Object to compare it to Returns Type Description int | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration public IFile? CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file | Edit this page View Source CopyToAsync(IDirectory, bool) Copies the file to another directory Declaration public Task<IFile?> CopyToAsync(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description Task<IFile> The newly created file | Edit this page View Source Delete() Deletes the file Declaration public string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) | Edit this page View Source DeleteAsync() Deletes the file Declaration public Task<string> DeleteAsync() Returns Type Description Task<string> Any response for deleting the resource (usually FTP, HTTP, etc) | Edit this page View Source Equals(IFile) Determines if the files are equal Declaration public bool Equals(IFile other) Parameters Type Name Description IFile other Other file Returns Type Description bool True if they are equal, false otherwise | Edit this page View Source Equals(object) Determines if the objects are equal Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Object to compare to Returns Type Description bool True if they are equal, false otherwise Overrides object.Equals(object) | Edit this page View Source GetHashCode() Gets the hash code for the file Declaration public override int GetHashCode() Returns Type Description int The hash code Overrides object.GetHashCode() | Edit this page View Source MoveTo(IDirectory) Moves the file to a new directory Declaration public IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IFile | Edit this page View Source MoveToAsync(IDirectory) Moves the file to another directory Declaration public Task<IFile> MoveToAsync(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move the file to Returns Type Description Task<IFile> | Edit this page View Source Parse() Parses this instance. Declaration public IGenericFile Parse() Returns Type Description IGenericFile The parsed file Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source ParseAsync() Parses this instance. Declaration public Task<IGenericFile> ParseAsync() Returns Type Description Task<IGenericFile> The parsed file Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source ParseAsync<TFile>() Parses this instance. Declaration public Task<TFile> ParseAsync<TFile>() where TFile : IGenericFile Returns Type Description Task<TFile> The parsed file Type Parameters Name Description TFile The type of the file object expected. Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source Parse<TFile>() Parses this instance. Declaration public TFile Parse<TFile>() where TFile : IGenericFile Returns Type Description TFile The parsed file Type Parameters Name Description TFile The type of the file object expected. Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source Read() Reads the file in as a string Declaration public string Read() Returns Type Description string The file contents as a string | Edit this page View Source ReadAsync() Reads the file to the end as a string Declaration public Task<string> ReadAsync() Returns Type Description Task<string> A string containing the contents of the file | Edit this page View Source ReadBinary() Reads a file as binary Declaration public byte[] ReadBinary() Returns Type Description byte[] The file contents as a byte array | Edit this page View Source ReadBinaryAsync() Reads the file to the end as a byte array Declaration public Task<byte[]> ReadBinaryAsync() Returns Type Description Task<byte[]> A byte array containing the contents of the file | Edit this page View Source Rename(string) Renames the file Declaration public IFile Rename(string newName) Parameters Type Name Description string newName New name for the file Returns Type Description IFile | Edit this page View Source RenameAsync(string) Renames the file Declaration public Task<IFile> RenameAsync(string newName) Parameters Type Name Description string newName New file name Returns Type Description Task<IFile> | Edit this page View Source ToString() Returns the name of the file Declaration public override string ToString() Returns Type Description string The name of the file Overrides object.ToString() | Edit this page View Source Write(IGenericFile, FileMode) Writes the specified data. Declaration public bool Write(IGenericFile data, FileMode mode = FileMode.Create) Parameters Type Name Description IGenericFile data The data. FileMode mode The mode. Returns Type Description bool True if it was written successfully, false otherwise. | Edit this page View Source Write(byte[], FileMode) Writes content to the file Declaration public byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode Mode to open the file as Returns Type Description byte[] The result of the write or original content | Edit this page View Source Write(string, FileMode, Encoding?) Writes content to the file Declaration public string Write(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode Mode to open the file as Encoding encoding Encoding to use for the content Returns Type Description string The result of the write or original content | Edit this page View Source WriteAsync(IGenericFile, FileMode) Writes the specified data. Declaration public Task<bool> WriteAsync(IGenericFile data, FileMode mode = FileMode.Create) Parameters Type Name Description IGenericFile data The data. FileMode mode The mode. Returns Type Description Task<bool> True if it was written successfully, false otherwise. | Edit this page View Source WriteAsync(byte[], FileMode) Writes content to the file Declaration public Task<byte[]> WriteAsync(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode File mode Returns Type Description Task<byte[]> The result of the write or original content | Edit this page View Source WriteAsync(string, FileMode, Encoding?) Writes content to the file Declaration public Task<string> WriteAsync(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode File mode Encoding encoding Encoding that the content should be saved as (default is UTF8) Returns Type Description Task<string> The result of the write or original content Operators | Edit this page View Source operator ==(FileInfo, FileInfo) Determines if two directories are equal Declaration public static bool operator ==(FileInfo file1, FileInfo file2) Parameters Type Name Description FileInfo file1 File 1 FileInfo file2 File 2 Returns Type Description bool True if they are, false otherwise | Edit this page View Source operator >(FileInfo, FileInfo) Greater than Declaration public static bool operator >(FileInfo file1, FileInfo file2) Parameters Type Name Description FileInfo file1 File 1 FileInfo file2 File 2 Returns Type Description bool The result | Edit this page View Source operator >=(FileInfo, FileInfo) Greater than or equal Declaration public static bool operator >=(FileInfo file1, FileInfo file2) Parameters Type Name Description FileInfo file1 File 1 FileInfo file2 File 2 Returns Type Description bool The result | Edit this page View Source implicit operator byte[](FileInfo) Reads the file and converts it to a byte array Declaration public static implicit operator byte[](FileInfo file) Parameters Type Name Description FileInfo file File to read Returns Type Description byte[] The file as a byte array | Edit this page View Source implicit operator string(FileInfo) Reads the file and converts it to a string Declaration public static implicit operator string(FileInfo file) Parameters Type Name Description FileInfo file File to read Returns Type Description string The file as a string | Edit this page View Source operator !=(FileInfo, FileInfo) Determines if two directories are not equal Declaration public static bool operator !=(FileInfo file1, FileInfo file2) Parameters Type Name Description FileInfo file1 File 1 FileInfo file2 File 2 Returns Type Description bool True if they are not equal, false otherwise | Edit this page View Source operator <(FileInfo, FileInfo) Less than Declaration public static bool operator <(FileInfo file1, FileInfo file2) Parameters Type Name Description FileInfo file1 File 1 FileInfo file2 File 2 Returns Type Description bool The result | Edit this page View Source operator <=(FileInfo, FileInfo) Less than or equal Declaration public static bool operator <=(FileInfo file1, FileInfo file2) Parameters Type Name Description FileInfo file1 File 1 FileInfo file2 File 2 Returns Type Description bool The result Implements IFile IComparable<T> IComparable IEquatable<T>"
  },
  "api/FileCurator.FileSystem.html": {
    "href": "api/FileCurator.FileSystem.html",
    "title": "Class FileSystem | FileCurator API Reference",
    "keywords": "Class FileSystem Main class for FileCurator Inheritance object FileSystem Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator Assembly: FileCurator.dll Syntax public class FileSystem : IDisposable Constructors | Edit this page View Source FileSystem(IEnumerable<IFileSystem>) Constructor Declaration public FileSystem(IEnumerable<IFileSystem> fileSystems) Parameters Type Name Description IEnumerable<IFileSystem> fileSystems The file systems. Properties | Edit this page View Source FileSystems File systems that the library can use Declaration protected IDictionary<string, IFileSystem> FileSystems { get; } Property Value Type Description IDictionary<string, IFileSystem> | Edit this page View Source Instance Gets the instance. Declaration public static FileSystem? Instance { get; } Property Value Type Description FileSystem The instance. | Edit this page View Source this[string] Gets the file system by name Declaration public IFileSystem this[string name] { get; } Parameters Type Name Description string name Name of the file system Property Value Type Description IFileSystem The file system specified Methods | Edit this page View Source Directory(string, Credentials?) Gets the directory representation for the directory Declaration public IDirectory? Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Edit this page View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool managed) Parameters Type Name Description bool managed true to release both managed and unmanaged resources; false to release only unmanaged resources. | Edit this page View Source File(string, Credentials?) Gets the class representation for the file Declaration public IFile? File(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object | Edit this page View Source FindSystem(string) Finds a file system compatible with the path Declaration protected IFileSystem? FindSystem(string path) Parameters Type Name Description string path Path to search for Returns Type Description IFileSystem The file system associated with the path | Edit this page View Source ToString() Outputs the file system information in string format Declaration public override string ToString() Returns Type Description string The list of file systems that are available Overrides object.ToString() Implements IDisposable"
  },
  "api/FileCurator.Formats.BaseClasses.FormatBaseClass-3.html": {
    "href": "api/FileCurator.Formats.BaseClasses.FormatBaseClass-3.html",
    "title": "Class FormatBaseClass<TFileReader, TFileWriter, TFile> | FileCurator API Reference",
    "keywords": "Class FormatBaseClass<TFileReader, TFileWriter, TFile> Format base class Inheritance object FormatBaseClass<TFileReader, TFileWriter, TFile> DelimitedFormat ExcelFormat HTMLFormat ICalendarFormat MimeFormat PowerPointFormat RSSFormat TxtFormat VCalendarFormat VCardFormat WordFormat XMLFormat MSGFormat PDFFormat Implements IFormat<TFile> IFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.BaseClasses Assembly: FileCurator.dll Syntax public abstract class FormatBaseClass<TFileReader, TFileWriter, TFile> : IFormat<TFile>, IFormat where TFileReader : IGenericFileReader<TFile>, new() where TFileWriter : IGenericFileWriter, new() where TFile : IGenericFile Type Parameters Name Description TFileReader The type of the file reader. TFileWriter The type of the file writer. TFile The type of the file. Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public abstract string[] ContentTypes { get; } Property Value Type Description string[] The content types. See Also IFormat<TFile> IFormat | Edit this page View Source DisplayName Gets the display name. Declaration public abstract string DisplayName { get; } Property Value Type Description string The display name. See Also IFormat<TFile> IFormat | Edit this page View Source FileTypes Gets the file types. Declaration public abstract string[] FileTypes { get; } Property Value Type Description string[] The file types. See Also IFormat<TFile> IFormat | Edit this page View Source HeaderInfo Gets the header information. Declaration public byte[] HeaderInfo { get; } Property Value Type Description byte[] The header information. See Also IFormat<TFile> IFormat | Edit this page View Source Reader Gets the reader. Declaration protected TFileReader Reader { get; } Property Value Type Description TFileReader The reader. See Also IFormat<TFile> IFormat | Edit this page View Source Writer Gets the writer. Declaration protected TFileWriter Writer { get; } Property Value Type Description TFileWriter The writer. See Also IFormat<TFile> IFormat Methods | Edit this page View Source CanRead(Stream) Determines whether this instance can decode the specified stream. Declaration public bool CanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise See Also IFormat<TFile> IFormat | Edit this page View Source CanRead(string) Determines whether this instance can decode the specified file name. Declaration public bool CanRead(string fileName) Parameters Type Name Description string fileName Name of the file. Returns Type Description bool True if it can, false otherwise See Also IFormat<TFile> IFormat | Edit this page View Source CanWrite(string) Determines whether this instance can encode the specified file name. Declaration public bool CanWrite(string fileName) Parameters Type Name Description string fileName Name of the file. Returns Type Description bool True if it can, false otherwise See Also IFormat<TFile> IFormat | Edit this page View Source Read(Stream) Parses the specified stream. Declaration public TFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description TFile The resulting file content. See Also IFormat<TFile> IFormat | Edit this page View Source ReadAsync(Stream) Parses the specified stream. Declaration public Task<TFile> ReadAsync(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description Task<TFile> The resulting file content. See Also IFormat<TFile> IFormat | Edit this page View Source ReadBase(Stream) Reads the base. Declaration public IGenericFile ReadBase(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile Returns an IGenericFile version of the doc. See Also IFormat<TFile> IFormat | Edit this page View Source ReadBaseAsync(Stream) Reads the base. Declaration public Task<IGenericFile> ReadBaseAsync(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description Task<IGenericFile> Returns an IGenericFile version of the doc. See Also IFormat<TFile> IFormat | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IFormat<TFile> IFormat | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IFormat<TFile> IFormat Implements IFormat<TFile> IFormat See Also IFormat<TFile> IFormat"
  },
  "api/FileCurator.Formats.BaseClasses.ReaderBaseClass-1.html": {
    "href": "api/FileCurator.Formats.BaseClasses.ReaderBaseClass-1.html",
    "title": "Class ReaderBaseClass<TFile> | FileCurator API Reference",
    "keywords": "Class ReaderBaseClass<TFile> Reader base class Inheritance object ReaderBaseClass<TFile> DelimitedReader ExcelReader HTMLReader ICalendarReader MimeReader PowerPointReader RSSReader TxtReader VCalendarReader VCardReader WordReader XMLReader MSGReader PDFReader Implements IGenericFileReader<TFile> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.BaseClasses Assembly: FileCurator.dll Syntax public abstract class ReaderBaseClass<TFile> : IGenericFileReader<TFile> where TFile : IGenericFile Type Parameters Name Description TFile The type of the file. Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public abstract byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. See Also IGenericFileReader<TFile> Methods | Edit this page View Source CanRead(Stream) Determines whether this instance can decode the specified stream. Declaration public bool CanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise See Also IGenericFileReader<TFile> | Edit this page View Source CanRead(string) Determines whether this instance can decode the specified file name. Declaration public bool CanRead(string fileName) Parameters Type Name Description string fileName Name of the file. Returns Type Description bool True if it can, false otherwise See Also IGenericFileReader<TFile> | Edit this page View Source InternalCanRead(Stream) Used to determine if a reader can actually read the file Declaration public virtual bool InternalCanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise See Also IGenericFileReader<TFile> | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public abstract TFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description TFile The file See Also IGenericFileReader<TFile> | Edit this page View Source ReadAsync(Stream) Reads the specified stream. Declaration public virtual Task<TFile> ReadAsync(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description Task<TFile> The file See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.BaseClasses.html": {
    "href": "api/FileCurator.Formats.BaseClasses.html",
    "title": "Namespace FileCurator.Formats.BaseClasses | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.BaseClasses Classes FormatBaseClass<TFileReader, TFileWriter, TFile> Format base class ReaderBaseClass<TFile> Reader base class"
  },
  "api/FileCurator.Formats.Data.Address.html": {
    "href": "api/FileCurator.Formats.Data.Address.html",
    "title": "Class Address | FileCurator API Reference",
    "keywords": "Class Address Address class Inheritance object Address Implements IAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class Address : IAddress Properties | Edit this page View Source City Gets or sets the city. Declaration public string? City { get; set; } Property Value Type Description string The city. See Also IAddress | Edit this page View Source Country Gets or sets the country. Declaration public string? Country { get; set; } Property Value Type Description string The country. See Also IAddress | Edit this page View Source Name Gets or sets the name. Declaration public string? Name { get; set; } Property Value Type Description string The name. See Also IAddress | Edit this page View Source StateOrProvence Gets or sets the state or provence. Declaration public string? StateOrProvence { get; set; } Property Value Type Description string The state or provence. See Also IAddress | Edit this page View Source Street Gets or sets the street. Declaration public string? Street { get; set; } Property Value Type Description string The street. See Also IAddress | Edit this page View Source Type Gets or sets the type. Declaration public string? Type { get; set; } Property Value Type Description string The type. See Also IAddress | Edit this page View Source ZipCode Gets or sets the area code. Declaration public string? ZipCode { get; set; } Property Value Type Description string The area code. See Also IAddress Implements IAddress See Also IAddress"
  },
  "api/FileCurator.Formats.Data.BaseClasses.FileBaseClass-1.html": {
    "href": "api/FileCurator.Formats.Data.BaseClasses.FileBaseClass-1.html",
    "title": "Class FileBaseClass<FormatFileType> | FileCurator API Reference",
    "keywords": "Class FileBaseClass<FormatFileType> File base class Inheritance object FileBaseClass<FormatFileType> FixedLengthBaseClass TableBaseClass GenericEmail GenericFile Implements IGenericFile Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Data.BaseClasses Assembly: FileCurator.dll Syntax public abstract class FileBaseClass<FormatFileType> : IGenericFile where FormatFileType : FileBaseClass<FormatFileType> Type Parameters Name Description FormatFileType The type of the format file type. Properties | Edit this page View Source Content Parsed content Declaration public abstract string Content { get; set; } Property Value Type Description string The content. See Also IGenericFile | Edit this page View Source Meta Meta data Declaration public abstract string Meta { get; set; } Property Value Type Description string The meta. See Also IGenericFile | Edit this page View Source Title Parsed title Declaration public abstract string Title { get; set; } Property Value Type Description string The title. See Also IGenericFile Methods | Edit this page View Source CompareTo(object) Compares the object to another object Declaration public int CompareTo(object obj) Parameters Type Name Description object obj Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger See Also IGenericFile | Edit this page View Source CompareTo(FormatFileType) Compares the object to another object Declaration public abstract int CompareTo(FormatFileType other) Parameters Type Name Description FormatFileType other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger See Also IGenericFile | Edit this page View Source Equals(object) Determines if the objects are equal Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Other object to compare to Returns Type Description bool True if they are equal, false otherwise Overrides object.Equals(object) See Also IGenericFile | Edit this page View Source Equals(FormatFileType) Determines if the objects are equal Declaration public abstract bool Equals(FormatFileType other) Parameters Type Name Description FormatFileType other Other object to compare to Returns Type Description bool True if they are equal, false otherwise See Also IGenericFile | Edit this page View Source GetHashCode() Gets the hash code for the object Declaration public override int GetHashCode() Returns Type Description int The hash code for the object Overrides object.GetHashCode() See Also IGenericFile Operators | Edit this page View Source operator ==(FileBaseClass<FormatFileType>, FileBaseClass<FormatFileType>) Determines if the two are equal Declaration public static bool operator ==(FileBaseClass<FormatFileType> Value1, FileBaseClass<FormatFileType> Value2) Parameters Type Name Description FileBaseClass<FormatFileType> Value1 Value 1 FileBaseClass<FormatFileType> Value2 Value 2 Returns Type Description bool True if they are equal, false otherwise See Also IGenericFile | Edit this page View Source operator >(FileBaseClass<FormatFileType>, FileBaseClass<FormatFileType>) Determines if it is greater than Declaration public static bool operator >(FileBaseClass<FormatFileType> Value1, FileBaseClass<FormatFileType> Value2) Parameters Type Name Description FileBaseClass<FormatFileType> Value1 Value 1 FileBaseClass<FormatFileType> Value2 Value 2 Returns Type Description bool True if it is greater than, false otherwise See Also IGenericFile | Edit this page View Source operator >=(FileBaseClass<FormatFileType>, FileBaseClass<FormatFileType>) Determines if it is greater than or equal Declaration public static bool operator >=(FileBaseClass<FormatFileType> Value1, FileBaseClass<FormatFileType> Value2) Parameters Type Name Description FileBaseClass<FormatFileType> Value1 Value 1 FileBaseClass<FormatFileType> Value2 Value 2 Returns Type Description bool True if it is greater than or equal, false otherwise See Also IGenericFile | Edit this page View Source operator !=(FileBaseClass<FormatFileType>, FileBaseClass<FormatFileType>) Determines if the two are not equal Declaration public static bool operator !=(FileBaseClass<FormatFileType> Value1, FileBaseClass<FormatFileType> Value2) Parameters Type Name Description FileBaseClass<FormatFileType> Value1 Value 1 FileBaseClass<FormatFileType> Value2 Value 2 Returns Type Description bool True if they are not equal, false otherwise See Also IGenericFile | Edit this page View Source operator <(FileBaseClass<FormatFileType>, FileBaseClass<FormatFileType>) Determines if it is less than Declaration public static bool operator <(FileBaseClass<FormatFileType> Value1, FileBaseClass<FormatFileType> Value2) Parameters Type Name Description FileBaseClass<FormatFileType> Value1 Value 1 FileBaseClass<FormatFileType> Value2 Value 2 Returns Type Description bool True if it is less than, false otherwise See Also IGenericFile | Edit this page View Source operator <=(FileBaseClass<FormatFileType>, FileBaseClass<FormatFileType>) Determines if it is less than or equal Declaration public static bool operator <=(FileBaseClass<FormatFileType> Value1, FileBaseClass<FormatFileType> Value2) Parameters Type Name Description FileBaseClass<FormatFileType> Value1 Value 1 FileBaseClass<FormatFileType> Value2 Value 2 Returns Type Description bool True if it is less than or equal, false otherwise See Also IGenericFile Implements IGenericFile See Also IGenericFile"
  },
  "api/FileCurator.Formats.Data.BaseClasses.TableBaseClass.html": {
    "href": "api/FileCurator.Formats.Data.BaseClasses.TableBaseClass.html",
    "title": "Class TableBaseClass | FileCurator API Reference",
    "keywords": "Class TableBaseClass Table base class Inheritance object FileBaseClass<TableBaseClass> TableBaseClass GenericTable Implements ITable IGenericFile Inherited Members FileBaseClass<TableBaseClass>.CompareTo(object) FileBaseClass<TableBaseClass>.CompareTo(TableBaseClass) FileBaseClass<TableBaseClass>.Equals(TableBaseClass) FileBaseClass<TableBaseClass>.Equals(object) FileBaseClass<TableBaseClass>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.Data.BaseClasses Assembly: FileCurator.dll Syntax public abstract class TableBaseClass : FileBaseClass<TableBaseClass>, ITable, IGenericFile Constructors | Edit this page View Source TableBaseClass() Initializes a new instance of the TableBaseClass class. Declaration protected TableBaseClass() See Also ITable Properties | Edit this page View Source Columns Gets the headers. Declaration public IList<string> Columns { get; } Property Value Type Description IList<string> The headers. See Also ITable | Edit this page View Source Content Parsed content Declaration public override string Content { get; set; } Property Value Type Description string The content. Overrides FileBaseClass<TableBaseClass>.Content See Also ITable | Edit this page View Source Meta Meta data Declaration public override string Meta { get; set; } Property Value Type Description string The meta. Overrides FileBaseClass<TableBaseClass>.Meta See Also ITable | Edit this page View Source Rows Gets the data rows. Declaration public IList<IRow> Rows { get; } Property Value Type Description IList<IRow> The data rows. See Also ITable | Edit this page View Source Title Parsed title Declaration public override string Title { get; set; } Property Value Type Description string The title. Overrides FileBaseClass<TableBaseClass>.Title See Also ITable Methods | Edit this page View Source Convert<TObject>() Converts this instance into the object array of the type specified. Declaration public List<TObject> Convert<TObject>() Returns Type Description List<TObject> The resulting array. Type Parameters Name Description TObject The type of the object. See Also ITable | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ITable Implements ITable IGenericFile See Also ITable"
  },
  "api/FileCurator.Formats.Data.BaseClasses.html": {
    "href": "api/FileCurator.Formats.Data.BaseClasses.html",
    "title": "Namespace FileCurator.Formats.Data.BaseClasses | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Data.BaseClasses Classes FileBaseClass<FormatFileType> File base class TableBaseClass Table base class"
  },
  "api/FileCurator.Formats.Data.Enums.Relationship.html": {
    "href": "api/FileCurator.Formats.Data.Enums.Relationship.html",
    "title": "Enum Relationship | FileCurator API Reference",
    "keywords": "Enum Relationship Enum defining relationships (used for XFN markup) Namespace: FileCurator.Formats.Data.Enums Assembly: FileCurator.dll Syntax public enum Relationship Fields Name Description Acquaintance Acquaintance Child Child CoResident Coresident CoWorker Coworker Colleague Colleague Contact Contact Crush Crush Date Date Friend Friend Kin Kin Me Me Met Met Muse Muse Neighbor Neighbor Parent Parent Sibling Sibling Spouse Spouse Sweetheart Sweetheart"
  },
  "api/FileCurator.Formats.Data.Enums.html": {
    "href": "api/FileCurator.Formats.Data.Enums.html",
    "title": "Namespace FileCurator.Formats.Data.Enums | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Data.Enums Enums Relationship Enum defining relationships (used for XFN markup)"
  },
  "api/FileCurator.Formats.Data.GenericCalendar.html": {
    "href": "api/FileCurator.Formats.Data.GenericCalendar.html",
    "title": "Class GenericCalendar | FileCurator API Reference",
    "keywords": "Class GenericCalendar Generic calendar item Inheritance object GenericCalendar Implements ICalendar IGenericFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class GenericCalendar : ICalendar, IGenericFile Constructors | Edit this page View Source GenericCalendar() Initializes a new instance of the GenericCalendar class. Declaration public GenericCalendar() See Also ICalendar Properties | Edit this page View Source AttendeeList List of attendees Declaration public IList<IMailAddress> AttendeeList { get; } Property Value Type Description IList<IMailAddress> See Also ICalendar | Edit this page View Source Cancel Determines if the calendar item is being canceled Declaration public bool Cancel { get; set; } Property Value Type Description bool See Also ICalendar | Edit this page View Source Content Parsed content Declaration public string Content { get; } Property Value Type Description string The content. See Also ICalendar | Edit this page View Source CurrentTimeZone The time zone for the calendar event Declaration public TimeZoneInfo CurrentTimeZone { get; set; } Property Value Type Description TimeZoneInfo See Also ICalendar | Edit this page View Source Description Gets the description. Declaration public string Description { get; set; } Property Value Type Description string The description. See Also ICalendar | Edit this page View Source EndTime The end time Declaration public DateTime EndTime { get; set; } Property Value Type Description DateTime See Also ICalendar | Edit this page View Source Location The location of the event Declaration public string Location { get; set; } Property Value Type Description string See Also ICalendar | Edit this page View Source Meta Meta data Declaration public string Meta { get; } Property Value Type Description string The meta. See Also ICalendar | Edit this page View Source Organizer Organizer Declaration public IMailAddress Organizer { get; set; } Property Value Type Description IMailAddress See Also ICalendar | Edit this page View Source StartTime The start time Declaration public DateTime StartTime { get; set; } Property Value Type Description DateTime See Also ICalendar | Edit this page View Source Status Sets the status for the appointment (FREE, BUSY, etc.) Declaration public string Status { get; set; } Property Value Type Description string See Also ICalendar | Edit this page View Source Subject Gets the subject. Declaration public string Subject { get; set; } Property Value Type Description string The subject. See Also ICalendar | Edit this page View Source Title Parsed title Declaration public string Title { get; } Property Value Type Description string The title. See Also ICalendar Methods | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ICalendar Implements ICalendar IGenericFile See Also ICalendar"
  },
  "api/FileCurator.Formats.Data.GenericCard.html": {
    "href": "api/FileCurator.Formats.Data.GenericCard.html",
    "title": "Class GenericCard | FileCurator API Reference",
    "keywords": "Class GenericCard Generic card Inheritance object GenericCard Implements ICard IGenericFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class GenericCard : ICard, IGenericFile Properties | Edit this page View Source Addresses Gets or sets the addresses. Declaration public IList<IAddress> Addresses { get; set; } Property Value Type Description IList<IAddress> The addresses. See Also ICard | Edit this page View Source Content Parsed content Declaration public string Content { get; } Property Value Type Description string The content. See Also ICard | Edit this page View Source DirectDial Work phone number of the individual Declaration public IList<IPhoneNumber> DirectDial { get; set; } Property Value Type Description IList<IPhoneNumber> See Also ICard | Edit this page View Source Email Email of the individual Declaration public IList<IMailAddress> Email { get; set; } Property Value Type Description IList<IMailAddress> See Also ICard | Edit this page View Source FirstName First name Declaration public string FirstName { get; set; } Property Value Type Description string See Also ICard | Edit this page View Source FullName Full name Declaration public string FullName { get; } Property Value Type Description string See Also ICard | Edit this page View Source LastName Last name Declaration public string LastName { get; set; } Property Value Type Description string See Also ICard | Edit this page View Source Meta Meta data Declaration public string Meta { get; } Property Value Type Description string The meta. See Also ICard | Edit this page View Source MiddleName Middle name Declaration public string MiddleName { get; set; } Property Value Type Description string See Also ICard | Edit this page View Source Name Name Declaration protected string Name { get; } Property Value Type Description string See Also ICard | Edit this page View Source Organization Organization the person belongs to Declaration public string Organization { get; set; } Property Value Type Description string See Also ICard | Edit this page View Source Prefix Prefix Declaration public string Prefix { get; set; } Property Value Type Description string See Also ICard | Edit this page View Source Relationships Relationship to the person (uses XFN) Declaration public IList<Relationship> Relationships { get; } Property Value Type Description IList<Relationship> See Also ICard | Edit this page View Source Subject Gets the subject. Declaration public string Subject { get; set; } Property Value Type Description string The subject. See Also ICard | Edit this page View Source Suffix Suffix Declaration public string Suffix { get; set; } Property Value Type Description string See Also ICard | Edit this page View Source Title Parsed title Declaration public string Title { get; set; } Property Value Type Description string The title. See Also ICard | Edit this page View Source Url Url to the person's site Declaration public string Url { get; set; } Property Value Type Description string See Also ICard Methods | Edit this page View Source ToString() Gets the VCard as a string Declaration public override string ToString() Returns Type Description string VCard as a string Overrides object.ToString() See Also ICard Implements ICard IGenericFile See Also ICard"
  },
  "api/FileCurator.Formats.Data.GenericCell.html": {
    "href": "api/FileCurator.Formats.Data.GenericCell.html",
    "title": "Class GenericCell | FileCurator API Reference",
    "keywords": "Class GenericCell Generic cell data Inheritance object GenericCell Implements ICell Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class GenericCell : ICell Constructors | Edit this page View Source GenericCell(string) Initializes a new instance of the GenericCell class. Declaration public GenericCell(string content) Parameters Type Name Description string content The content. See Also ICell Properties | Edit this page View Source Content Gets or sets the content. Declaration public string Content { get; set; } Property Value Type Description string The content. See Also ICell Methods | Edit this page View Source GetValue<TValue>() Gets the value as the type specified. Declaration public TValue GetValue<TValue>() Returns Type Description TValue The content of the cell as the value type specified. Type Parameters Name Description TValue The type of the value. See Also ICell | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ICell Implements ICell See Also ICell"
  },
  "api/FileCurator.Formats.Data.GenericEmail.html": {
    "href": "api/FileCurator.Formats.Data.GenericEmail.html",
    "title": "Class GenericEmail | FileCurator API Reference",
    "keywords": "Class GenericEmail Generic email message Inheritance object FileBaseClass<GenericEmail> GenericEmail Implements IMessage IGenericFile Inherited Members FileBaseClass<GenericEmail>.CompareTo(object) FileBaseClass<GenericEmail>.Equals(object) FileBaseClass<GenericEmail>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class GenericEmail : FileBaseClass<GenericEmail>, IMessage, IGenericFile Properties | Edit this page View Source BCC Gets the BCC. Declaration public IList<string> BCC { get; } Property Value Type Description IList<string> The BCC. See Also IMessage | Edit this page View Source CC Gets the cc. Declaration public IList<string> CC { get; } Property Value Type Description IList<string> The cc. See Also IMessage | Edit this page View Source Content Parsed content Declaration public override string Content { get; set; } Property Value Type Description string The content. Overrides FileBaseClass<GenericEmail>.Content See Also IMessage | Edit this page View Source From Gets or sets from. Declaration public string From { get; set; } Property Value Type Description string From. See Also IMessage | Edit this page View Source Meta Meta data Declaration public override string Meta { get; set; } Property Value Type Description string The meta. Overrides FileBaseClass<GenericEmail>.Meta See Also IMessage | Edit this page View Source Sent Gets or sets the sent. Declaration public DateTime Sent { get; set; } Property Value Type Description DateTime The sent. See Also IMessage | Edit this page View Source Title Parsed title Declaration public override string Title { get; set; } Property Value Type Description string The title. Overrides FileBaseClass<GenericEmail>.Title See Also IMessage | Edit this page View Source To Gets to. Declaration public IList<string> To { get; } Property Value Type Description IList<string> To. See Also IMessage Methods | Edit this page View Source CompareTo(GenericEmail) Compares the object to another object Declaration public override int CompareTo(GenericEmail other) Parameters Type Name Description GenericEmail other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides FileBaseClass<GenericEmail>.CompareTo(GenericEmail) See Also IMessage | Edit this page View Source Equals(GenericEmail) Determines if the objects are equal Declaration public override bool Equals(GenericEmail other) Parameters Type Name Description GenericEmail other Other object to compare to Returns Type Description bool True if they are equal, false otherwise Overrides FileBaseClass<GenericEmail>.Equals(GenericEmail) See Also IMessage Implements IMessage IGenericFile See Also IMessage"
  },
  "api/FileCurator.Formats.Data.GenericFile.html": {
    "href": "api/FileCurator.Formats.Data.GenericFile.html",
    "title": "Class GenericFile | FileCurator API Reference",
    "keywords": "Class GenericFile Generic file Inheritance object FileBaseClass<GenericFile> GenericFile Implements IGenericFile Inherited Members FileBaseClass<GenericFile>.CompareTo(object) FileBaseClass<GenericFile>.Equals(object) FileBaseClass<GenericFile>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class GenericFile : FileBaseClass<GenericFile>, IGenericFile Constructors | Edit this page View Source GenericFile(string, string, string) Initializes a new instance of the GenericFile class. Declaration public GenericFile(string content, string title, string meta) Parameters Type Name Description string content The content. string title The title. string meta The meta. See Also FileBaseClass<FormatFileType> Properties | Edit this page View Source Content Gets the content. Declaration public override string Content { get; set; } Property Value Type Description string The content. Overrides FileBaseClass<GenericFile>.Content See Also FileBaseClass<FormatFileType> | Edit this page View Source Meta Meta data Declaration public override string Meta { get; set; } Property Value Type Description string The meta. Overrides FileBaseClass<GenericFile>.Meta See Also FileBaseClass<FormatFileType> | Edit this page View Source Title Parsed title Declaration public override string Title { get; set; } Property Value Type Description string The title. Overrides FileBaseClass<GenericFile>.Title See Also FileBaseClass<FormatFileType> Methods | Edit this page View Source CompareTo(GenericFile) Compares the object to another object Declaration public override int CompareTo(GenericFile other) Parameters Type Name Description GenericFile other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides FileBaseClass<GenericFile>.CompareTo(GenericFile) See Also FileBaseClass<FormatFileType> | Edit this page View Source Equals(GenericFile) Determines if the objects are equal Declaration public override bool Equals(GenericFile other) Parameters Type Name Description GenericFile other Other object to compare to Returns Type Description bool True if they are equal, false otherwise Overrides FileBaseClass<GenericFile>.Equals(GenericFile) See Also FileBaseClass<FormatFileType> | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also FileBaseClass<FormatFileType> Implements IGenericFile See Also FileBaseClass<FormatFileType>"
  },
  "api/FileCurator.Formats.Data.GenericRow.html": {
    "href": "api/FileCurator.Formats.Data.GenericRow.html",
    "title": "Class GenericRow | FileCurator API Reference",
    "keywords": "Class GenericRow Generic row data Inheritance object GenericRow Implements IRow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class GenericRow : IRow Properties | Edit this page View Source Cells Gets or sets the cells. Declaration public IList<ICell> Cells { get; } Property Value Type Description IList<ICell> The cells. See Also IRow Methods | Edit this page View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also IRow Implements IRow See Also IRow"
  },
  "api/FileCurator.Formats.Data.GenericTable.html": {
    "href": "api/FileCurator.Formats.Data.GenericTable.html",
    "title": "Class GenericTable | FileCurator API Reference",
    "keywords": "Class GenericTable Generic table object Inheritance object FileBaseClass<TableBaseClass> TableBaseClass GenericTable Implements ITable IGenericFile Inherited Members TableBaseClass.Columns TableBaseClass.Content TableBaseClass.Meta TableBaseClass.Rows TableBaseClass.Title TableBaseClass.Convert<TObject>() TableBaseClass.ToString() FileBaseClass<TableBaseClass>.CompareTo(object) FileBaseClass<TableBaseClass>.Equals(object) FileBaseClass<TableBaseClass>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class GenericTable : TableBaseClass, ITable, IGenericFile Methods | Edit this page View Source CompareTo(TableBaseClass) Compares the object to another object Declaration public override int CompareTo(TableBaseClass other) Parameters Type Name Description TableBaseClass other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides FileBaseClass<TableBaseClass>.CompareTo(TableBaseClass) See Also TableBaseClass | Edit this page View Source Equals(TableBaseClass) Determines if the objects are equal Declaration public override bool Equals(TableBaseClass other) Parameters Type Name Description TableBaseClass other Other object to compare to Returns Type Description bool True if they are equal, false otherwise Overrides FileBaseClass<TableBaseClass>.Equals(TableBaseClass) See Also TableBaseClass Implements ITable IGenericFile See Also TableBaseClass"
  },
  "api/FileCurator.Formats.Data.Interface.IPhoneNumber.html": {
    "href": "api/FileCurator.Formats.Data.Interface.IPhoneNumber.html",
    "title": "Interface IPhoneNumber | FileCurator API Reference",
    "keywords": "Interface IPhoneNumber Phone number Namespace: FileCurator.Formats.Data.Interface Assembly: FileCurator.dll Syntax public interface IPhoneNumber Properties | Edit this page View Source Number Gets or sets the number. Declaration string Number { get; set; } Property Value Type Description string The number. | Edit this page View Source Type Gets or sets the type. Declaration string Type { get; set; } Property Value Type Description string The type."
  },
  "api/FileCurator.Formats.Data.Interface.html": {
    "href": "api/FileCurator.Formats.Data.Interface.html",
    "title": "Namespace FileCurator.Formats.Data.Interface | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Data.Interface Interfaces IPhoneNumber Phone number"
  },
  "api/FileCurator.Formats.Data.Interfaces.IAddress.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IAddress.html",
    "title": "Interface IAddress | FileCurator API Reference",
    "keywords": "Interface IAddress Address interface Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IAddress Properties | Edit this page View Source City Gets or sets the city. Declaration string? City { get; set; } Property Value Type Description string The city. | Edit this page View Source Country Gets or sets the country. Declaration string? Country { get; set; } Property Value Type Description string The country. | Edit this page View Source Name Gets or sets the name. Declaration string? Name { get; set; } Property Value Type Description string The name. | Edit this page View Source StateOrProvence Gets or sets the state or provence. Declaration string? StateOrProvence { get; set; } Property Value Type Description string The state or provence. | Edit this page View Source Street Gets or sets the street. Declaration string? Street { get; set; } Property Value Type Description string The street. | Edit this page View Source Type Gets or sets the type. Declaration string? Type { get; set; } Property Value Type Description string The type. | Edit this page View Source ZipCode Gets or sets the area code. Declaration string? ZipCode { get; set; } Property Value Type Description string The area code."
  },
  "api/FileCurator.Formats.Data.Interfaces.ICalendar.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.ICalendar.html",
    "title": "Interface ICalendar | FileCurator API Reference",
    "keywords": "Interface ICalendar Calendar item Inherited Members IGenericFile.Content IGenericFile.Meta IGenericFile.Title Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface ICalendar : IGenericFile Properties | Edit this page View Source AttendeeList List of attendees Declaration IList<IMailAddress> AttendeeList { get; } Property Value Type Description IList<IMailAddress> See Also IGenericFile | Edit this page View Source Cancel Determines if the calendar item is being canceled Declaration bool Cancel { get; set; } Property Value Type Description bool See Also IGenericFile | Edit this page View Source CurrentTimeZone The time zone for the calendar event Declaration TimeZoneInfo CurrentTimeZone { get; set; } Property Value Type Description TimeZoneInfo See Also IGenericFile | Edit this page View Source Description Gets the description. Declaration string Description { get; set; } Property Value Type Description string The description. See Also IGenericFile | Edit this page View Source EndTime The end time Declaration DateTime EndTime { get; set; } Property Value Type Description DateTime See Also IGenericFile | Edit this page View Source Location The location of the event Declaration string Location { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source Organizer Organizer Declaration IMailAddress Organizer { get; set; } Property Value Type Description IMailAddress See Also IGenericFile | Edit this page View Source StartTime The start time Declaration DateTime StartTime { get; set; } Property Value Type Description DateTime See Also IGenericFile | Edit this page View Source Status Sets the status for the appointment (FREE, BUSY, etc.) Declaration string Status { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source Subject Gets the subject. Declaration string Subject { get; set; } Property Value Type Description string The subject. See Also IGenericFile See Also IGenericFile"
  },
  "api/FileCurator.Formats.Data.Interfaces.ICard.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.ICard.html",
    "title": "Interface ICard | FileCurator API Reference",
    "keywords": "Interface ICard Card file type Inherited Members IGenericFile.Content IGenericFile.Meta Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface ICard : IGenericFile Properties | Edit this page View Source Addresses Gets or sets the addresses. Declaration IList<IAddress> Addresses { get; set; } Property Value Type Description IList<IAddress> The addresses. See Also IGenericFile | Edit this page View Source DirectDial Work phone number of the individual Declaration IList<IPhoneNumber> DirectDial { get; set; } Property Value Type Description IList<IPhoneNumber> See Also IGenericFile | Edit this page View Source Email Email of the individual Declaration IList<IMailAddress> Email { get; set; } Property Value Type Description IList<IMailAddress> See Also IGenericFile | Edit this page View Source FirstName First name Declaration string FirstName { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source FullName Gets or sets the full name. Declaration string FullName { get; } Property Value Type Description string The full name. See Also IGenericFile | Edit this page View Source LastName Last name Declaration string LastName { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source MiddleName Middle name Declaration string MiddleName { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source Organization Organization the person belongs to Declaration string Organization { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source Prefix Prefix Declaration string Prefix { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source Relationships Relationship to the person (uses XFN) Declaration IList<Relationship> Relationships { get; } Property Value Type Description IList<Relationship> See Also IGenericFile | Edit this page View Source Suffix Suffix Declaration string Suffix { get; set; } Property Value Type Description string See Also IGenericFile | Edit this page View Source Title Gets or sets the title. Declaration string Title { get; set; } Property Value Type Description string The title. See Also IGenericFile | Edit this page View Source Url Url to the person's site Declaration string Url { get; set; } Property Value Type Description string See Also IGenericFile See Also IGenericFile"
  },
  "api/FileCurator.Formats.Data.Interfaces.ICell.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.ICell.html",
    "title": "Interface ICell | FileCurator API Reference",
    "keywords": "Interface ICell Cell interface Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface ICell Properties | Edit this page View Source Content Gets or sets the content. Declaration string Content { get; set; } Property Value Type Description string The content. Methods | Edit this page View Source GetValue<TValue>() Gets the value as the type specified. Declaration TValue GetValue<TValue>() Returns Type Description TValue The content of the cell as the value type specified. Type Parameters Name Description TValue The type of the value."
  },
  "api/FileCurator.Formats.Data.Interfaces.IChannel.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IChannel.html",
    "title": "Interface IChannel | FileCurator API Reference",
    "keywords": "Interface IChannel Channel interface Inherited Members IList<IFeedItem>.IndexOf(IFeedItem) IList<IFeedItem>.Insert(int, IFeedItem) IList<IFeedItem>.RemoveAt(int) IList<IFeedItem>.this[int] ICollection<IFeedItem>.Add(IFeedItem) ICollection<IFeedItem>.Clear() ICollection<IFeedItem>.Contains(IFeedItem) ICollection<IFeedItem>.CopyTo(IFeedItem[], int) ICollection<IFeedItem>.Remove(IFeedItem) ICollection<IFeedItem>.Count ICollection<IFeedItem>.IsReadOnly IEnumerable<IFeedItem>.GetEnumerator() Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IChannel : IList<IFeedItem>, ICollection<IFeedItem>, IEnumerable<IFeedItem>, IEnumerable Properties | Edit this page View Source Categories Gets the categories. Declaration IList<string> Categories { get; } Property Value Type Description IList<string> The categories. | Edit this page View Source Cloud Gets the cloud. Declaration string? Cloud { get; set; } Property Value Type Description string The cloud. | Edit this page View Source Content Gets the content. Declaration string Content { get; } Property Value Type Description string The content. | Edit this page View Source Copyright Gets the copyright. Declaration string Copyright { get; set; } Property Value Type Description string The copyright. | Edit this page View Source Description Gets the description. Declaration string? Description { get; set; } Property Value Type Description string The description. | Edit this page View Source Docs Gets the docs. Declaration string Docs { get; set; } Property Value Type Description string The docs. | Edit this page View Source Explicit Gets or sets a value indicating whether this IChannel is explicit. Declaration bool Explicit { get; set; } Property Value Type Description bool true if explicit; otherwise, false. | Edit this page View Source ImageUrl Gets or sets the image URL. Declaration string? ImageUrl { get; set; } Property Value Type Description string The image URL. | Edit this page View Source Language Gets or sets the language. Declaration string Language { get; set; } Property Value Type Description string The language. | Edit this page View Source Link Gets or sets the link. Declaration string? Link { get; set; } Property Value Type Description string The link. | Edit this page View Source PubDate Gets or sets the pub date. Declaration DateTime PubDate { get; set; } Property Value Type Description DateTime The pub date. | Edit this page View Source TTL Gets or sets the TTL. Declaration int TTL { get; set; } Property Value Type Description int The TTL. | Edit this page View Source Title Gets or sets the title. Declaration string? Title { get; set; } Property Value Type Description string The title. | Edit this page View Source WebMaster Gets or sets the web master. Declaration string? WebMaster { get; set; } Property Value Type Description string The web master."
  },
  "api/FileCurator.Formats.Data.Interfaces.IEnclosure.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IEnclosure.html",
    "title": "Interface IEnclosure | FileCurator API Reference",
    "keywords": "Interface IEnclosure Enclosure interface Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IEnclosure Properties | Edit this page View Source Length Gets or sets the length. Declaration int Length { get; set; } Property Value Type Description int The length. | Edit this page View Source Type Gets or sets the type. Declaration string? Type { get; set; } Property Value Type Description string The type. | Edit this page View Source Url Gets or sets the URL. Declaration string? Url { get; set; } Property Value Type Description string The URL."
  },
  "api/FileCurator.Formats.Data.Interfaces.IFeed.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IFeed.html",
    "title": "Interface IFeed | FileCurator API Reference",
    "keywords": "Interface IFeed Feed interface Inherited Members IGenericFile.Content IGenericFile.Meta IGenericFile.Title IList<IChannel>.IndexOf(IChannel) IList<IChannel>.Insert(int, IChannel) IList<IChannel>.RemoveAt(int) IList<IChannel>.this[int] ICollection<IChannel>.Add(IChannel) ICollection<IChannel>.Clear() ICollection<IChannel>.Contains(IChannel) ICollection<IChannel>.CopyTo(IChannel[], int) ICollection<IChannel>.Remove(IChannel) ICollection<IChannel>.Count ICollection<IChannel>.IsReadOnly IEnumerable<IChannel>.GetEnumerator() Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IFeed : IGenericFile, IList<IChannel>, ICollection<IChannel>, IEnumerable<IChannel>, IEnumerable Properties | Edit this page View Source Channels Gets the channels. Declaration IList<IChannel> Channels { get; } Property Value Type Description IList<IChannel> The channels. See Also IGenericFile See Also IGenericFile"
  },
  "api/FileCurator.Formats.Data.Interfaces.IFeedGuid.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IFeedGuid.html",
    "title": "Interface IFeedGuid | FileCurator API Reference",
    "keywords": "Interface IFeedGuid Feed Guid Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IFeedGuid Properties | Edit this page View Source GuidText Gets or sets the unique identifier text. Declaration string? GuidText { get; set; } Property Value Type Description string The unique identifier text. | Edit this page View Source IsPermaLink Gets or sets a value indicating whether this instance is perma link. Declaration bool IsPermaLink { get; set; } Property Value Type Description bool true if this instance is perma link; otherwise, false."
  },
  "api/FileCurator.Formats.Data.Interfaces.IFeedItem.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IFeedItem.html",
    "title": "Interface IFeedItem | FileCurator API Reference",
    "keywords": "Interface IFeedItem Feed item Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IFeedItem Properties | Edit this page View Source Author Gets or sets the author. Declaration string? Author { get; set; } Property Value Type Description string The author. | Edit this page View Source Categories Gets or sets the categories. Declaration IList<string> Categories { get; } Property Value Type Description IList<string> The categories. | Edit this page View Source Content Gets the content. Declaration string Content { get; } Property Value Type Description string The content. | Edit this page View Source Description Gets or sets the description. Declaration string? Description { get; set; } Property Value Type Description string The description. | Edit this page View Source Enclosure Gets or sets the enclosure. Declaration IEnclosure? Enclosure { get; set; } Property Value Type Description IEnclosure The enclosure. | Edit this page View Source GUID Gets or sets the unique identifier. Declaration IFeedGuid? GUID { get; set; } Property Value Type Description IFeedGuid The unique identifier. | Edit this page View Source Link Gets or sets the link. Declaration string? Link { get; set; } Property Value Type Description string The link. | Edit this page View Source PubDate Gets or sets the pub date. Declaration DateTime PubDate { get; set; } Property Value Type Description DateTime The pub date. | Edit this page View Source Thumbnail Gets or sets the thumbnail. Declaration IThumbnail? Thumbnail { get; set; } Property Value Type Description IThumbnail The thumbnail. | Edit this page View Source Title Gets or sets the title. Declaration string? Title { get; set; } Property Value Type Description string The title."
  },
  "api/FileCurator.Formats.Data.Interfaces.IGenericFile.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IGenericFile.html",
    "title": "Interface IGenericFile | FileCurator API Reference",
    "keywords": "Interface IGenericFile File interface Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IGenericFile Properties | Edit this page View Source Content Parsed content Declaration string Content { get; } Property Value Type Description string The content. | Edit this page View Source Meta Meta data Declaration string Meta { get; } Property Value Type Description string The meta. | Edit this page View Source Title Parsed title Declaration string Title { get; } Property Value Type Description string The title."
  },
  "api/FileCurator.Formats.Data.Interfaces.IMailAddress.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IMailAddress.html",
    "title": "Interface IMailAddress | FileCurator API Reference",
    "keywords": "Interface IMailAddress Mail address interface Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IMailAddress Properties | Edit this page View Source EmailAddress Gets or sets the email address. Declaration string EmailAddress { get; set; } Property Value Type Description string The email address. | Edit this page View Source Name Gets or sets the name. Declaration string Name { get; set; } Property Value Type Description string The name. | Edit this page View Source Type Gets or sets the type. Declaration string Type { get; set; } Property Value Type Description string The type."
  },
  "api/FileCurator.Formats.Data.Interfaces.IMessage.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IMessage.html",
    "title": "Interface IMessage | FileCurator API Reference",
    "keywords": "Interface IMessage Message interface Inherited Members IGenericFile.Content IGenericFile.Meta IGenericFile.Title Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IMessage : IGenericFile Properties | Edit this page View Source BCC Gets the BCC. Declaration IList<string> BCC { get; } Property Value Type Description IList<string> The BCC. See Also IGenericFile | Edit this page View Source CC Gets the cc. Declaration IList<string> CC { get; } Property Value Type Description IList<string> The cc. See Also IGenericFile | Edit this page View Source From Gets or sets from. Declaration string From { get; set; } Property Value Type Description string From. See Also IGenericFile | Edit this page View Source Sent Gets or sets the sent. Declaration DateTime Sent { get; set; } Property Value Type Description DateTime The sent. See Also IGenericFile | Edit this page View Source To Gets to. Declaration IList<string> To { get; } Property Value Type Description IList<string> To. See Also IGenericFile See Also IGenericFile"
  },
  "api/FileCurator.Formats.Data.Interfaces.IRow.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IRow.html",
    "title": "Interface IRow | FileCurator API Reference",
    "keywords": "Interface IRow Row interface Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IRow Properties | Edit this page View Source Cells Gets the cells. Declaration IList<ICell> Cells { get; } Property Value Type Description IList<ICell> The cells."
  },
  "api/FileCurator.Formats.Data.Interfaces.ITable.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.ITable.html",
    "title": "Interface ITable | FileCurator API Reference",
    "keywords": "Interface ITable Table interface Inherited Members IGenericFile.Content IGenericFile.Meta IGenericFile.Title Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface ITable : IGenericFile Properties | Edit this page View Source Columns Gets the headers. Declaration IList<string> Columns { get; } Property Value Type Description IList<string> The headers. | Edit this page View Source Rows Gets the data rows. Declaration IList<IRow> Rows { get; } Property Value Type Description IList<IRow> The data rows. Methods | Edit this page View Source Convert<TObject>() Converts this instance into the object array of the type specified. Declaration List<TObject> Convert<TObject>() Returns Type Description List<TObject> The resulting array. Type Parameters Name Description TObject The type of the object."
  },
  "api/FileCurator.Formats.Data.Interfaces.IThumbnail.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.IThumbnail.html",
    "title": "Interface IThumbnail | FileCurator API Reference",
    "keywords": "Interface IThumbnail Thumbnail interface Namespace: FileCurator.Formats.Data.Interfaces Assembly: FileCurator.dll Syntax public interface IThumbnail Properties | Edit this page View Source Height Gets or sets the height. Declaration int Height { get; set; } Property Value Type Description int The height. | Edit this page View Source Url Gets or sets the URL. Declaration string? Url { get; set; } Property Value Type Description string The URL. | Edit this page View Source Width Gets or sets the width. Declaration int Width { get; set; } Property Value Type Description int The width."
  },
  "api/FileCurator.Formats.Data.Interfaces.html": {
    "href": "api/FileCurator.Formats.Data.Interfaces.html",
    "title": "Namespace FileCurator.Formats.Data.Interfaces | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Data.Interfaces Interfaces IAddress Address interface ICalendar Calendar item ICard Card file type ICell Cell interface IChannel Channel interface IEnclosure Enclosure interface IFeed Feed interface IFeedGuid Feed Guid IFeedItem Feed item IGenericFile File interface IMailAddress Mail address interface IMessage Message interface IRow Row interface ITable Table interface IThumbnail Thumbnail interface"
  },
  "api/FileCurator.Formats.Data.MailAddress.html": {
    "href": "api/FileCurator.Formats.Data.MailAddress.html",
    "title": "Class MailAddress | FileCurator API Reference",
    "keywords": "Class MailAddress Mail address Inheritance object MailAddress Implements IMailAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class MailAddress : IMailAddress Properties | Edit this page View Source EmailAddress Gets or sets the email address. Declaration public string EmailAddress { get; set; } Property Value Type Description string The email address. See Also IMailAddress | Edit this page View Source Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description string The name. See Also IMailAddress | Edit this page View Source Type Gets or sets the type. Declaration public string Type { get; set; } Property Value Type Description string The type. See Also IMailAddress Implements IMailAddress See Also IMailAddress"
  },
  "api/FileCurator.Formats.Data.PhoneNumber.html": {
    "href": "api/FileCurator.Formats.Data.PhoneNumber.html",
    "title": "Class PhoneNumber | FileCurator API Reference",
    "keywords": "Class PhoneNumber Phone number data holder Inheritance object PhoneNumber Implements IPhoneNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Data Assembly: FileCurator.dll Syntax public class PhoneNumber : IPhoneNumber Properties | Edit this page View Source Number Gets or sets the number. Declaration public string Number { get; set; } Property Value Type Description string The number. See Also IPhoneNumber | Edit this page View Source Type Gets or sets the type. Declaration public string Type { get; set; } Property Value Type Description string The type. See Also IPhoneNumber Implements IPhoneNumber See Also IPhoneNumber"
  },
  "api/FileCurator.Formats.Data.html": {
    "href": "api/FileCurator.Formats.Data.html",
    "title": "Namespace FileCurator.Formats.Data | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Data Classes Address Address class GenericCalendar Generic calendar item GenericCard Generic card GenericCell Generic cell data GenericEmail Generic email message GenericFile Generic file GenericRow Generic row data GenericTable Generic table object MailAddress Mail address PhoneNumber Phone number data holder"
  },
  "api/FileCurator.Formats.Delimited.DelimitedFormat.html": {
    "href": "api/FileCurator.Formats.Delimited.DelimitedFormat.html",
    "title": "Class DelimitedFormat | FileCurator API Reference",
    "keywords": "Class DelimitedFormat Delimited file format Inheritance object FormatBaseClass<DelimitedReader, DelimitedWriter, ITable> DelimitedFormat Implements IFormat<ITable> IFormat Inherited Members FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.ContentTypes FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.DisplayName FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.FileTypes FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.HeaderInfo FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.Reader FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.Writer FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.CanRead(string) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.CanRead(Stream) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.CanWrite(string) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.Read(Stream) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.ReadAsync(Stream) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.ReadBase(Stream) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.ReadBaseAsync(Stream) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.Write(Stream, IGenericFile) FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Delimited Assembly: FileCurator.dll Syntax public class DelimitedFormat : FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>, IFormat<ITable>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<DelimitedReader, DelimitedWriter, ITable>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.Delimited.DelimitedReader.html": {
    "href": "api/FileCurator.Formats.Delimited.DelimitedReader.html",
    "title": "Class DelimitedReader | FileCurator API Reference",
    "keywords": "Class DelimitedReader Delimited file reader Inheritance object ReaderBaseClass<ITable> DelimitedReader Implements IGenericFileReader<ITable> Inherited Members ReaderBaseClass<ITable>.CanRead(string) ReaderBaseClass<ITable>.CanRead(Stream) ReaderBaseClass<ITable>.InternalCanRead(Stream) ReaderBaseClass<ITable>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Delimited Assembly: FileCurator.dll Syntax public class DelimitedReader : ReaderBaseClass<ITable>, IGenericFileReader<ITable> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<ITable>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override ITable Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description ITable The file Overrides ReaderBaseClass<ITable>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.Delimited.DelimitedWriter.html": {
    "href": "api/FileCurator.Formats.Delimited.DelimitedWriter.html",
    "title": "Class DelimitedWriter | FileCurator API Reference",
    "keywords": "Class DelimitedWriter Delimited file writer Inheritance object DelimitedWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Delimited Assembly: FileCurator.dll Syntax public class DelimitedWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.Delimited.html": {
    "href": "api/FileCurator.Formats.Delimited.html",
    "title": "Namespace FileCurator.Formats.Delimited | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Delimited Classes DelimitedFormat Delimited file format DelimitedReader Delimited file reader DelimitedWriter Delimited file writer"
  },
  "api/FileCurator.Formats.Excel.ExcelFormat.html": {
    "href": "api/FileCurator.Formats.Excel.ExcelFormat.html",
    "title": "Class ExcelFormat | FileCurator API Reference",
    "keywords": "Class ExcelFormat Excel format Inheritance object FormatBaseClass<ExcelReader, ExcelWriter, ITable> ExcelFormat Implements IFormat<ITable> IFormat Inherited Members FormatBaseClass<ExcelReader, ExcelWriter, ITable>.ContentTypes FormatBaseClass<ExcelReader, ExcelWriter, ITable>.DisplayName FormatBaseClass<ExcelReader, ExcelWriter, ITable>.FileTypes FormatBaseClass<ExcelReader, ExcelWriter, ITable>.HeaderInfo FormatBaseClass<ExcelReader, ExcelWriter, ITable>.Reader FormatBaseClass<ExcelReader, ExcelWriter, ITable>.Writer FormatBaseClass<ExcelReader, ExcelWriter, ITable>.CanRead(string) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.CanRead(Stream) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.CanWrite(string) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.Read(Stream) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.ReadAsync(Stream) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.ReadBase(Stream) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.ReadBaseAsync(Stream) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.Write(Stream, IGenericFile) FormatBaseClass<ExcelReader, ExcelWriter, ITable>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Excel Assembly: FileCurator.dll Syntax public class ExcelFormat : FormatBaseClass<ExcelReader, ExcelWriter, ITable>, IFormat<ITable>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<ExcelReader, ExcelWriter, ITable>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets or sets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<ExcelReader, ExcelWriter, ITable>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets or sets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<ExcelReader, ExcelWriter, ITable>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.Excel.ExcelReader.html": {
    "href": "api/FileCurator.Formats.Excel.ExcelReader.html",
    "title": "Class ExcelReader | FileCurator API Reference",
    "keywords": "Class ExcelReader Excel reader Inheritance object ReaderBaseClass<ITable> ExcelReader Implements IGenericFileReader<ITable> Inherited Members ReaderBaseClass<ITable>.CanRead(string) ReaderBaseClass<ITable>.CanRead(Stream) ReaderBaseClass<ITable>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Excel Assembly: FileCurator.dll Syntax public class ExcelReader : ReaderBaseClass<ITable>, IGenericFileReader<ITable> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<ITable>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source InternalCanRead(Stream) Used to determine if a reader can actually read the file Declaration public override bool InternalCanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise Overrides ReaderBaseClass<ITable>.InternalCanRead(Stream) See Also IGenericFileReader<TFile> | Edit this page View Source Read(Stream) Reads the excel. Declaration public override ITable Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description ITable The excel data Overrides ReaderBaseClass<ITable>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.Excel.ExcelWriter.html": {
    "href": "api/FileCurator.Formats.Excel.ExcelWriter.html",
    "title": "Class ExcelWriter | FileCurator API Reference",
    "keywords": "Class ExcelWriter Excel writer Inheritance object ExcelWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Excel Assembly: FileCurator.dll Syntax public class ExcelWriter : IGenericFileWriter Methods | Edit this page View Source Column(int) Gets the specified column name. Declaration public static string Column(int column) Parameters Type Name Description int column The column. Returns Type Description string The column name See Also IGenericFileWriter | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.Excel.html": {
    "href": "api/FileCurator.Formats.Excel.html",
    "title": "Namespace FileCurator.Formats.Excel | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Excel Classes ExcelFormat Excel format ExcelReader Excel reader ExcelWriter Excel writer"
  },
  "api/FileCurator.Formats.HTML.HTMLFormat.html": {
    "href": "api/FileCurator.Formats.HTML.HTMLFormat.html",
    "title": "Class HTMLFormat | FileCurator API Reference",
    "keywords": "Class HTMLFormat HTML format Inheritance object FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile> HTMLFormat Implements IFormat<IGenericFile> IFormat Inherited Members FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.ContentTypes FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.DisplayName FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.FileTypes FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.HeaderInfo FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.Reader FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.Writer FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.CanRead(string) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.CanRead(Stream) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.CanWrite(string) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.Read(Stream) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.ReadAsync(Stream) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.ReadBase(Stream) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.ReadBaseAsync(Stream) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.Write(Stream, IGenericFile) FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.HTML Assembly: FileCurator.dll Syntax public class HTMLFormat : FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>, IFormat<IGenericFile>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets or sets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets or sets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<HTMLReader, HTMLWriter, IGenericFile>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.HTML.HTMLReader.html": {
    "href": "api/FileCurator.Formats.HTML.HTMLReader.html",
    "title": "Class HTMLReader | FileCurator API Reference",
    "keywords": "Class HTMLReader HTML reader Inheritance object ReaderBaseClass<IGenericFile> HTMLReader Implements IGenericFileReader<IGenericFile> Inherited Members ReaderBaseClass<IGenericFile>.CanRead(string) ReaderBaseClass<IGenericFile>.CanRead(Stream) ReaderBaseClass<IGenericFile>.InternalCanRead(Stream) ReaderBaseClass<IGenericFile>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.HTML Assembly: FileCurator.dll Syntax public class HTMLReader : ReaderBaseClass<IGenericFile>, IGenericFileReader<IGenericFile> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IGenericFile>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IGenericFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile The file Overrides ReaderBaseClass<IGenericFile>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.HTML.HTMLWriter.html": {
    "href": "api/FileCurator.Formats.HTML.HTMLWriter.html",
    "title": "Class HTMLWriter | FileCurator API Reference",
    "keywords": "Class HTMLWriter HTML Writer Inheritance object HTMLWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.HTML Assembly: FileCurator.dll Syntax public class HTMLWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.HTML.html": {
    "href": "api/FileCurator.Formats.HTML.html",
    "title": "Namespace FileCurator.Formats.HTML | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.HTML Classes HTMLFormat HTML format HTMLReader HTML reader HTMLWriter HTML Writer"
  },
  "api/FileCurator.Formats.ICal.ICalendarFormat.html": {
    "href": "api/FileCurator.Formats.ICal.ICalendarFormat.html",
    "title": "Class ICalendarFormat | FileCurator API Reference",
    "keywords": "Class ICalendarFormat ICal format Inheritance object FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar> ICalendarFormat Implements IFormat<ICalendar> IFormat Inherited Members FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.ContentTypes FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.DisplayName FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.FileTypes FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.HeaderInfo FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.Reader FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.Writer FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.CanRead(string) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.CanRead(Stream) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.CanWrite(string) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.Read(Stream) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.ReadAsync(Stream) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.ReadBase(Stream) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.ReadBaseAsync(Stream) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.Write(Stream, IGenericFile) FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.ICal Assembly: FileCurator.dll Syntax public class ICalendarFormat : FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>, IFormat<ICalendar>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<ICalendarReader, ICalendarWriter, ICalendar>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.ICal.ICalendarReader.html": {
    "href": "api/FileCurator.Formats.ICal.ICalendarReader.html",
    "title": "Class ICalendarReader | FileCurator API Reference",
    "keywords": "Class ICalendarReader ICal reader Inheritance object ReaderBaseClass<ICalendar> ICalendarReader Implements IGenericFileReader<ICalendar> Inherited Members ReaderBaseClass<ICalendar>.CanRead(string) ReaderBaseClass<ICalendar>.CanRead(Stream) ReaderBaseClass<ICalendar>.InternalCanRead(Stream) ReaderBaseClass<ICalendar>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.ICal Assembly: FileCurator.dll Syntax public class ICalendarReader : ReaderBaseClass<ICalendar>, IGenericFileReader<ICalendar> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<ICalendar>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override ICalendar Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description ICalendar The file Overrides ReaderBaseClass<ICalendar>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.ICal.ICalendarWriter.html": {
    "href": "api/FileCurator.Formats.ICal.ICalendarWriter.html",
    "title": "Class ICalendarWriter | FileCurator API Reference",
    "keywords": "Class ICalendarWriter ICal writer Inheritance object ICalendarWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.ICal Assembly: FileCurator.dll Syntax public class ICalendarWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.ICal.html": {
    "href": "api/FileCurator.Formats.ICal.html",
    "title": "Namespace FileCurator.Formats.ICal | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.ICal Classes ICalendarFormat ICal format ICalendarReader ICal reader ICalendarWriter ICal writer"
  },
  "api/FileCurator.Formats.Interfaces.IFormat-1.html": {
    "href": "api/FileCurator.Formats.Interfaces.IFormat-1.html",
    "title": "Interface IFormat<TFile> | FileCurator API Reference",
    "keywords": "Interface IFormat<TFile> Format interface Inherited Members IFormat.ContentTypes IFormat.DisplayName IFormat.FileTypes IFormat.HeaderInfo IFormat.CanRead(string) IFormat.CanRead(Stream) IFormat.CanWrite(string) IFormat.ReadBase(Stream) IFormat.ReadBaseAsync(Stream) IFormat.Write(Stream, IGenericFile) IFormat.WriteAsync(Stream, IGenericFile) Namespace: FileCurator.Formats.Interfaces Assembly: FileCurator.dll Syntax public interface IFormat<TFile> : IFormat where TFile : IGenericFile Type Parameters Name Description TFile The type of the file. Methods | Edit this page View Source Read(Stream) Parses the specified stream. Declaration TFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description TFile The resulting file content. | Edit this page View Source ReadAsync(Stream) Parses the specified stream. Declaration Task<TFile> ReadAsync(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description Task<TFile> The resulting file content."
  },
  "api/FileCurator.Formats.Interfaces.IFormat.html": {
    "href": "api/FileCurator.Formats.Interfaces.IFormat.html",
    "title": "Interface IFormat | FileCurator API Reference",
    "keywords": "Interface IFormat Format interface Namespace: FileCurator.Formats.Interfaces Assembly: FileCurator.dll Syntax public interface IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration string[] ContentTypes { get; } Property Value Type Description string[] The content types. | Edit this page View Source DisplayName Gets the display name. Declaration string DisplayName { get; } Property Value Type Description string The display name. | Edit this page View Source FileTypes Gets the file types. Declaration string[] FileTypes { get; } Property Value Type Description string[] The file types. | Edit this page View Source HeaderInfo Gets the header information. Declaration byte[] HeaderInfo { get; } Property Value Type Description byte[] The header information. Methods | Edit this page View Source CanRead(Stream) Determines whether this instance can decode the specified stream. Declaration bool CanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise | Edit this page View Source CanRead(string) Determines whether this instance can decode the specified file name. Declaration bool CanRead(string fileName) Parameters Type Name Description string fileName Name of the file. Returns Type Description bool True if it can, false otherwise | Edit this page View Source CanWrite(string) Determines whether this instance can encode the specified file name. Declaration bool CanWrite(string fileName) Parameters Type Name Description string fileName Name of the file. Returns Type Description bool True if it can, false otherwise | Edit this page View Source ReadBase(Stream) Reads the base. Declaration IGenericFile ReadBase(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile Returns an IGenericFile version of the doc. | Edit this page View Source ReadBaseAsync(Stream) Reads the base. Declaration Task<IGenericFile> ReadBaseAsync(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description Task<IGenericFile> Returns an IGenericFile version of the doc. | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise."
  },
  "api/FileCurator.Formats.Interfaces.IGenericFileReader-1.html": {
    "href": "api/FileCurator.Formats.Interfaces.IGenericFileReader-1.html",
    "title": "Interface IGenericFileReader<TFile> | FileCurator API Reference",
    "keywords": "Interface IGenericFileReader<TFile> File reader Namespace: FileCurator.Formats.Interfaces Assembly: FileCurator.dll Syntax public interface IGenericFileReader<TFile> where TFile : IGenericFile Type Parameters Name Description TFile The type of the file. Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Methods | Edit this page View Source CanRead(Stream) Determines whether this instance can decode the specified stream. Declaration bool CanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise | Edit this page View Source CanRead(string) Determines whether this instance can decode the specified file name. Declaration bool CanRead(string fileName) Parameters Type Name Description string fileName Name of the file. Returns Type Description bool True if it can, false otherwise | Edit this page View Source Read(Stream) Reads the specified stream. Declaration TFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description TFile The file | Edit this page View Source ReadAsync(Stream) Reads the specified stream. Declaration Task<TFile> ReadAsync(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description Task<TFile> The file"
  },
  "api/FileCurator.Formats.Interfaces.IGenericFileWriter.html": {
    "href": "api/FileCurator.Formats.Interfaces.IGenericFileWriter.html",
    "title": "Interface IGenericFileWriter | FileCurator API Reference",
    "keywords": "Interface IGenericFileWriter File writer interface Namespace: FileCurator.Formats.Interfaces Assembly: FileCurator.dll Syntax public interface IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise."
  },
  "api/FileCurator.Formats.Interfaces.html": {
    "href": "api/FileCurator.Formats.Interfaces.html",
    "title": "Namespace FileCurator.Formats.Interfaces | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Interfaces Interfaces IFormat Format interface IFormat<TFile> Format interface IGenericFileReader<TFile> File reader IGenericFileWriter File writer interface"
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.Attachment.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.Attachment.html",
    "title": "Class OutlookStorage.Attachment | FileCurator API Reference",
    "keywords": "Class OutlookStorage.Attachment Attachment Inheritance object OutlookStorage OutlookStorage.Attachment Implements IDisposable Inherited Members OutlookStorage.ReceivedTime OutlookStorage.SentTime OutlookStorage.streamStatistics OutlookStorage.subStorageStatistics OutlookStorage.Dispose() OutlookStorage.GetMapiProperty(string) OutlookStorage.GetMapiPropertyBytes(string) OutlookStorage.GetMapiPropertyInt16(string) OutlookStorage.GetMapiPropertyInt32(string) OutlookStorage.GetMapiPropertyString(string) OutlookStorage.GetStreamAsString(string, Encoding) OutlookStorage.GetStreamBytes(string) OutlookStorage.Disposing() OutlookStorage.LoadStorage(OutlookStorage.NativeMethods.IStorage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax public class OutlookStorage.Attachment : OutlookStorage, IDisposable Constructors | Edit this page View Source Attachment(OutlookStorage) Initializes a new instance of the OutlookStorage.Attachment class. Declaration public Attachment(OutlookStorage message) Parameters Type Name Description OutlookStorage message The message. See Also OutlookStorage Properties | Edit this page View Source ContentId Gets the content id. Declaration public string? ContentId { get; } Property Value Type Description string The content id. See Also OutlookStorage | Edit this page View Source Data Gets the data. Declaration public byte[]? Data { get; } Property Value Type Description byte[] The data. See Also OutlookStorage | Edit this page View Source Filename Gets the filename. Declaration public string? Filename { get; } Property Value Type Description string The filename. See Also OutlookStorage | Edit this page View Source RenderingPosisiton Gets the rendering posisiton. Declaration public int RenderingPosisiton { get; } Property Value Type Description int The rendering posisiton. See Also OutlookStorage Implements IDisposable See Also OutlookStorage"
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.CLZF.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.CLZF.html",
    "title": "Class OutlookStorage.CLZF | FileCurator API Reference",
    "keywords": "Class OutlookStorage.CLZF Summary description for CLZF. Inheritance object OutlookStorage.CLZF Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax public static class OutlookStorage.CLZF Methods | Edit this page View Source CalculateCRC32(byte[], int, int) Calculates the cr C32. Declaration public static int CalculateCRC32(byte[] buf, int off, int len) Parameters Type Name Description byte[] buf The buf. int off The off. int len The length. Returns Type Description int | Edit this page View Source DecompressRTF(byte[]) Decompresses the RTF. Declaration public static byte[] DecompressRTF(byte[] src) Parameters Type Name Description byte[] src The source. Returns Type Description byte[] Exceptions Type Condition Exception Invalid compressed-RTF header or compressed-RTF data size mismatch or compressed-RTF CRC32 failed or Unknown compression type (magic number + magic + ) | Edit this page View Source GetU32(byte[], int) Gets the u32. Declaration public static long GetU32(byte[] buf, int offset) Parameters Type Name Description byte[] buf The buf. int offset The offset. Returns Type Description long | Edit this page View Source GetU8(byte[], int) Gets the u8. Declaration public static int GetU8(byte[] buf, int offset) Parameters Type Name Description byte[] buf The buf. int offset The offset. Returns Type Description int"
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.Message.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.Message.html",
    "title": "Class OutlookStorage.Message | FileCurator API Reference",
    "keywords": "Class OutlookStorage.Message Message Inheritance object OutlookStorage OutlookStorage.Message Implements IDisposable Inherited Members OutlookStorage.ReceivedTime OutlookStorage.SentTime OutlookStorage.streamStatistics OutlookStorage.subStorageStatistics OutlookStorage.Dispose() OutlookStorage.GetMapiProperty(string) OutlookStorage.GetMapiPropertyBytes(string) OutlookStorage.GetMapiPropertyInt16(string) OutlookStorage.GetMapiPropertyInt32(string) OutlookStorage.GetMapiPropertyString(string) OutlookStorage.GetStreamAsString(string, Encoding) OutlookStorage.GetStreamBytes(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax public class OutlookStorage.Message : OutlookStorage, IDisposable Constructors | Edit this page View Source Message(Stream) Initializes a new instance of the OutlookStorage.Message class from a containing an IStorage. Declaration public Message(Stream storageStream) Parameters Type Name Description Stream storageStream The Stream containing an IStorage. See Also OutlookStorage | Edit this page View Source Message(string) Initializes a new instance of the OutlookStorage.Message class from a msg file. Declaration public Message(string msgfile) Parameters Type Name Description string msgfile The msgfile. See Also OutlookStorage Properties | Edit this page View Source Attachments Gets the list of attachments in the outlook message. Declaration public List<OutlookStorage.Attachment> Attachments { get; } Property Value Type Description List<OutlookStorage.Attachment> The list of attachments in the outlook message. See Also OutlookStorage | Edit this page View Source BodyRTF Gets the body of the outlook message in RTF format. Declaration public string? BodyRTF { get; } Property Value Type Description string The body of the outlook message in RTF format. See Also OutlookStorage | Edit this page View Source BodyText Gets the body of the outlook message in plain text format. Declaration public string? BodyText { get; } Property Value Type Description string The body of the outlook message in plain text format. See Also OutlookStorage | Edit this page View Source From Gets the display value of the contact that sent the email. Declaration public string? From { get; } Property Value Type Description string The display value of the contact that sent the email. See Also OutlookStorage | Edit this page View Source Messages Gets the list of sub messages in the outlook message. Declaration public List<OutlookStorage.Message> Messages { get; } Property Value Type Description List<OutlookStorage.Message> The list of sub messages in the outlook message. See Also OutlookStorage | Edit this page View Source Recipients Gets the list of recipients in the outlook message. Declaration public List<OutlookStorage.Recipient> Recipients { get; } Property Value Type Description List<OutlookStorage.Recipient> The list of recipients in the outlook message. See Also OutlookStorage | Edit this page View Source Subject Gets the subject of the outlook message. Declaration public string? Subject { get; } Property Value Type Description string The subject of the outlook message. See Also OutlookStorage Methods | Edit this page View Source Disposing() Gives sub classes the chance to free resources during object disposal. Declaration protected override void Disposing() Overrides OutlookStorage.Disposing() See Also OutlookStorage | Edit this page View Source LoadStorage(IStorage?) Processes sub storages on the specified storage to capture attachment and recipient data. Declaration protected override void LoadStorage(OutlookStorage.NativeMethods.IStorage? storage) Parameters Type Name Description OutlookStorage.NativeMethods.IStorage storage The storage to check for attachment and recipient data. Overrides OutlookStorage.LoadStorage(OutlookStorage.NativeMethods.IStorage?) See Also OutlookStorage | Edit this page View Source Save(Stream) Saves this OutlookStorage.Message to the specified stream. Declaration public void Save(Stream stream) Parameters Type Name Description Stream stream The stream to save to. See Also OutlookStorage | Edit this page View Source Save(string) Saves this OutlookStorage.Message to the specified file name. Declaration public void Save(string fileName) Parameters Type Name Description string fileName Name of the file. See Also OutlookStorage Implements IDisposable See Also OutlookStorage"
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.IEnumSTATSTG.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.IEnumSTATSTG.html",
    "title": "Interface OutlookStorage.NativeMethods.IEnumSTATSTG | FileCurator API Reference",
    "keywords": "Interface OutlookStorage.NativeMethods.IEnumSTATSTG Enum STATSTG Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax [Guid(\"0000000D-0000-0000-C000-000000000046\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface OutlookStorage.NativeMethods.IEnumSTATSTG Methods | Edit this page View Source Clone() Clones this instance. Declaration OutlookStorage.NativeMethods.IEnumSTATSTG Clone() Returns Type Description OutlookStorage.NativeMethods.IEnumSTATSTG | Edit this page View Source Next(uint, STATSTG[], out uint) Nexts the specified celt. Declaration void Next(uint celt, STATSTG[] rgelt, out uint pceltFetched) Parameters Type Name Description uint celt The celt. STATSTG[] rgelt The rgelt. uint pceltFetched The pcelt fetched. | Edit this page View Source Reset() Resets this instance. Declaration void Reset() | Edit this page View Source Skip(uint) Skips the specified celt. Declaration void Skip(uint celt) Parameters Type Name Description uint celt The celt."
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.ILockBytes.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.ILockBytes.html",
    "title": "Interface OutlookStorage.NativeMethods.ILockBytes | FileCurator API Reference",
    "keywords": "Interface OutlookStorage.NativeMethods.ILockBytes ILock bytes Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax [Guid(\"0000000A-0000-0000-C000-000000000046\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface OutlookStorage.NativeMethods.ILockBytes Methods | Edit this page View Source Flush() Flushes this instance. Declaration void Flush() | Edit this page View Source LockRegion(long, long, int) Locks the region. Declaration void LockRegion(long libOffset, long cb, int dwLockType) Parameters Type Name Description long libOffset The library offset. long cb The cb. int dwLockType Type of the dw lock. | Edit this page View Source ReadAt(long, byte[], int, int[]?) Reads at. Declaration void ReadAt(long ulOffset, byte[] pv, int cb, int[]? pcbRead) Parameters Type Name Description long ulOffset The ul offset. byte[] pv The pv. int cb The cb. int[] pcbRead The PCB read. | Edit this page View Source SetSize(long) Sets the size. Declaration void SetSize(long cb) Parameters Type Name Description long cb The cb. | Edit this page View Source Stat(out STATSTG, int) Stats the specified pstatstg. Declaration void Stat(out STATSTG pstatstg, int grfStatFlag) Parameters Type Name Description STATSTG pstatstg The pstatstg. int grfStatFlag The GRF stat flag. | Edit this page View Source UnlockRegion(long, long, int) Unlocks the region. Declaration void UnlockRegion(long libOffset, long cb, int dwLockType) Parameters Type Name Description long libOffset The library offset. long cb The cb. int dwLockType Type of the dw lock. | Edit this page View Source WriteAt(long, byte[], int, int[]?) Writes at. Declaration void WriteAt(long ulOffset, byte[] pv, int cb, int[]? pcbWritten) Parameters Type Name Description long ulOffset The ul offset. byte[] pv The pv. int cb The cb. int[] pcbWritten The PCB written."
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.IStorage.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.IStorage.html",
    "title": "Interface OutlookStorage.NativeMethods.IStorage | FileCurator API Reference",
    "keywords": "Interface OutlookStorage.NativeMethods.IStorage Storage Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] [Guid(\"0000000B-0000-0000-C000-000000000046\")] public interface OutlookStorage.NativeMethods.IStorage Methods | Edit this page View Source Commit(int) Commits the specified GRF commit flags. Declaration void Commit(int grfCommitFlags) Parameters Type Name Description int grfCommitFlags The GRF commit flags. | Edit this page View Source CopyTo(int, Guid[]?, IntPtr, IStorage) Copies to. Declaration void CopyTo(int ciidExclude, Guid[]? pIIDExclude, IntPtr snbExclude, OutlookStorage.NativeMethods.IStorage stgDest) Parameters Type Name Description int ciidExclude The ciid exclude. Guid[] pIIDExclude The p iid exclude. IntPtr snbExclude The SNB exclude. OutlookStorage.NativeMethods.IStorage stgDest The STG dest. | Edit this page View Source CreateStorage(string, STGM, int, int) Creates the storage. Declaration OutlookStorage.NativeMethods.IStorage CreateStorage(string pwcsName, OutlookStorage.NativeMethods.STGM grfMode, int reserved1, int reserved2) Parameters Type Name Description string pwcsName Name of the PWCS. OutlookStorage.NativeMethods.STGM grfMode The GRF mode. int reserved1 The reserved1. int reserved2 The reserved2. Returns Type Description OutlookStorage.NativeMethods.IStorage | Edit this page View Source CreateStream(string, STGM, int, int) Creates the stream. Declaration IStream CreateStream(string pwcsName, OutlookStorage.NativeMethods.STGM grfMode, int reserved1, int reserved2) Parameters Type Name Description string pwcsName Name of the PWCS. OutlookStorage.NativeMethods.STGM grfMode The GRF mode. int reserved1 The reserved1. int reserved2 The reserved2. Returns Type Description IStream | Edit this page View Source DestroyElement(string) Destroys the element. Declaration void DestroyElement(string pwcsName) Parameters Type Name Description string pwcsName Name of the PWCS. | Edit this page View Source EnumElements(int, IntPtr, int, out IEnumSTATSTG) Enums the elements. Declaration void EnumElements(int reserved1, IntPtr reserved2, int reserved3, out OutlookStorage.NativeMethods.IEnumSTATSTG ppVal) Parameters Type Name Description int reserved1 The reserved1. IntPtr reserved2 The reserved2. int reserved3 The reserved3. OutlookStorage.NativeMethods.IEnumSTATSTG ppVal The pp value. | Edit this page View Source MoveElementTo(string, IStorage, string, int) Moves the element to. Declaration void MoveElementTo(string pwcsName, OutlookStorage.NativeMethods.IStorage stgDest, string pwcsNewName, int grfFlags) Parameters Type Name Description string pwcsName Name of the PWCS. OutlookStorage.NativeMethods.IStorage stgDest The STG dest. string pwcsNewName New name of the PWCS. int grfFlags The GRF flags. | Edit this page View Source OpenStorage(string, IntPtr, STGM, IntPtr, int) Opens the storage. Declaration OutlookStorage.NativeMethods.IStorage OpenStorage(string pwcsName, IntPtr pstgPriority, OutlookStorage.NativeMethods.STGM grfMode, IntPtr snbExclude, int reserved) Parameters Type Name Description string pwcsName Name of the PWCS. IntPtr pstgPriority The PSTG priority. OutlookStorage.NativeMethods.STGM grfMode The GRF mode. IntPtr snbExclude The SNB exclude. int reserved The reserved. Returns Type Description OutlookStorage.NativeMethods.IStorage | Edit this page View Source OpenStream(string, IntPtr, STGM, int) Opens the stream. Declaration IStream OpenStream(string pwcsName, IntPtr reserved1, OutlookStorage.NativeMethods.STGM grfMode, int reserved2) Parameters Type Name Description string pwcsName Name of the PWCS. IntPtr reserved1 The reserved1. OutlookStorage.NativeMethods.STGM grfMode The GRF mode. int reserved2 The reserved2. Returns Type Description IStream | Edit this page View Source RenameElement(string, string) Renames the element. Declaration void RenameElement(string pwcsOldName, string pwcsNewName) Parameters Type Name Description string pwcsOldName Old name of the PWCS. string pwcsNewName New name of the PWCS. | Edit this page View Source Revert() Reverts this instance. Declaration void Revert() | Edit this page View Source SetClass(ref Guid) Sets the class. Declaration void SetClass(ref Guid clsid) Parameters Type Name Description Guid clsid The CLSID. | Edit this page View Source SetElementTimes(string, FILETIME, FILETIME, FILETIME) Sets the element times. Declaration void SetElementTimes(string pwcsName, FILETIME pctime, FILETIME patime, FILETIME pmtime) Parameters Type Name Description string pwcsName Name of the PWCS. FILETIME pctime The pctime. FILETIME patime The patime. FILETIME pmtime The pmtime. | Edit this page View Source SetStateBits(int, int) Sets the state bits. Declaration void SetStateBits(int grfStateBits, int grfMask) Parameters Type Name Description int grfStateBits The GRF state bits. int grfMask The GRF mask. | Edit this page View Source Stat(out STATSTG, int) Stats the specified p stat STG. Declaration void Stat(out STATSTG pStatStg, int grfStatFlag) Parameters Type Name Description STATSTG pStatStg The p stat STG. int grfStatFlag The GRF stat flag."
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.STGM.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.STGM.html",
    "title": "Enum OutlookStorage.NativeMethods.STGM | FileCurator API Reference",
    "keywords": "Enum OutlookStorage.NativeMethods.STGM STGM? Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax [Flags] public enum OutlookStorage.NativeMethods.STGM Fields Name Description CONVERT The convert CREATE The create DELETEONRELEASE The deleteonrelease DIRECT The direct DIRECT_SWMR The direc t_ SWMR FAILIFTHERE The failifthere NOSCRATCH The noscratch NOSNAPSHOT The nosnapshot PRIORITY The priority READ The read READWRITE The readwrite SHARE_DENY_NONE The shar e_ den y_ none SHARE_DENY_READ The shar e_ den y_ read SHARE_DENY_WRITE The shar e_ den y_ write SHARE_EXCLUSIVE The shar e_ exclusive SIMPLE The simple TRANSACTED The transacted WRITE The write"
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.NativeMethods.html",
    "title": "Class OutlookStorage.NativeMethods | FileCurator API Reference",
    "keywords": "Class OutlookStorage.NativeMethods Native methods Inheritance object OutlookStorage.NativeMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax protected static class OutlookStorage.NativeMethods Fields | Edit this page View Source PT_APPTIME The p t_ apptime Declaration public const ushort PT_APPTIME = 7 Field Value Type Description ushort | Edit this page View Source PT_BINARY The p t_ binary Declaration public const ushort PT_BINARY = 258 Field Value Type Description ushort | Edit this page View Source PT_BOOLEAN The p t_ boolean Declaration public const ushort PT_BOOLEAN = 11 Field Value Type Description ushort | Edit this page View Source PT_CLSID The p t_ CLSID Declaration public const ushort PT_CLSID = 72 Field Value Type Description ushort | Edit this page View Source PT_CURRENCY The p t_ currency Declaration public const ushort PT_CURRENCY = 6 Field Value Type Description ushort | Edit this page View Source PT_DOUBLE The p t_ double Declaration public const ushort PT_DOUBLE = 5 Field Value Type Description ushort | Edit this page View Source PT_ERROR The p t_ error Declaration public const ushort PT_ERROR = 10 Field Value Type Description ushort | Edit this page View Source PT_I2 The p t_ i2 Declaration public const ushort PT_I2 = 2 Field Value Type Description ushort | Edit this page View Source PT_I8 The p t_ i8 Declaration public const ushort PT_I8 = 20 Field Value Type Description ushort | Edit this page View Source PT_LONG The p t_ long Declaration public const ushort PT_LONG = 3 Field Value Type Description ushort | Edit this page View Source PT_NULL The p t_ null Declaration public const ushort PT_NULL = 1 Field Value Type Description ushort | Edit this page View Source PT_OBJECT The p t_ object Declaration public const ushort PT_OBJECT = 13 Field Value Type Description ushort | Edit this page View Source PT_R4 The pt r4 Declaration public const ushort PT_R4 = 4 Field Value Type Description ushort | Edit this page View Source PT_STRING8 The p t_ strin g8 Declaration public const ushort PT_STRING8 = 30 Field Value Type Description ushort | Edit this page View Source PT_SYSTIME The p t_ systime Declaration public const ushort PT_SYSTIME = 64 Field Value Type Description ushort | Edit this page View Source PT_UNICODE The p t_ unicode Declaration public const ushort PT_UNICODE = 31 Field Value Type Description ushort | Edit this page View Source PT_UNSPECIFIED The p t_ unspecified Declaration public const ushort PT_UNSPECIFIED = 0 Field Value Type Description ushort Methods | Edit this page View Source CloneStorage(IStorage, bool) Clones the storage. Declaration public static OutlookStorage.NativeMethods.IStorage? CloneStorage(OutlookStorage.NativeMethods.IStorage source, bool closeSource) Parameters Type Name Description OutlookStorage.NativeMethods.IStorage source The source. bool closeSource if set to true [close source]. Returns Type Description OutlookStorage.NativeMethods.IStorage CreateILockBytesOnHGlobal(IntPtr, bool, out ILockBytes) Creates the i lock bytes on h global. Declaration public static extern int CreateILockBytesOnHGlobal(IntPtr hGlobal, bool fDeleteOnRelease, out OutlookStorage.NativeMethods.ILockBytes ppLkbyt) Parameters Type Name Description IntPtr hGlobal The h global. bool fDeleteOnRelease if set to true [f delete on release]. OutlookStorage.NativeMethods.ILockBytes ppLkbyt The pp lkbyt. Returns Type Description int StgCreateDocfileOnILockBytes(ILockBytes, STGM, uint, out IStorage) STGs the create docfile on i lock bytes. Declaration public static extern int StgCreateDocfileOnILockBytes(OutlookStorage.NativeMethods.ILockBytes plkbyt, OutlookStorage.NativeMethods.STGM grfMode, uint reserved, out OutlookStorage.NativeMethods.IStorage ppstgOpen) Parameters Type Name Description OutlookStorage.NativeMethods.ILockBytes plkbyt The plkbyt. OutlookStorage.NativeMethods.STGM grfMode The GRF mode. uint reserved The reserved. OutlookStorage.NativeMethods.IStorage ppstgOpen The PPSTG open. Returns Type Description int StgIsStorageFile(string) STGs the is storage file. Declaration public static extern int StgIsStorageFile(string wcsName) Parameters Type Name Description string wcsName Name of the WCS. Returns Type Description int StgIsStorageILockBytes(ILockBytes) STGs the is storage i lock bytes. Declaration public static extern int StgIsStorageILockBytes(OutlookStorage.NativeMethods.ILockBytes plkbyt) Parameters Type Name Description OutlookStorage.NativeMethods.ILockBytes plkbyt The plkbyt. Returns Type Description int StgOpenStorage(string, IStorage?, STGM, IntPtr, int, out IStorage) STGs the open storage. Declaration public static extern int StgOpenStorage(string wcsName, OutlookStorage.NativeMethods.IStorage? pstgPriority, OutlookStorage.NativeMethods.STGM grfMode, IntPtr snbExclude, int reserved, out OutlookStorage.NativeMethods.IStorage ppstgOpen) Parameters Type Name Description string wcsName Name of the WCS. OutlookStorage.NativeMethods.IStorage pstgPriority The PSTG priority. OutlookStorage.NativeMethods.STGM grfMode The GRF mode. IntPtr snbExclude The SNB exclude. int reserved The reserved. OutlookStorage.NativeMethods.IStorage ppstgOpen The PPSTG open. Returns Type Description int StgOpenStorageOnILockBytes(ILockBytes, IStorage?, STGM, IntPtr, uint, out IStorage) STGs the open storage on i lock bytes. Declaration public static extern void StgOpenStorageOnILockBytes(OutlookStorage.NativeMethods.ILockBytes plkbyt, OutlookStorage.NativeMethods.IStorage? pstgPriority, OutlookStorage.NativeMethods.STGM grfMode, IntPtr snbExclude, uint reserved, out OutlookStorage.NativeMethods.IStorage ppstgOpen) Parameters Type Name Description OutlookStorage.NativeMethods.ILockBytes plkbyt The plkbyt. OutlookStorage.NativeMethods.IStorage pstgPriority The PSTG priority. OutlookStorage.NativeMethods.STGM grfMode The GRF mode. IntPtr snbExclude The SNB exclude. uint reserved The reserved. OutlookStorage.NativeMethods.IStorage ppstgOpen The PPSTG open."
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.Recipient.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.Recipient.html",
    "title": "Class OutlookStorage.Recipient | FileCurator API Reference",
    "keywords": "Class OutlookStorage.Recipient Recipient Inheritance object OutlookStorage OutlookStorage.Recipient Implements IDisposable Inherited Members OutlookStorage.ReceivedTime OutlookStorage.SentTime OutlookStorage.streamStatistics OutlookStorage.subStorageStatistics OutlookStorage.Dispose() OutlookStorage.GetMapiProperty(string) OutlookStorage.GetMapiPropertyBytes(string) OutlookStorage.GetMapiPropertyInt16(string) OutlookStorage.GetMapiPropertyInt32(string) OutlookStorage.GetMapiPropertyString(string) OutlookStorage.GetStreamAsString(string, Encoding) OutlookStorage.GetStreamBytes(string) OutlookStorage.Disposing() OutlookStorage.LoadStorage(OutlookStorage.NativeMethods.IStorage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax public class OutlookStorage.Recipient : OutlookStorage, IDisposable Constructors | Edit this page View Source Recipient(OutlookStorage) Initializes a new instance of the OutlookStorage.Recipient class. Declaration public Recipient(OutlookStorage message) Parameters Type Name Description OutlookStorage message The message. See Also OutlookStorage Properties | Edit this page View Source DisplayName Gets the display name. Declaration public string? DisplayName { get; } Property Value Type Description string The display name. See Also OutlookStorage | Edit this page View Source Email Gets the recipient email. Declaration public string? Email { get; } Property Value Type Description string The recipient email. See Also OutlookStorage | Edit this page View Source Type Gets the recipient type. Declaration public OutlookStorage.RecipientType Type { get; } Property Value Type Description OutlookStorage.RecipientType The recipient type. See Also OutlookStorage Implements IDisposable See Also OutlookStorage"
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.RecipientType.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.RecipientType.html",
    "title": "Enum OutlookStorage.RecipientType | FileCurator API Reference",
    "keywords": "Enum OutlookStorage.RecipientType Recipient type Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax public enum OutlookStorage.RecipientType Fields Name Description CC CC To To Unknown The unknown"
  },
  "api/FileCurator.Formats.MSG.OutlookStorage.html": {
    "href": "api/FileCurator.Formats.MSG.OutlookStorage.html",
    "title": "Class OutlookStorage | FileCurator API Reference",
    "keywords": "Class OutlookStorage Outlook storage Inheritance object OutlookStorage OutlookStorage.Attachment OutlookStorage.Message OutlookStorage.Recipient Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.MSG Assembly: FileCurator.dll Syntax public class OutlookStorage : IDisposable Fields | Edit this page View Source streamStatistics The statistics for all streams in the IStorage associated with this instance. Declaration public Dictionary<string, STATSTG> streamStatistics Field Value Type Description Dictionary<string, STATSTG> See Also IDisposable | Edit this page View Source subStorageStatistics The statistics for all storgages in the IStorage associated with this instance. Declaration public Dictionary<string, STATSTG> subStorageStatistics Field Value Type Description Dictionary<string, STATSTG> See Also IDisposable Properties | Edit this page View Source ReceivedTime Gets the received time. Declaration public DateTime? ReceivedTime { get; } Property Value Type Description DateTime? The received time. See Also IDisposable | Edit this page View Source SentTime Gets the sent time. Declaration public DateTime? SentTime { get; } Property Value Type Description DateTime? The sent time. See Also IDisposable Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IDisposable | Edit this page View Source Disposing() Gives sub classes the chance to free resources during object disposal. Declaration protected virtual void Disposing() See Also IDisposable | Edit this page View Source ~OutlookStorage() Releases unmanaged resources and performs other cleanup operations before the is reclaimed by garbage collection. Declaration protected ~OutlookStorage() See Also IDisposable | Edit this page View Source GetMapiProperty(string) Gets the raw value of the MAPI property. Declaration public object? GetMapiProperty(string propIdentifier) Parameters Type Name Description string propIdentifier The 4 char hexadecimal prop identifier. Returns Type Description object The raw value of the MAPI property. See Also IDisposable | Edit this page View Source GetMapiPropertyBytes(string) Gets the value of the MAPI property as a byte array. Declaration public byte[]? GetMapiPropertyBytes(string propIdentifier) Parameters Type Name Description string propIdentifier The 4 char hexadecimal prop identifier. Returns Type Description byte[] The value of the MAPI property as a byte array. See Also IDisposable | Edit this page View Source GetMapiPropertyInt16(string) Gets the value of the MAPI property as a short. Declaration public short GetMapiPropertyInt16(string propIdentifier) Parameters Type Name Description string propIdentifier The 4 char hexadecimal prop identifier. Returns Type Description short The value of the MAPI property as a short. See Also IDisposable | Edit this page View Source GetMapiPropertyInt32(string) Gets the value of the MAPI property as a integer. Declaration public int GetMapiPropertyInt32(string propIdentifier) Parameters Type Name Description string propIdentifier The 4 char hexadecimal prop identifier. Returns Type Description int The value of the MAPI property as a integer. See Also IDisposable | Edit this page View Source GetMapiPropertyString(string) Gets the value of the MAPI property as a string. Declaration public string? GetMapiPropertyString(string propIdentifier) Parameters Type Name Description string propIdentifier The 4 char hexadecimal prop identifier. Returns Type Description string The value of the MAPI property as a string. See Also IDisposable | Edit this page View Source GetStreamAsString(string, Encoding) Gets the data in the specified stream as a string using the specifed encoding to decode the stream data. Declaration public string GetStreamAsString(string streamName, Encoding streamEncoding) Parameters Type Name Description string streamName Name of the stream to get string data for. Encoding streamEncoding The encoding to decode the stream data with. Returns Type Description string The data in the specified stream as a string. See Also IDisposable | Edit this page View Source GetStreamBytes(string) Gets the data in the specified stream as a byte array. Declaration public byte[] GetStreamBytes(string streamName) Parameters Type Name Description string streamName Name of the stream to get data for. Returns Type Description byte[] A byte array containg the stream data. See Also IDisposable | Edit this page View Source LoadStorage(IStorage?) Processes sub streams and storages on the specified storage. Declaration protected virtual void LoadStorage(OutlookStorage.NativeMethods.IStorage? storage) Parameters Type Name Description OutlookStorage.NativeMethods.IStorage storage The storage to get sub streams and storages for. See Also IDisposable Implements IDisposable See Also IDisposable"
  },
  "api/FileCurator.Formats.MSG.html": {
    "href": "api/FileCurator.Formats.MSG.html",
    "title": "Namespace FileCurator.Formats.MSG | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.MSG Classes OutlookStorage Outlook storage OutlookStorage.Attachment Attachment OutlookStorage.CLZF Summary description for CLZF. OutlookStorage.Message Message OutlookStorage.NativeMethods Native methods OutlookStorage.Recipient Recipient Interfaces OutlookStorage.NativeMethods.IEnumSTATSTG Enum STATSTG OutlookStorage.NativeMethods.ILockBytes ILock bytes OutlookStorage.NativeMethods.IStorage Storage Enums OutlookStorage.NativeMethods.STGM STGM? OutlookStorage.RecipientType Recipient type"
  },
  "api/FileCurator.Formats.Manager.html": {
    "href": "api/FileCurator.Formats.Manager.html",
    "title": "Class Manager | FileCurator API Reference",
    "keywords": "Class Manager Format manager Inheritance object Manager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats Assembly: FileCurator.dll Syntax public class Manager Constructors | Edit this page View Source Manager(IEnumerable<IFormat>) Initializes a new instance of the Manager class. Declaration public Manager(IEnumerable<IFormat> formats) Parameters Type Name Description IEnumerable<IFormat> formats The formats. Properties | Edit this page View Source DefaultFormat Gets or sets the default format. Declaration public IFormat DefaultFormat { get; set; } Property Value Type Description IFormat The default format. | Edit this page View Source Formats Gets or sets the formats. Declaration public IEnumerable<IFormat> Formats { get; set; } Property Value Type Description IEnumerable<IFormat> The formats. | Edit this page View Source FormatsByFileType Gets or sets the formats. Declaration public IDictionary<string, IFormat> FormatsByFileType { get; set; } Property Value Type Description IDictionary<string, IFormat> The formats. | Edit this page View Source FormatsByMimeType Gets or sets the formats. Declaration public IDictionary<string, IFormat> FormatsByMimeType { get; set; } Property Value Type Description IDictionary<string, IFormat> The formats. | Edit this page View Source Instance Gets the instance. Declaration public static Manager? Instance { get; } Property Value Type Description Manager The instance. Methods | Edit this page View Source FindFormat(Stream, string) Finds the format. Declaration public IFormat FindFormat(Stream stream, string mimeType) Parameters Type Name Description Stream stream The stream. string mimeType Type of the MIME. Returns Type Description IFormat The format associated with the stream. | Edit this page View Source FindFormat(string, Credentials?) Finds the format. Declaration public IFormat FindFormat(string fileName, Credentials? credentials) Parameters Type Name Description string fileName Name of the file. Credentials credentials The credentials. Returns Type Description IFormat The format associated with the file."
  },
  "api/FileCurator.Formats.Mime.MimeFormat.html": {
    "href": "api/FileCurator.Formats.Mime.MimeFormat.html",
    "title": "Class MimeFormat | FileCurator API Reference",
    "keywords": "Class MimeFormat Mime format Inheritance object FormatBaseClass<MimeReader, MimeWriter, IMessage> MimeFormat Implements IFormat<IMessage> IFormat Inherited Members FormatBaseClass<MimeReader, MimeWriter, IMessage>.ContentTypes FormatBaseClass<MimeReader, MimeWriter, IMessage>.DisplayName FormatBaseClass<MimeReader, MimeWriter, IMessage>.FileTypes FormatBaseClass<MimeReader, MimeWriter, IMessage>.HeaderInfo FormatBaseClass<MimeReader, MimeWriter, IMessage>.Reader FormatBaseClass<MimeReader, MimeWriter, IMessage>.Writer FormatBaseClass<MimeReader, MimeWriter, IMessage>.CanRead(string) FormatBaseClass<MimeReader, MimeWriter, IMessage>.CanRead(Stream) FormatBaseClass<MimeReader, MimeWriter, IMessage>.CanWrite(string) FormatBaseClass<MimeReader, MimeWriter, IMessage>.Read(Stream) FormatBaseClass<MimeReader, MimeWriter, IMessage>.ReadAsync(Stream) FormatBaseClass<MimeReader, MimeWriter, IMessage>.ReadBase(Stream) FormatBaseClass<MimeReader, MimeWriter, IMessage>.ReadBaseAsync(Stream) FormatBaseClass<MimeReader, MimeWriter, IMessage>.Write(Stream, IGenericFile) FormatBaseClass<MimeReader, MimeWriter, IMessage>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Mime Assembly: FileCurator.dll Syntax public class MimeFormat : FormatBaseClass<MimeReader, MimeWriter, IMessage>, IFormat<IMessage>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<MimeReader, MimeWriter, IMessage>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets or sets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<MimeReader, MimeWriter, IMessage>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets or sets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<MimeReader, MimeWriter, IMessage>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.Mime.MimeReader.html": {
    "href": "api/FileCurator.Formats.Mime.MimeReader.html",
    "title": "Class MimeReader | FileCurator API Reference",
    "keywords": "Class MimeReader MIME file reader Inheritance object ReaderBaseClass<IMessage> MimeReader Implements IGenericFileReader<IMessage> Inherited Members ReaderBaseClass<IMessage>.CanRead(string) ReaderBaseClass<IMessage>.CanRead(Stream) ReaderBaseClass<IMessage>.InternalCanRead(Stream) ReaderBaseClass<IMessage>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Mime Assembly: FileCurator.dll Syntax public class MimeReader : ReaderBaseClass<IMessage>, IGenericFileReader<IMessage> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IMessage>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IMessage Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IMessage The file Overrides ReaderBaseClass<IMessage>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.Mime.MimeWriter.html": {
    "href": "api/FileCurator.Formats.Mime.MimeWriter.html",
    "title": "Class MimeWriter | FileCurator API Reference",
    "keywords": "Class MimeWriter MIME Writer Inheritance object MimeWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Mime Assembly: FileCurator.dll Syntax public class MimeWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.Mime.html": {
    "href": "api/FileCurator.Formats.Mime.html",
    "title": "Namespace FileCurator.Formats.Mime | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Mime Classes MimeFormat Mime format MimeReader MIME file reader MimeWriter MIME Writer"
  },
  "api/FileCurator.Formats.PowerPoint.PowerPointFormat.html": {
    "href": "api/FileCurator.Formats.PowerPoint.PowerPointFormat.html",
    "title": "Class PowerPointFormat | FileCurator API Reference",
    "keywords": "Class PowerPointFormat PowerPoint format Inheritance object FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile> PowerPointFormat Implements IFormat<IGenericFile> IFormat Inherited Members FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.ContentTypes FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.DisplayName FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.FileTypes FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.HeaderInfo FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.Reader FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.Writer FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.CanRead(string) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.CanRead(Stream) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.CanWrite(string) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.Read(Stream) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.ReadAsync(Stream) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.ReadBase(Stream) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.ReadBaseAsync(Stream) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.Write(Stream, IGenericFile) FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.PowerPoint Assembly: FileCurator.dll Syntax public class PowerPointFormat : FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>, IFormat<IGenericFile>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets or sets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets or sets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<PowerPointReader, PowerPointWriter, IGenericFile>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.PowerPoint.PowerPointReader.html": {
    "href": "api/FileCurator.Formats.PowerPoint.PowerPointReader.html",
    "title": "Class PowerPointReader | FileCurator API Reference",
    "keywords": "Class PowerPointReader Powerpoint file reader Inheritance object ReaderBaseClass<IGenericFile> PowerPointReader Implements IGenericFileReader<IGenericFile> Inherited Members ReaderBaseClass<IGenericFile>.CanRead(string) ReaderBaseClass<IGenericFile>.CanRead(Stream) ReaderBaseClass<IGenericFile>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.PowerPoint Assembly: FileCurator.dll Syntax public class PowerPointReader : ReaderBaseClass<IGenericFile>, IGenericFileReader<IGenericFile> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IGenericFile>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source InternalCanRead(Stream) Used to determine if a reader can actually read the file Declaration public override bool InternalCanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise Overrides ReaderBaseClass<IGenericFile>.InternalCanRead(Stream) See Also IGenericFileReader<TFile> | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IGenericFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile The file Overrides ReaderBaseClass<IGenericFile>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.PowerPoint.PowerPointWriter.html": {
    "href": "api/FileCurator.Formats.PowerPoint.PowerPointWriter.html",
    "title": "Class PowerPointWriter | FileCurator API Reference",
    "keywords": "Class PowerPointWriter PowerPoint file writer. Inheritance object PowerPointWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.PowerPoint Assembly: FileCurator.dll Syntax public class PowerPointWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.PowerPoint.html": {
    "href": "api/FileCurator.Formats.PowerPoint.html",
    "title": "Namespace FileCurator.Formats.PowerPoint | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.PowerPoint Classes PowerPointFormat PowerPoint format PowerPointReader Powerpoint file reader PowerPointWriter PowerPoint file writer."
  },
  "api/FileCurator.Formats.RSS.Data.Channel.html": {
    "href": "api/FileCurator.Formats.RSS.Data.Channel.html",
    "title": "Class Channel | FileCurator API Reference",
    "keywords": "Class Channel Channel Inheritance object Channel Implements IChannel IList<IFeedItem> ICollection<IFeedItem> IEnumerable<IFeedItem> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.RSS.Data Assembly: FileCurator.dll Syntax public class Channel : IChannel, IList<IFeedItem>, ICollection<IFeedItem>, IEnumerable<IFeedItem>, IEnumerable Constructors | Edit this page View Source Channel() Initializes a new instance of the Channel class. Declaration public Channel() See Also IChannel | Edit this page View Source Channel(IXPathNavigable) Constructor Declaration public Channel(IXPathNavigable doc) Parameters Type Name Description IXPathNavigable doc XML representation of the channel See Also IChannel Properties | Edit this page View Source Categories Gets the categories. Declaration public IList<string> Categories { get; } Property Value Type Description IList<string> The categories. See Also IChannel | Edit this page View Source Cloud Gets the cloud. Declaration public string? Cloud { get; set; } Property Value Type Description string The cloud. See Also IChannel | Edit this page View Source Content Gets the content. Declaration public string Content { get; } Property Value Type Description string The content. See Also IChannel | Edit this page View Source Copyright Gets the copyright. Declaration public string Copyright { get; set; } Property Value Type Description string The copyright. See Also IChannel | Edit this page View Source Count Gets the number of elements contained in the ICollection<T>. Declaration public int Count { get; } Property Value Type Description int See Also IChannel | Edit this page View Source Description Gets the description. Declaration public string? Description { get; set; } Property Value Type Description string The description. See Also IChannel | Edit this page View Source Docs Gets the docs. Declaration public string Docs { get; set; } Property Value Type Description string The docs. See Also IChannel | Edit this page View Source Explicit Gets or sets a value indicating whether this IChannel is explicit. Declaration public bool Explicit { get; set; } Property Value Type Description bool true if explicit; otherwise, false. See Also IChannel | Edit this page View Source ImageUrl Gets or sets the image URL. Declaration public string? ImageUrl { get; set; } Property Value Type Description string The image URL. See Also IChannel | Edit this page View Source IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description bool See Also IChannel | Edit this page View Source this[int] Gets or sets the IFeedItem at the specified index. Declaration public IFeedItem this[int index] { get; set; } Parameters Type Name Description int index The index. Property Value Type Description IFeedItem The IFeedItem. See Also IChannel | Edit this page View Source Items Gets the items. Declaration public IList<IFeedItem> Items { get; } Property Value Type Description IList<IFeedItem> The items. See Also IChannel | Edit this page View Source Language Gets or sets the language. Declaration public string Language { get; set; } Property Value Type Description string The language. See Also IChannel | Edit this page View Source Link Gets or sets the link. Declaration public string? Link { get; set; } Property Value Type Description string The link. See Also IChannel | Edit this page View Source PubDate Gets or sets the pub date. Declaration public DateTime PubDate { get; set; } Property Value Type Description DateTime The pub date. See Also IChannel | Edit this page View Source TTL Gets or sets the TTL. Declaration public int TTL { get; set; } Property Value Type Description int The TTL. See Also IChannel | Edit this page View Source Title Gets or sets the title. Declaration public string? Title { get; set; } Property Value Type Description string The title. See Also IChannel | Edit this page View Source WebMaster Gets or sets the web master. Declaration public string? WebMaster { get; set; } Property Value Type Description string The web master. See Also IChannel Methods | Edit this page View Source Add(IFeedItem) Adds an item to the ICollection<T>. Declaration public void Add(IFeedItem item) Parameters Type Name Description IFeedItem item The object to add to the ICollection<T>. See Also IChannel | Edit this page View Source Clear() Removes all items from the ICollection<T>. Declaration public void Clear() See Also IChannel | Edit this page View Source Contains(IFeedItem) Determines whether the ICollection<T> contains a specific value. Declaration public bool Contains(IFeedItem item) Parameters Type Name Description IFeedItem item The object to locate in the ICollection<T>. Returns Type Description bool true if item is found in the ICollection<T>; otherwise, false. See Also IChannel | Edit this page View Source CopyTo(IFeedItem[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. Declaration public void CopyTo(IFeedItem[] array, int arrayIndex) Parameters Type Name Description IFeedItem[] array The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. int arrayIndex The zero-based index in array at which copying begins. See Also IChannel | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<IFeedItem> GetEnumerator() Returns Type Description IEnumerator<IFeedItem> An enumerator that can be used to iterate through the collection. See Also IChannel | Edit this page View Source IndexOf(IFeedItem) Determines the index of a specific item in the IList<T>. Declaration public int IndexOf(IFeedItem item) Parameters Type Name Description IFeedItem item The object to locate in the IList<T>. Returns Type Description int The index of item if found in the list; otherwise, -1. See Also IChannel | Edit this page View Source Insert(int, IFeedItem) Inserts an item to the IList<T> at the specified index. Declaration public void Insert(int index, IFeedItem item) Parameters Type Name Description int index The zero-based index at which item should be inserted. IFeedItem item The object to insert into the IList<T>. See Also IChannel | Edit this page View Source Remove(IFeedItem) Removes the first occurrence of a specific object from the ICollection<T>. Declaration public bool Remove(IFeedItem item) Parameters Type Name Description IFeedItem item The object to remove from the ICollection<T>. Returns Type Description bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. See Also IChannel | Edit this page View Source RemoveAt(int) Removes the IList<T> item at the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description int index The zero-based index of the item to remove. See Also IChannel | Edit this page View Source ToString() Converts the channel to a string Declaration public override string ToString() Returns Type Description string The channel as a string Overrides object.ToString() See Also IChannel Implements IChannel IList<T> ICollection<T> IEnumerable<T> IEnumerable See Also IChannel"
  },
  "api/FileCurator.Formats.RSS.Data.Enclosure.html": {
    "href": "api/FileCurator.Formats.RSS.Data.Enclosure.html",
    "title": "Class Enclosure | FileCurator API Reference",
    "keywords": "Class Enclosure Enclosure Inheritance object Enclosure Implements IEnclosure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.RSS.Data Assembly: FileCurator.dll Syntax public class Enclosure : IEnclosure Constructors | Edit this page View Source Enclosure() Constructor Declaration public Enclosure() See Also IEnclosure | Edit this page View Source Enclosure(IXPathNavigable) Constructor Declaration public Enclosure(IXPathNavigable doc) Parameters Type Name Description IXPathNavigable doc XML element holding info for the enclosure See Also IEnclosure Properties | Edit this page View Source Length Size in bytes Declaration public int Length { get; set; } Property Value Type Description int See Also IEnclosure | Edit this page View Source Type File type Declaration public string? Type { get; set; } Property Value Type Description string See Also IEnclosure | Edit this page View Source Url Location of the item Declaration public string? Url { get; set; } Property Value Type Description string See Also IEnclosure Methods | Edit this page View Source ToString() to string item. Used for outputting the item to RSS. Declaration public override string ToString() Returns Type Description string A string formatted for RSS output Overrides object.ToString() See Also IEnclosure Implements IEnclosure See Also IEnclosure"
  },
  "api/FileCurator.Formats.RSS.Data.Feed.html": {
    "href": "api/FileCurator.Formats.RSS.Data.Feed.html",
    "title": "Class Feed | FileCurator API Reference",
    "keywords": "Class Feed Individual RSS Feed Inheritance object Feed Implements IFeed IGenericFile IList<IChannel> ICollection<IChannel> IEnumerable<IChannel> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.RSS.Data Assembly: FileCurator.dll Syntax public class Feed : IFeed, IGenericFile, IList<IChannel>, ICollection<IChannel>, IEnumerable<IChannel>, IEnumerable Constructors | Edit this page View Source Feed() Initializes a new instance of the Feed class. Declaration public Feed() See Also IFeed | Edit this page View Source Feed(string) Initializes a new instance of the Feed class. Declaration public Feed(string content) Parameters Type Name Description string content The content. See Also IFeed Properties | Edit this page View Source Channels Gets the channels. Declaration public IList<IChannel> Channels { get; } Property Value Type Description IList<IChannel> The channels. See Also IFeed | Edit this page View Source Content Gets or sets the content. Declaration public string Content { get; } Property Value Type Description string The content. See Also IFeed | Edit this page View Source Count Gets the number of elements contained in the ICollection<T>. Declaration public int Count { get; } Property Value Type Description int See Also IFeed | Edit this page View Source IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description bool See Also IFeed | Edit this page View Source this[int] Gets or sets the IChannel at the specified index. Declaration public IChannel this[int index] { get; set; } Parameters Type Name Description int index The index. Property Value Type Description IChannel The IChannel. See Also IFeed | Edit this page View Source Meta Gets or sets the meta. Declaration public string Meta { get; } Property Value Type Description string The meta. See Also IFeed | Edit this page View Source Title Gets or sets the title. Declaration public string Title { get; } Property Value Type Description string The title. See Also IFeed Methods | Edit this page View Source Add(IChannel) Adds an item to the ICollection<T>. Declaration public void Add(IChannel item) Parameters Type Name Description IChannel item The object to add to the ICollection<T>. See Also IFeed | Edit this page View Source Clear() Removes all items from the ICollection<T>. Declaration public void Clear() See Also IFeed | Edit this page View Source Contains(IChannel) Determines whether the ICollection<T> contains a specific value. Declaration public bool Contains(IChannel item) Parameters Type Name Description IChannel item The object to locate in the ICollection<T>. Returns Type Description bool true if item is found in the ICollection<T>; otherwise, false. See Also IFeed | Edit this page View Source CopyTo(IChannel[], int) Copies the elements of the ICollection<T> to an Array, starting at a particular Array index. Declaration public void CopyTo(IChannel[] array, int arrayIndex) Parameters Type Name Description IChannel[] array The one-dimensional Array that is the destination of the elements copied from ICollection<T>. The Array must have zero-based indexing. int arrayIndex The zero-based index in array at which copying begins. See Also IFeed | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<IChannel> GetEnumerator() Returns Type Description IEnumerator<IChannel> An enumerator that can be used to iterate through the collection. See Also IFeed | Edit this page View Source IndexOf(IChannel) Determines the index of a specific item in the IList<T>. Declaration public int IndexOf(IChannel item) Parameters Type Name Description IChannel item The object to locate in the IList<T>. Returns Type Description int The index of item if found in the list; otherwise, -1. See Also IFeed | Edit this page View Source Insert(int, IChannel) Inserts an item to the IList<T> at the specified index. Declaration public void Insert(int index, IChannel item) Parameters Type Name Description int index The zero-based index at which item should be inserted. IChannel item The object to insert into the IList<T>. See Also IFeed | Edit this page View Source Remove(IChannel) Removes the first occurrence of a specific object from the ICollection<T>. Declaration public bool Remove(IChannel item) Parameters Type Name Description IChannel item The object to remove from the ICollection<T>. Returns Type Description bool true if item was successfully removed from the ICollection<T>; otherwise, false. This method also returns false if item is not found in the original ICollection<T>. See Also IFeed | Edit this page View Source RemoveAt(int) Removes the IList<T> item at the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description int index The zero-based index of the item to remove. See Also IFeed | Edit this page View Source ToString() string representation of the RSS feed. Declaration public override string ToString() Returns Type Description string An rss formatted string Overrides object.ToString() See Also IFeed Implements IFeed IGenericFile IList<T> ICollection<T> IEnumerable<T> IEnumerable See Also IFeed"
  },
  "api/FileCurator.Formats.RSS.Data.FeedGuid.html": {
    "href": "api/FileCurator.Formats.RSS.Data.FeedGuid.html",
    "title": "Class FeedGuid | FileCurator API Reference",
    "keywords": "Class FeedGuid Feed GUID Inheritance object FeedGuid Implements IFeedGuid Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.RSS.Data Assembly: FileCurator.dll Syntax public class FeedGuid : IFeedGuid Constructors | Edit this page View Source FeedGuid() Constructor Declaration public FeedGuid() See Also IFeedGuid | Edit this page View Source FeedGuid(IXPathNavigable) Constructor Declaration public FeedGuid(IXPathNavigable element) Parameters Type Name Description IXPathNavigable element XML element holding info for the enclosure See Also IFeedGuid Properties | Edit this page View Source GuidText GUID Text Declaration public string? GuidText { get; set; } Property Value Type Description string See Also IFeedGuid | Edit this page View Source IsPermaLink Is this a perma link? Declaration public bool IsPermaLink { get; set; } Property Value Type Description bool See Also IFeedGuid Methods | Edit this page View Source ToString() to string item. Used for outputting the item to RSS. Declaration public override string ToString() Returns Type Description string A string formatted for RSS output Overrides object.ToString() See Also IFeedGuid Implements IFeedGuid See Also IFeedGuid"
  },
  "api/FileCurator.Formats.RSS.Data.FeedItem.html": {
    "href": "api/FileCurator.Formats.RSS.Data.FeedItem.html",
    "title": "Class FeedItem | FileCurator API Reference",
    "keywords": "Class FeedItem Feed item Inheritance object FeedItem Implements IFeedItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.RSS.Data Assembly: FileCurator.dll Syntax public class FeedItem : IFeedItem Constructors | Edit this page View Source FeedItem() Constructor Declaration public FeedItem() See Also IFeedItem | Edit this page View Source FeedItem(IXPathNavigable) Constructor Declaration public FeedItem(IXPathNavigable doc) Parameters Type Name Description IXPathNavigable doc XML element containing the item content See Also IFeedItem Properties | Edit this page View Source Author Author Declaration public string? Author { get; set; } Property Value Type Description string See Also IFeedItem | Edit this page View Source Categories Categories Declaration public IList<string> Categories { get; } Property Value Type Description IList<string> See Also IFeedItem | Edit this page View Source Content Gets the content. Declaration public string Content { get; } Property Value Type Description string The content. See Also IFeedItem | Edit this page View Source Description Description Declaration public string? Description { get; set; } Property Value Type Description string See Also IFeedItem | Edit this page View Source Enclosure Enclosure Declaration public IEnclosure? Enclosure { get; set; } Property Value Type Description IEnclosure See Also IFeedItem | Edit this page View Source GUID GUID for the item Declaration public virtual IFeedGuid? GUID { get; set; } Property Value Type Description IFeedGuid See Also IFeedItem | Edit this page View Source Link Link Declaration public string? Link { get; set; } Property Value Type Description string See Also IFeedItem | Edit this page View Source PubDate Publication date Declaration public DateTime PubDate { get; set; } Property Value Type Description DateTime See Also IFeedItem | Edit this page View Source Thumbnail Thumbnail Declaration public IThumbnail? Thumbnail { get; set; } Property Value Type Description IThumbnail See Also IFeedItem | Edit this page View Source Title Title Declaration public string? Title { get; set; } Property Value Type Description string See Also IFeedItem Methods | Edit this page View Source ToString() Outputs a string ready for RSS Declaration public override string ToString() Returns Type Description string A string formatted for RSS Overrides object.ToString() See Also IFeedItem Implements IFeedItem See Also IFeedItem"
  },
  "api/FileCurator.Formats.RSS.Data.Thumbnail.html": {
    "href": "api/FileCurator.Formats.RSS.Data.Thumbnail.html",
    "title": "Class Thumbnail | FileCurator API Reference",
    "keywords": "Class Thumbnail Thumbnail Inheritance object Thumbnail Implements IThumbnail Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: FileCurator.Formats.RSS.Data Assembly: FileCurator.dll Syntax public class Thumbnail : IThumbnail Constructors | Edit this page View Source Thumbnail() Constructor Declaration public Thumbnail() See Also IThumbnail | Edit this page View Source Thumbnail(IXPathNavigable) Constructor Declaration public Thumbnail(IXPathNavigable doc) Parameters Type Name Description IXPathNavigable doc XML element holding info for the enclosure See Also IThumbnail Properties | Edit this page View Source Height Image height Declaration public int Height { get; set; } Property Value Type Description int See Also IThumbnail | Edit this page View Source Url Location of the item Declaration public string? Url { get; set; } Property Value Type Description string See Also IThumbnail | Edit this page View Source Width Image width Declaration public int Width { get; set; } Property Value Type Description int See Also IThumbnail Methods | Edit this page View Source ToString() to string item. Used for outputting the item to RSS. Declaration public override string ToString() Returns Type Description string A string formatted for RSS output Overrides object.ToString() See Also IThumbnail Implements IThumbnail See Also IThumbnail"
  },
  "api/FileCurator.Formats.RSS.Data.Utils.html": {
    "href": "api/FileCurator.Formats.RSS.Data.Utils.html",
    "title": "Class Utils | FileCurator API Reference",
    "keywords": "Class Utils Utility class used by RSS classes. Inheritance object Utils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.RSS.Data Assembly: FileCurator.dll Syntax public static class Utils Methods | Edit this page View Source StripIllegalCharacters(string) Strips illegal characters from RSS items Declaration public static string StripIllegalCharacters(string original) Parameters Type Name Description string original Original text Returns Type Description string string stripped of certain characters."
  },
  "api/FileCurator.Formats.RSS.Data.html": {
    "href": "api/FileCurator.Formats.RSS.Data.html",
    "title": "Namespace FileCurator.Formats.RSS.Data | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.RSS.Data Classes Channel Channel Enclosure Enclosure Feed Individual RSS Feed FeedGuid Feed GUID FeedItem Feed item Thumbnail Thumbnail Utils Utility class used by RSS classes."
  },
  "api/FileCurator.Formats.RSS.RSSFormat.html": {
    "href": "api/FileCurator.Formats.RSS.RSSFormat.html",
    "title": "Class RSSFormat | FileCurator API Reference",
    "keywords": "Class RSSFormat RSS Format Inheritance object FormatBaseClass<RSSReader, RSSWriter, IFeed> RSSFormat Implements IFormat<IFeed> IFormat Inherited Members FormatBaseClass<RSSReader, RSSWriter, IFeed>.ContentTypes FormatBaseClass<RSSReader, RSSWriter, IFeed>.DisplayName FormatBaseClass<RSSReader, RSSWriter, IFeed>.FileTypes FormatBaseClass<RSSReader, RSSWriter, IFeed>.HeaderInfo FormatBaseClass<RSSReader, RSSWriter, IFeed>.Reader FormatBaseClass<RSSReader, RSSWriter, IFeed>.Writer FormatBaseClass<RSSReader, RSSWriter, IFeed>.CanRead(string) FormatBaseClass<RSSReader, RSSWriter, IFeed>.CanRead(Stream) FormatBaseClass<RSSReader, RSSWriter, IFeed>.CanWrite(string) FormatBaseClass<RSSReader, RSSWriter, IFeed>.Read(Stream) FormatBaseClass<RSSReader, RSSWriter, IFeed>.ReadAsync(Stream) FormatBaseClass<RSSReader, RSSWriter, IFeed>.ReadBase(Stream) FormatBaseClass<RSSReader, RSSWriter, IFeed>.ReadBaseAsync(Stream) FormatBaseClass<RSSReader, RSSWriter, IFeed>.Write(Stream, IGenericFile) FormatBaseClass<RSSReader, RSSWriter, IFeed>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.RSS Assembly: FileCurator.dll Syntax public class RSSFormat : FormatBaseClass<RSSReader, RSSWriter, IFeed>, IFormat<IFeed>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<RSSReader, RSSWriter, IFeed>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<RSSReader, RSSWriter, IFeed>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<RSSReader, RSSWriter, IFeed>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.RSS.RSSReader.html": {
    "href": "api/FileCurator.Formats.RSS.RSSReader.html",
    "title": "Class RSSReader | FileCurator API Reference",
    "keywords": "Class RSSReader RSS Reader Inheritance object ReaderBaseClass<IFeed> RSSReader Implements IGenericFileReader<IFeed> Inherited Members ReaderBaseClass<IFeed>.CanRead(string) ReaderBaseClass<IFeed>.CanRead(Stream) ReaderBaseClass<IFeed>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.RSS Assembly: FileCurator.dll Syntax public class RSSReader : ReaderBaseClass<IFeed>, IGenericFileReader<IFeed> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IFeed>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source InternalCanRead(Stream) Used to determine if a reader can actually read the file Declaration public override bool InternalCanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise Overrides ReaderBaseClass<IFeed>.InternalCanRead(Stream) See Also IGenericFileReader<TFile> | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IFeed Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IFeed The file Overrides ReaderBaseClass<IFeed>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.RSS.RSSWriter.html": {
    "href": "api/FileCurator.Formats.RSS.RSSWriter.html",
    "title": "Class RSSWriter | FileCurator API Reference",
    "keywords": "Class RSSWriter RSS Writer Inheritance object RSSWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.RSS Assembly: FileCurator.dll Syntax public class RSSWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.RSS.html": {
    "href": "api/FileCurator.Formats.RSS.html",
    "title": "Namespace FileCurator.Formats.RSS | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.RSS Classes RSSFormat RSS Format RSSReader RSS Reader RSSWriter RSS Writer"
  },
  "api/FileCurator.Formats.Txt.TxtFormat.html": {
    "href": "api/FileCurator.Formats.Txt.TxtFormat.html",
    "title": "Class TxtFormat | FileCurator API Reference",
    "keywords": "Class TxtFormat Text format Inheritance object FormatBaseClass<TxtReader, TxtWriter, IGenericFile> TxtFormat Implements IFormat<IGenericFile> IFormat Inherited Members FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.ContentTypes FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.DisplayName FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.FileTypes FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.HeaderInfo FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.Reader FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.Writer FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.CanRead(string) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.CanRead(Stream) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.CanWrite(string) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.Read(Stream) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.ReadAsync(Stream) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.ReadBase(Stream) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.ReadBaseAsync(Stream) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.Write(Stream, IGenericFile) FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Txt Assembly: FileCurator.dll Syntax public class TxtFormat : FormatBaseClass<TxtReader, TxtWriter, IGenericFile>, IFormat<IGenericFile>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets or sets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets or sets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<TxtReader, TxtWriter, IGenericFile>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.Txt.TxtReader.html": {
    "href": "api/FileCurator.Formats.Txt.TxtReader.html",
    "title": "Class TxtReader | FileCurator API Reference",
    "keywords": "Class TxtReader TXT file reader Inheritance object ReaderBaseClass<IGenericFile> TxtReader Implements IGenericFileReader<IGenericFile> Inherited Members ReaderBaseClass<IGenericFile>.CanRead(string) ReaderBaseClass<IGenericFile>.CanRead(Stream) ReaderBaseClass<IGenericFile>.InternalCanRead(Stream) ReaderBaseClass<IGenericFile>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Txt Assembly: FileCurator.dll Syntax public class TxtReader : ReaderBaseClass<IGenericFile>, IGenericFileReader<IGenericFile> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IGenericFile>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IGenericFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile The file Overrides ReaderBaseClass<IGenericFile>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.Txt.TxtWriter.html": {
    "href": "api/FileCurator.Formats.Txt.TxtWriter.html",
    "title": "Class TxtWriter | FileCurator API Reference",
    "keywords": "Class TxtWriter Txt Writer Inheritance object TxtWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Txt Assembly: FileCurator.dll Syntax public class TxtWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.Txt.html": {
    "href": "api/FileCurator.Formats.Txt.html",
    "title": "Namespace FileCurator.Formats.Txt | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Txt Classes TxtFormat Text format TxtReader TXT file reader TxtWriter Txt Writer"
  },
  "api/FileCurator.Formats.VCalendar.VCalendarFormat.html": {
    "href": "api/FileCurator.Formats.VCalendar.VCalendarFormat.html",
    "title": "Class VCalendarFormat | FileCurator API Reference",
    "keywords": "Class VCalendarFormat VCal format Inheritance object FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar> VCalendarFormat Implements IFormat<ICalendar> IFormat Inherited Members FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.ContentTypes FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.DisplayName FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.FileTypes FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.HeaderInfo FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.Reader FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.Writer FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.CanRead(string) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.CanRead(Stream) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.CanWrite(string) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.Read(Stream) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.ReadAsync(Stream) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.ReadBase(Stream) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.ReadBaseAsync(Stream) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.Write(Stream, IGenericFile) FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.VCalendar Assembly: FileCurator.dll Syntax public class VCalendarFormat : FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>, IFormat<ICalendar>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<VCalendarReader, VCalendarWriter, ICalendar>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.VCalendar.VCalendarReader.html": {
    "href": "api/FileCurator.Formats.VCalendar.VCalendarReader.html",
    "title": "Class VCalendarReader | FileCurator API Reference",
    "keywords": "Class VCalendarReader VCal reader Inheritance object ReaderBaseClass<ICalendar> VCalendarReader Implements IGenericFileReader<ICalendar> Inherited Members ReaderBaseClass<ICalendar>.CanRead(string) ReaderBaseClass<ICalendar>.CanRead(Stream) ReaderBaseClass<ICalendar>.InternalCanRead(Stream) ReaderBaseClass<ICalendar>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.VCalendar Assembly: FileCurator.dll Syntax public class VCalendarReader : ReaderBaseClass<ICalendar>, IGenericFileReader<ICalendar> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<ICalendar>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override ICalendar Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description ICalendar The file Overrides ReaderBaseClass<ICalendar>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.VCalendar.VCalendarWriter.html": {
    "href": "api/FileCurator.Formats.VCalendar.VCalendarWriter.html",
    "title": "Class VCalendarWriter | FileCurator API Reference",
    "keywords": "Class VCalendarWriter VCal writer Inheritance object VCalendarWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.VCalendar Assembly: FileCurator.dll Syntax public class VCalendarWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.VCalendar.html": {
    "href": "api/FileCurator.Formats.VCalendar.html",
    "title": "Namespace FileCurator.Formats.VCalendar | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.VCalendar Classes VCalendarFormat VCal format VCalendarReader VCal reader VCalendarWriter VCal writer"
  },
  "api/FileCurator.Formats.VCard.VCardFormat.html": {
    "href": "api/FileCurator.Formats.VCard.VCardFormat.html",
    "title": "Class VCardFormat | FileCurator API Reference",
    "keywords": "Class VCardFormat VCard format Inheritance object FormatBaseClass<VCardReader, VCardWriter, ICard> VCardFormat Implements IFormat<ICard> IFormat Inherited Members FormatBaseClass<VCardReader, VCardWriter, ICard>.ContentTypes FormatBaseClass<VCardReader, VCardWriter, ICard>.DisplayName FormatBaseClass<VCardReader, VCardWriter, ICard>.FileTypes FormatBaseClass<VCardReader, VCardWriter, ICard>.HeaderInfo FormatBaseClass<VCardReader, VCardWriter, ICard>.Reader FormatBaseClass<VCardReader, VCardWriter, ICard>.Writer FormatBaseClass<VCardReader, VCardWriter, ICard>.CanRead(string) FormatBaseClass<VCardReader, VCardWriter, ICard>.CanRead(Stream) FormatBaseClass<VCardReader, VCardWriter, ICard>.CanWrite(string) FormatBaseClass<VCardReader, VCardWriter, ICard>.Read(Stream) FormatBaseClass<VCardReader, VCardWriter, ICard>.ReadAsync(Stream) FormatBaseClass<VCardReader, VCardWriter, ICard>.ReadBase(Stream) FormatBaseClass<VCardReader, VCardWriter, ICard>.ReadBaseAsync(Stream) FormatBaseClass<VCardReader, VCardWriter, ICard>.Write(Stream, IGenericFile) FormatBaseClass<VCardReader, VCardWriter, ICard>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.VCard Assembly: FileCurator.dll Syntax public class VCardFormat : FormatBaseClass<VCardReader, VCardWriter, ICard>, IFormat<ICard>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<VCardReader, VCardWriter, ICard>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<VCardReader, VCardWriter, ICard>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<VCardReader, VCardWriter, ICard>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.VCard.VCardReader.html": {
    "href": "api/FileCurator.Formats.VCard.VCardReader.html",
    "title": "Class VCardReader | FileCurator API Reference",
    "keywords": "Class VCardReader Vcard reader Inheritance object ReaderBaseClass<ICard> VCardReader Implements IGenericFileReader<ICard> Inherited Members ReaderBaseClass<ICard>.CanRead(string) ReaderBaseClass<ICard>.CanRead(Stream) ReaderBaseClass<ICard>.InternalCanRead(Stream) ReaderBaseClass<ICard>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.VCard Assembly: FileCurator.dll Syntax public class VCardReader : ReaderBaseClass<ICard>, IGenericFileReader<ICard> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<ICard>.HeaderIdentifier See Also ReaderBaseClass<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override ICard Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description ICard The file Overrides ReaderBaseClass<ICard>.Read(Stream) See Also ReaderBaseClass<TFile> Implements IGenericFileReader<TFile> See Also ReaderBaseClass<TFile>"
  },
  "api/FileCurator.Formats.VCard.VCardWriter.html": {
    "href": "api/FileCurator.Formats.VCard.VCardWriter.html",
    "title": "Class VCardWriter | FileCurator API Reference",
    "keywords": "Class VCardWriter VCard writer Inheritance object VCardWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.VCard Assembly: FileCurator.dll Syntax public class VCardWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.VCard.html": {
    "href": "api/FileCurator.Formats.VCard.html",
    "title": "Namespace FileCurator.Formats.VCard | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.VCard Classes VCardFormat VCard format VCardReader Vcard reader VCardWriter VCard writer"
  },
  "api/FileCurator.Formats.Word.WordFormat.html": {
    "href": "api/FileCurator.Formats.Word.WordFormat.html",
    "title": "Class WordFormat | FileCurator API Reference",
    "keywords": "Class WordFormat Word format Inheritance object FormatBaseClass<WordReader, WordWriter, IGenericFile> WordFormat Implements IFormat<IGenericFile> IFormat Inherited Members FormatBaseClass<WordReader, WordWriter, IGenericFile>.ContentTypes FormatBaseClass<WordReader, WordWriter, IGenericFile>.DisplayName FormatBaseClass<WordReader, WordWriter, IGenericFile>.FileTypes FormatBaseClass<WordReader, WordWriter, IGenericFile>.HeaderInfo FormatBaseClass<WordReader, WordWriter, IGenericFile>.Reader FormatBaseClass<WordReader, WordWriter, IGenericFile>.Writer FormatBaseClass<WordReader, WordWriter, IGenericFile>.CanRead(string) FormatBaseClass<WordReader, WordWriter, IGenericFile>.CanRead(Stream) FormatBaseClass<WordReader, WordWriter, IGenericFile>.CanWrite(string) FormatBaseClass<WordReader, WordWriter, IGenericFile>.Read(Stream) FormatBaseClass<WordReader, WordWriter, IGenericFile>.ReadAsync(Stream) FormatBaseClass<WordReader, WordWriter, IGenericFile>.ReadBase(Stream) FormatBaseClass<WordReader, WordWriter, IGenericFile>.ReadBaseAsync(Stream) FormatBaseClass<WordReader, WordWriter, IGenericFile>.Write(Stream, IGenericFile) FormatBaseClass<WordReader, WordWriter, IGenericFile>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Word Assembly: FileCurator.dll Syntax public class WordFormat : FormatBaseClass<WordReader, WordWriter, IGenericFile>, IFormat<IGenericFile>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<WordReader, WordWriter, IGenericFile>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets or sets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<WordReader, WordWriter, IGenericFile>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets or sets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<WordReader, WordWriter, IGenericFile>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.Word.WordReader.html": {
    "href": "api/FileCurator.Formats.Word.WordReader.html",
    "title": "Class WordReader | FileCurator API Reference",
    "keywords": "Class WordReader Word reader Inheritance object ReaderBaseClass<IGenericFile> WordReader Implements IGenericFileReader<IGenericFile> Inherited Members ReaderBaseClass<IGenericFile>.CanRead(string) ReaderBaseClass<IGenericFile>.CanRead(Stream) ReaderBaseClass<IGenericFile>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Word Assembly: FileCurator.dll Syntax public class WordReader : ReaderBaseClass<IGenericFile>, IGenericFileReader<IGenericFile> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IGenericFile>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source InternalCanRead(Stream) Used to determine if a reader can actually read the file Declaration public override bool InternalCanRead(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description bool True if it can, false otherwise Overrides ReaderBaseClass<IGenericFile>.InternalCanRead(Stream) See Also IGenericFileReader<TFile> | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IGenericFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile The file Overrides ReaderBaseClass<IGenericFile>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.Word.WordWriter.html": {
    "href": "api/FileCurator.Formats.Word.WordWriter.html",
    "title": "Class WordWriter | FileCurator API Reference",
    "keywords": "Class WordWriter Word writer Inheritance object WordWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.Word Assembly: FileCurator.dll Syntax public class WordWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.Word.html": {
    "href": "api/FileCurator.Formats.Word.html",
    "title": "Namespace FileCurator.Formats.Word | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.Word Classes WordFormat Word format WordReader Word reader WordWriter Word writer"
  },
  "api/FileCurator.Formats.XML.XMLFormat.html": {
    "href": "api/FileCurator.Formats.XML.XMLFormat.html",
    "title": "Class XMLFormat | FileCurator API Reference",
    "keywords": "Class XMLFormat XML Format Inheritance object FormatBaseClass<XMLReader, XMLWriter, IGenericFile> XMLFormat Implements IFormat<IGenericFile> IFormat Inherited Members FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.ContentTypes FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.DisplayName FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.FileTypes FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.HeaderInfo FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.Reader FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.Writer FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.CanRead(string) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.CanRead(Stream) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.CanWrite(string) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.Read(Stream) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.ReadAsync(Stream) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.ReadBase(Stream) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.ReadBaseAsync(Stream) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.Write(Stream, IGenericFile) FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.XML Assembly: FileCurator.dll Syntax public class XMLFormat : FormatBaseClass<XMLReader, XMLWriter, IGenericFile>, IFormat<IGenericFile>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<XMLReader, XMLWriter, IGenericFile>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Formats.XML.XMLReader.html": {
    "href": "api/FileCurator.Formats.XML.XMLReader.html",
    "title": "Class XMLReader | FileCurator API Reference",
    "keywords": "Class XMLReader XML Reader Inheritance object ReaderBaseClass<IGenericFile> XMLReader Implements IGenericFileReader<IGenericFile> Inherited Members ReaderBaseClass<IGenericFile>.CanRead(string) ReaderBaseClass<IGenericFile>.CanRead(Stream) ReaderBaseClass<IGenericFile>.InternalCanRead(Stream) ReaderBaseClass<IGenericFile>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.XML Assembly: FileCurator.dll Syntax public class XMLReader : ReaderBaseClass<IGenericFile>, IGenericFileReader<IGenericFile> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IGenericFile>.HeaderIdentifier See Also IGenericFileReader<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IGenericFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile The file Overrides ReaderBaseClass<IGenericFile>.Read(Stream) See Also IGenericFileReader<TFile> Implements IGenericFileReader<TFile> See Also IGenericFileReader<TFile>"
  },
  "api/FileCurator.Formats.XML.XMLWriter.html": {
    "href": "api/FileCurator.Formats.XML.XMLWriter.html",
    "title": "Class XMLWriter | FileCurator API Reference",
    "keywords": "Class XMLWriter XML Writer Inheritance object XMLWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Formats.XML Assembly: FileCurator.dll Syntax public class XMLWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Formats.XML.html": {
    "href": "api/FileCurator.Formats.XML.html",
    "title": "Namespace FileCurator.Formats.XML | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats.XML Classes XMLFormat XML Format XMLReader XML Reader XMLWriter XML Writer"
  },
  "api/FileCurator.Formats.html": {
    "href": "api/FileCurator.Formats.html",
    "title": "Namespace FileCurator.Formats | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Formats Classes Manager Format manager"
  },
  "api/FileCurator.HelperMethods.InternalHttpClientFactory.html": {
    "href": "api/FileCurator.HelperMethods.InternalHttpClientFactory.html",
    "title": "Class InternalHttpClientFactory | FileCurator API Reference",
    "keywords": "Class InternalHttpClientFactory Internal HTTP Client Factory Inheritance object InternalHttpClientFactory Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.HelperMethods Assembly: FileCurator.dll Syntax public class InternalHttpClientFactory : IDisposable Methods | Edit this page View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IDisposable IDisposable | Edit this page View Source GetClient(Credentials?) Gets the client. Declaration public HttpClient GetClient(Credentials? credentials) Parameters Type Name Description Credentials credentials The credentials. Returns Type Description HttpClient See Also IDisposable IDisposable Implements IDisposable See Also IDisposable IDisposable"
  },
  "api/FileCurator.HelperMethods.Word.WordDocumentAssembler.html": {
    "href": "api/FileCurator.HelperMethods.Word.WordDocumentAssembler.html",
    "title": "Class WordDocumentAssembler | FileCurator API Reference",
    "keywords": "Class WordDocumentAssembler Document assembly helper class Inheritance object SafeDisposableBaseClass WordDocumentAssembler Implements IDisposable Inherited Members SafeDisposableBaseClass.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.HelperMethods.Word Assembly: FileCurator.dll Syntax public sealed class WordDocumentAssembler : SafeDisposableBaseClass, IDisposable Methods | Edit this page View Source AppendPageBreak() Appends a page break to the end of the document. Declaration public WordDocumentAssembler? AppendPageBreak() Returns Type Description WordDocumentAssembler This See Also SafeDisposableBaseClass | Edit this page View Source AppendTable(List<List<string>>) Appends a table to the document Declaration public WordDocumentAssembler AppendTable(List<List<string>> Table) Parameters Type Name Description List<List<string>> Table The table. Returns Type Description WordDocumentAssembler This See Also SafeDisposableBaseClass | Edit this page View Source CombineDocuments(List<string>) Combines the documents specified and combines them in this document with a page break between each one. Declaration public WordDocumentAssembler CombineDocuments(List<string> docLocations) Parameters Type Name Description List<string> docLocations The document locations. Returns Type Description WordDocumentAssembler This See Also SafeDisposableBaseClass | Edit this page View Source Create(string) Creates the document at the specified path. Declaration public static WordDocumentAssembler? Create(string path) Parameters Type Name Description string path The path. Returns Type Description WordDocumentAssembler The new document assembler object See Also SafeDisposableBaseClass | Edit this page View Source Dispose(bool) Function to override in order to dispose objects Declaration protected override void Dispose(bool Managed) Parameters Type Name Description bool Managed If true, managed and unmanaged objects should be disposed. Otherwise unmanaged objects only. Overrides SafeDisposableBaseClass.Dispose(bool) See Also SafeDisposableBaseClass | Edit this page View Source Open(string) Opens the document at the specified path specified path. Declaration public static WordDocumentAssembler? Open(string path) Parameters Type Name Description string path The path. Returns Type Description WordDocumentAssembler The new document assembler object See Also SafeDisposableBaseClass | Edit this page View Source ReplaceContent<T>(T, Dictionary<string, Func<T, string>>) Replaces the content/template fields with the content in the replacements dictionary. Declaration public WordDocumentAssembler ReplaceContent<T>(T objectArgs, Dictionary<string, Func<T, string>> replacements) Parameters Type Name Description T objectArgs The object arguments Dictionary<string, Func<T, string>> replacements The replacements. Returns Type Description WordDocumentAssembler Type Parameters Name Description T Data type for the Object Args See Also SafeDisposableBaseClass Implements IDisposable See Also SafeDisposableBaseClass"
  },
  "api/FileCurator.HelperMethods.Word.html": {
    "href": "api/FileCurator.HelperMethods.Word.html",
    "title": "Namespace FileCurator.HelperMethods.Word | FileCurator API Reference",
    "keywords": "Namespace FileCurator.HelperMethods.Word Classes WordDocumentAssembler Document assembly helper class"
  },
  "api/FileCurator.HelperMethods.html": {
    "href": "api/FileCurator.HelperMethods.html",
    "title": "Namespace FileCurator.HelperMethods | FileCurator API Reference",
    "keywords": "Namespace FileCurator.HelperMethods Classes InternalHttpClientFactory Internal HTTP Client Factory"
  },
  "api/FileCurator.Interfaces.IDirectory.html": {
    "href": "api/FileCurator.Interfaces.IDirectory.html",
    "title": "Interface IDirectory | FileCurator API Reference",
    "keywords": "Interface IDirectory Represents a directory Inherited Members IComparable<IDirectory>.CompareTo(IDirectory) IEnumerable<IFile>.GetEnumerator() IComparable.CompareTo(object) IEquatable<IDirectory>.Equals(IDirectory) Namespace: FileCurator.Interfaces Assembly: FileCurator.dll Syntax public interface IDirectory : IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> Properties | Edit this page View Source Accessed Last time it was accessed Declaration DateTime Accessed { get; } Property Value Type Description DateTime See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Created When it was created Declaration DateTime Created { get; } Property Value Type Description DateTime See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Exists Does the directory exist Declaration bool Exists { get; } Property Value Type Description bool See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source FullName Full path to the directory Declaration string FullName { get; } Property Value Type Description string See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Modified When it was last modified Declaration DateTime Modified { get; } Property Value Type Description DateTime See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Name Name of the directory Declaration string Name { get; } Property Value Type Description string See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Parent Parent directory Declaration IDirectory? Parent { get; } Property Value Type Description IDirectory See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Root Root directory Declaration IDirectory? Root { get; } Property Value Type Description IDirectory See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Size Size of the contents of the directory in bytes Declaration long Size { get; } Property Value Type Description long See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> Methods | Edit this page View Source CopyTo(IDirectory, CopyOptions) Copies the directory to the specified parent directory Declaration IDirectory CopyTo(IDirectory directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Copy options Returns Type Description IDirectory See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source CopyToAsync(IDirectory, CopyOptions) Copies the directory to the specified parent directory Declaration Task<IDirectory> CopyToAsync(IDirectory directory, CopyOptions options = CopyOptions.CopyAlways) Parameters Type Name Description IDirectory directory Directory to copy to CopyOptions options Copy options Returns Type Description Task<IDirectory> See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Create() Creates the directory if it does not currently exist Declaration IDirectory Create() Returns Type Description IDirectory See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source CreateAsync() Creates the directory if it does not currently exist Declaration Task<IDirectory> CreateAsync() Returns Type Description Task<IDirectory> See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Delete() Deletes the directory Declaration IDirectory Delete() Returns Type Description IDirectory See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source DeleteAsync() Deletes the directory Declaration Task<IDirectory> DeleteAsync() Returns Type Description Task<IDirectory> See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source EnumerateDirectories(Predicate<IDirectory>, SearchOption) Enumerates sub directories (defaults to top level sub directories) Declaration IEnumerable<IDirectory> EnumerateDirectories(Predicate<IDirectory> predicate, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description Predicate<IDirectory> predicate Predicate used to filter directories SearchOption options Search options to use Returns Type Description IEnumerable<IDirectory> The list of directories See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source EnumerateDirectories(string, SearchOption) Enumerates sub directories (defaults to top level sub directories) Declaration IEnumerable<IDirectory> EnumerateDirectories(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern to use SearchOption options Search options to use Returns Type Description IEnumerable<IDirectory> The list of directories See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source EnumerateFiles(Predicate<IFile>, SearchOption) Enumerates files within the directory (defaults to top level directory and not the sub directories) Declaration IEnumerable<IFile> EnumerateFiles(Predicate<IFile> predicate, SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description Predicate<IFile> predicate Predicate used to filter files SearchOption options Search options to use Returns Type Description IEnumerable<IFile> The list of files See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source EnumerateFiles(string, SearchOption) Enumerates files within the directory (defaults to top level directory and not the sub directories) Declaration IEnumerable<IFile> EnumerateFiles(string searchPattern = \"*\", SearchOption options = SearchOption.TopDirectoryOnly) Parameters Type Name Description string searchPattern Search pattern to use SearchOption options Search options to use Returns Type Description IEnumerable<IFile> The list of files See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source MoveTo(IDirectory) Moves the directory to the specified parent directory Declaration IDirectory MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description IDirectory See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source MoveToAsync(IDirectory) Moves the directory to the specified parent directory Declaration Task<IDirectory> MoveToAsync(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move to Returns Type Description Task<IDirectory> See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source Rename(string) Renames the directory Declaration IDirectory Rename(string name) Parameters Type Name Description string name The new name of the directory Returns Type Description IDirectory See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> | Edit this page View Source RenameAsync(string) Renames the directory Declaration Task<IDirectory> RenameAsync(string name) Parameters Type Name Description string name The new name of the directory Returns Type Description Task<IDirectory> See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T> See Also IComparable<T> IEnumerable<T> IComparable IEquatable<T>"
  },
  "api/FileCurator.Interfaces.IFile.html": {
    "href": "api/FileCurator.Interfaces.IFile.html",
    "title": "Interface IFile | FileCurator API Reference",
    "keywords": "Interface IFile Represents an individual file Inherited Members IComparable<IFile>.CompareTo(IFile) IComparable.CompareTo(object) IEquatable<IFile>.Equals(IFile) Namespace: FileCurator.Interfaces Assembly: FileCurator.dll Syntax public interface IFile : IComparable<IFile>, IComparable, IEquatable<IFile> Properties | Edit this page View Source Accessed Last time the file was accessed Declaration DateTime Accessed { get; } Property Value Type Description DateTime | Edit this page View Source Created When the file was created Declaration DateTime Created { get; } Property Value Type Description DateTime | Edit this page View Source Directory Directory the file is in Declaration IDirectory? Directory { get; } Property Value Type Description IDirectory | Edit this page View Source Exists Does the file exist currently Declaration bool Exists { get; } Property Value Type Description bool | Edit this page View Source Extension File extension Declaration string Extension { get; } Property Value Type Description string | Edit this page View Source FullName Full path to the file Declaration string FullName { get; } Property Value Type Description string | Edit this page View Source Length Size of the file in bytes Declaration long Length { get; } Property Value Type Description long | Edit this page View Source Modified When the file was last modified Declaration DateTime Modified { get; } Property Value Type Description DateTime | Edit this page View Source Name File name Declaration string Name { get; } Property Value Type Description string Methods | Edit this page View Source CopyTo(IDirectory, bool) Copies the file to another directory Declaration IFile? CopyTo(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description IFile The newly created file | Edit this page View Source CopyToAsync(IDirectory, bool) Copies the file to another directory Declaration Task<IFile?> CopyToAsync(IDirectory directory, bool overwrite) Parameters Type Name Description IDirectory directory Directory to copy the file to bool overwrite Should the file overwrite another file if found Returns Type Description Task<IFile> The newly created file | Edit this page View Source Delete() Deletes the file Declaration string Delete() Returns Type Description string Any response for deleting the resource (usually FTP, HTTP, etc) | Edit this page View Source DeleteAsync() Deletes the file Declaration Task<string> DeleteAsync() Returns Type Description Task<string> Any response for deleting the resource (usually FTP, HTTP, etc) | Edit this page View Source MoveTo(IDirectory) Moves the file to another directory Declaration IFile MoveTo(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move the file to Returns Type Description IFile | Edit this page View Source MoveToAsync(IDirectory) Moves the file to another directory Declaration Task<IFile> MoveToAsync(IDirectory directory) Parameters Type Name Description IDirectory directory Directory to move the file to Returns Type Description Task<IFile> | Edit this page View Source Parse() Parses this instance. Declaration IGenericFile Parse() Returns Type Description IGenericFile The parsed file Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source ParseAsync() Parses this instance. Declaration Task<IGenericFile> ParseAsync() Returns Type Description Task<IGenericFile> The parsed file Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source ParseAsync<TFile>() Parses this instance. Declaration Task<TFile> ParseAsync<TFile>() where TFile : IGenericFile Returns Type Description Task<TFile> The parsed file Type Parameters Name Description TFile The type of the file object expected. Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source Parse<TFile>() Parses this instance. Declaration TFile Parse<TFile>() where TFile : IGenericFile Returns Type Description TFile The parsed file Type Parameters Name Description TFile The type of the file object expected. Exceptions Type Condition ArgumentException Could not find file format that returns the specified object type | Edit this page View Source Read() Reads the file to the end as a string Declaration string Read() Returns Type Description string A string containing the contents of the file | Edit this page View Source ReadAsync() Reads the file to the end as a string Declaration Task<string> ReadAsync() Returns Type Description Task<string> A string containing the contents of the file | Edit this page View Source ReadBinary() Reads the file to the end as a byte array Declaration byte[] ReadBinary() Returns Type Description byte[] A byte array containing the contents of the file | Edit this page View Source ReadBinaryAsync() Reads the file to the end as a byte array Declaration Task<byte[]> ReadBinaryAsync() Returns Type Description Task<byte[]> A byte array containing the contents of the file | Edit this page View Source Rename(string) Renames the file Declaration IFile Rename(string newName) Parameters Type Name Description string newName New file name Returns Type Description IFile | Edit this page View Source RenameAsync(string) Renames the file Declaration Task<IFile> RenameAsync(string newName) Parameters Type Name Description string newName New file name Returns Type Description Task<IFile> | Edit this page View Source Write(IGenericFile, FileMode) Writes the specified data. Declaration bool Write(IGenericFile data, FileMode mode = FileMode.Create) Parameters Type Name Description IGenericFile data The data. FileMode mode The mode. Returns Type Description bool True if it was written successfully, false otherwise. | Edit this page View Source Write(byte[], FileMode) Writes content to the file Declaration byte[] Write(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode File mode Returns Type Description byte[] The result of the write or original content | Edit this page View Source Write(string, FileMode, Encoding?) Writes content to the file Declaration string Write(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode File mode Encoding encoding Encoding that the content should be saved as (default is UTF8) Returns Type Description string The result of the write or original content | Edit this page View Source WriteAsync(IGenericFile, FileMode) Writes the specified data. Declaration Task<bool> WriteAsync(IGenericFile data, FileMode mode = FileMode.Create) Parameters Type Name Description IGenericFile data The data. FileMode mode The mode. Returns Type Description Task<bool> True if it was written successfully, false otherwise. | Edit this page View Source WriteAsync(byte[], FileMode) Writes content to the file Declaration Task<byte[]> WriteAsync(byte[] content, FileMode mode = FileMode.Create) Parameters Type Name Description byte[] content Content to write FileMode mode File mode Returns Type Description Task<byte[]> The result of the write or original content | Edit this page View Source WriteAsync(string, FileMode, Encoding?) Writes content to the file Declaration Task<string> WriteAsync(string content, FileMode mode = FileMode.Create, Encoding? encoding = null) Parameters Type Name Description string content Content to write FileMode mode File mode Encoding encoding Encoding that the content should be saved as (default is UTF8) Returns Type Description Task<string> The result of the write or original content"
  },
  "api/FileCurator.Interfaces.IFileSystem.html": {
    "href": "api/FileCurator.Interfaces.IFileSystem.html",
    "title": "Interface IFileSystem | FileCurator API Reference",
    "keywords": "Interface IFileSystem Interface for the file system Namespace: FileCurator.Interfaces Assembly: FileCurator.dll Syntax public interface IFileSystem Properties | Edit this page View Source Name Name of the file system Declaration string Name { get; } Property Value Type Description string | Edit this page View Source Order Gets the order (lower numbers occur first). Declaration int Order { get; } Property Value Type Description int The order. Methods | Edit this page View Source CanHandle(string) Returns true if it can handle the path, false otherwise Declaration bool CanHandle(string path) Parameters Type Name Description string path The path to check against Returns Type Description bool True if it can handle the path, false otherwise | Edit this page View Source Directory(string, Credentials?) Gets the directory representation for the directory Declaration IDirectory Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object | Edit this page View Source File(string, Credentials?) Gets the class representation for the file Declaration IFile File(string path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object"
  },
  "api/FileCurator.Interfaces.html": {
    "href": "api/FileCurator.Interfaces.html",
    "title": "Namespace FileCurator.Interfaces | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Interfaces Interfaces IDirectory Represents a directory IFile Represents an individual file IFileSystem Interface for the file system"
  },
  "api/FileCurator.Module.FileCuratorModule.html": {
    "href": "api/FileCurator.Module.FileCuratorModule.html",
    "title": "Class FileCuratorModule | FileCurator API Reference",
    "keywords": "Class FileCuratorModule File curator module Inheritance object FileCuratorModule Implements IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Module Assembly: FileCurator.dll Syntax public class FileCuratorModule : IModule Properties | Edit this page View Source Order Order to run it in Declaration public int Order { get; } Property Value Type Description int Methods | Edit this page View Source Load(IServiceCollection?) Loads the module Declaration public void Load(IServiceCollection? bootstrapper) Parameters Type Name Description IServiceCollection bootstrapper The bootstrapper. Implements IModule"
  },
  "api/FileCurator.Module.html": {
    "href": "api/FileCurator.Module.html",
    "title": "Namespace FileCurator.Module | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Module Classes FileCuratorModule File curator module"
  },
  "api/FileCurator.Windows.Formats.MSG.MSGFormat.html": {
    "href": "api/FileCurator.Windows.Formats.MSG.MSGFormat.html",
    "title": "Class MSGFormat | FileCurator API Reference",
    "keywords": "Class MSGFormat MSG Format Inheritance object FormatBaseClass<MSGReader, MSGWriter, IMessage> MSGFormat Implements IFormat<IMessage> IFormat Inherited Members FormatBaseClass<MSGReader, MSGWriter, IMessage>.ContentTypes FormatBaseClass<MSGReader, MSGWriter, IMessage>.DisplayName FormatBaseClass<MSGReader, MSGWriter, IMessage>.FileTypes FormatBaseClass<MSGReader, MSGWriter, IMessage>.HeaderInfo FormatBaseClass<MSGReader, MSGWriter, IMessage>.Reader FormatBaseClass<MSGReader, MSGWriter, IMessage>.Writer FormatBaseClass<MSGReader, MSGWriter, IMessage>.CanRead(string) FormatBaseClass<MSGReader, MSGWriter, IMessage>.CanRead(Stream) FormatBaseClass<MSGReader, MSGWriter, IMessage>.CanWrite(string) FormatBaseClass<MSGReader, MSGWriter, IMessage>.Read(Stream) FormatBaseClass<MSGReader, MSGWriter, IMessage>.ReadAsync(Stream) FormatBaseClass<MSGReader, MSGWriter, IMessage>.ReadBase(Stream) FormatBaseClass<MSGReader, MSGWriter, IMessage>.ReadBaseAsync(Stream) FormatBaseClass<MSGReader, MSGWriter, IMessage>.Write(Stream, IGenericFile) FormatBaseClass<MSGReader, MSGWriter, IMessage>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Windows.Formats.MSG Assembly: FileCurator.dll Syntax public class MSGFormat : FormatBaseClass<MSGReader, MSGWriter, IMessage>, IFormat<IMessage>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<MSGReader, MSGWriter, IMessage>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<MSGReader, MSGWriter, IMessage>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<MSGReader, MSGWriter, IMessage>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Windows.Formats.MSG.MSGReader.html": {
    "href": "api/FileCurator.Windows.Formats.MSG.MSGReader.html",
    "title": "Class MSGReader | FileCurator API Reference",
    "keywords": "Class MSGReader MSG Reader Inheritance object ReaderBaseClass<IMessage> MSGReader Implements IGenericFileReader<IMessage> Inherited Members ReaderBaseClass<IMessage>.CanRead(string) ReaderBaseClass<IMessage>.CanRead(Stream) ReaderBaseClass<IMessage>.InternalCanRead(Stream) ReaderBaseClass<IMessage>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Windows.Formats.MSG Assembly: FileCurator.dll Syntax public class MSGReader : ReaderBaseClass<IMessage>, IGenericFileReader<IMessage> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IMessage>.HeaderIdentifier See Also ReaderBaseClass<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IMessage Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IMessage The file Overrides ReaderBaseClass<IMessage>.Read(Stream) See Also ReaderBaseClass<TFile> Implements IGenericFileReader<TFile> See Also ReaderBaseClass<TFile>"
  },
  "api/FileCurator.Windows.Formats.MSG.MSGWriter.html": {
    "href": "api/FileCurator.Windows.Formats.MSG.MSGWriter.html",
    "title": "Class MSGWriter | FileCurator API Reference",
    "keywords": "Class MSGWriter MSG Writer Inheritance object MSGWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Windows.Formats.MSG Assembly: FileCurator.dll Syntax public class MSGWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Windows.Formats.MSG.html": {
    "href": "api/FileCurator.Windows.Formats.MSG.html",
    "title": "Namespace FileCurator.Windows.Formats.MSG | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Windows.Formats.MSG Classes MSGFormat MSG Format MSGReader MSG Reader MSGWriter MSG Writer"
  },
  "api/FileCurator.Windows.Formats.PDF.PDFFormat.html": {
    "href": "api/FileCurator.Windows.Formats.PDF.PDFFormat.html",
    "title": "Class PDFFormat | FileCurator API Reference",
    "keywords": "Class PDFFormat PDF Format Inheritance object FormatBaseClass<PDFReader, PDFWriter, IGenericFile> PDFFormat Implements IFormat<IGenericFile> IFormat Inherited Members FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.ContentTypes FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.DisplayName FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.FileTypes FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.HeaderInfo FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.Reader FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.Writer FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.CanRead(string) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.CanRead(Stream) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.CanWrite(string) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.Read(Stream) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.ReadAsync(Stream) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.ReadBase(Stream) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.ReadBaseAsync(Stream) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.Write(Stream, IGenericFile) FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.WriteAsync(Stream, IGenericFile) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Windows.Formats.PDF Assembly: FileCurator.dll Syntax public class PDFFormat : FormatBaseClass<PDFReader, PDFWriter, IGenericFile>, IFormat<IGenericFile>, IFormat Properties | Edit this page View Source ContentTypes Gets the content types. Declaration public override string[] ContentTypes { get; } Property Value Type Description string[] The content types. Overrides FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.ContentTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source DisplayName Gets or sets the display name. Declaration public override string DisplayName { get; } Property Value Type Description string The display name. Overrides FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.DisplayName See Also FormatBaseClass<TFileReader, TFileWriter, TFile> | Edit this page View Source FileTypes Gets or sets the file types. Declaration public override string[] FileTypes { get; } Property Value Type Description string[] The file types. Overrides FormatBaseClass<PDFReader, PDFWriter, IGenericFile>.FileTypes See Also FormatBaseClass<TFileReader, TFileWriter, TFile> Implements IFormat<TFile> IFormat See Also FormatBaseClass<TFileReader, TFileWriter, TFile>"
  },
  "api/FileCurator.Windows.Formats.PDF.PDFReader.html": {
    "href": "api/FileCurator.Windows.Formats.PDF.PDFReader.html",
    "title": "Class PDFReader | FileCurator API Reference",
    "keywords": "Class PDFReader PDF Reader Inheritance object ReaderBaseClass<IGenericFile> PDFReader Implements IGenericFileReader<IGenericFile> Inherited Members ReaderBaseClass<IGenericFile>.CanRead(string) ReaderBaseClass<IGenericFile>.CanRead(Stream) ReaderBaseClass<IGenericFile>.InternalCanRead(Stream) ReaderBaseClass<IGenericFile>.ReadAsync(Stream) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Windows.Formats.PDF Assembly: FileCurator.dll Syntax public class PDFReader : ReaderBaseClass<IGenericFile>, IGenericFileReader<IGenericFile> Properties | Edit this page View Source HeaderIdentifier Gets the header identifier. Declaration public override byte[] HeaderIdentifier { get; } Property Value Type Description byte[] The header identifier. Overrides ReaderBaseClass<IGenericFile>.HeaderIdentifier See Also ReaderBaseClass<TFile> Methods | Edit this page View Source Read(Stream) Reads the specified stream. Declaration public override IGenericFile Read(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description IGenericFile The file Overrides ReaderBaseClass<IGenericFile>.Read(Stream) See Also ReaderBaseClass<TFile> Implements IGenericFileReader<TFile> See Also ReaderBaseClass<TFile>"
  },
  "api/FileCurator.Windows.Formats.PDF.PDFWriter.html": {
    "href": "api/FileCurator.Windows.Formats.PDF.PDFWriter.html",
    "title": "Class PDFWriter | FileCurator API Reference",
    "keywords": "Class PDFWriter PDF writer Inheritance object PDFWriter Implements IGenericFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: FileCurator.Windows.Formats.PDF Assembly: FileCurator.dll Syntax public class PDFWriter : IGenericFileWriter Methods | Edit this page View Source Write(Stream, IGenericFile) Writes the file to the specified writer. Declaration public bool Write(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description bool True if it writes successfully, false otherwise. See Also IGenericFileWriter | Edit this page View Source WriteAsync(Stream, IGenericFile) Writes the file to the specified writer. Declaration public Task<bool> WriteAsync(Stream writer, IGenericFile file) Parameters Type Name Description Stream writer The writer. IGenericFile file The file. Returns Type Description Task<bool> True if it writes successfully, false otherwise. See Also IGenericFileWriter Implements IGenericFileWriter See Also IGenericFileWriter"
  },
  "api/FileCurator.Windows.Formats.PDF.html": {
    "href": "api/FileCurator.Windows.Formats.PDF.html",
    "title": "Namespace FileCurator.Windows.Formats.PDF | FileCurator API Reference",
    "keywords": "Namespace FileCurator.Windows.Formats.PDF Classes PDFFormat PDF Format PDFReader PDF Reader PDFWriter PDF writer"
  },
  "api/FileCurator.html": {
    "href": "api/FileCurator.html",
    "title": "Namespace FileCurator | FileCurator API Reference",
    "keywords": "Namespace FileCurator Classes Credentials Credentials info DirectoryInfo Directory info class FileInfo File info class FileSystem Main class for FileCurator"
  },
  "api/Microsoft.Extensions.DependencyInjection.FileCuratorCanisterExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.FileCuratorCanisterExtensions.html",
    "title": "Class FileCuratorCanisterExtensions | FileCurator API Reference",
    "keywords": "Class FileCuratorCanisterExtensions Canister registration extension Inheritance object FileCuratorCanisterExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Microsoft.Extensions.DependencyInjection Assembly: FileCurator.dll Syntax public static class FileCuratorCanisterExtensions Methods | Edit this page View Source RegisterFileCurator(ICanisterConfiguration?) Registers the big book of data types. Declaration public static ICanisterConfiguration? RegisterFileCurator(this ICanisterConfiguration? bootstrapper) Parameters Type Name Description ICanisterConfiguration bootstrapper The bootstrapper. Returns Type Description ICanisterConfiguration The bootstrapper"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | FileCurator API Reference",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes FileCuratorCanisterExtensions Canister registration extension"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | FileCurator API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | FileCurator API Reference",
    "keywords": "Code using BigBook; using FileCurator.Formats.Data.Interfaces; using Microsoft.Extensions.DependencyInjection; namespace FileCurator.Example { /// <summary> /// Example program to show how to use the FileCurator library /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static void Main(string[] args) { // Create a service provider. var ServiceProvider = new ServiceCollection().AddCanisterModules()?.BuildServiceProvider(); // Let's load a generic file and view it's details. var MyFile = new FileInfo(\"./MyFile.txt\"); Console.WriteLine(\"File Info:\"); Console.WriteLine($\"File: {MyFile.FullName}\"); Console.WriteLine($\"File Exists: {MyFile.Exists}\"); Console.WriteLine($\"File Extension: {MyFile.Extension}\"); Console.WriteLine($\"File Name: {MyFile.Name}\"); Console.WriteLine($\"File length: {MyFile.Length}\"); Console.WriteLine(); // We can also parse the file and view it's contents. var PDFContent = new FileInfo(\"./TestPDF.pdf\").Parse<IGenericFile>(); Console.WriteLine(\"PDF Content:\"); Console.WriteLine(PDFContent.Content); Console.WriteLine(); // Including more structured files like CSVs. This will parse the CSV into a table. var CSVContent = new FileInfo(\"./TestCSV.csv\").Parse<ITable>(); Console.WriteLine(\"CSV Content:\"); Console.WriteLine(CSVContent.Content); Console.WriteLine($\"Columns: {CSVContent.Columns.ToString(x => x)}\"); Console.WriteLine($\"Rows: {CSVContent.Rows.ToString(x => x.Cells.ToString(x => x.Content, \", \"), \"\\n\")}\"); Console.WriteLine(); // We can also write structured content to a file. var NewCSVFile = new FileInfo(\"./NewCSV.csv\"); NewCSVFile.Write(CSVContent); // And then read it as a string. Console.WriteLine(NewCSVFile.Read()); } } } Output File Info: File: C:\\*********\\MyFile.txt File Exists: True File Extension: .txt File Name: MyFile.txt File length: 24 PDF Content: This is a test docx CSV Content: Header 1 Header 2 Header 3 Header 4 Header 5 Header 6 This is a test CSV file Tons of data in here is super important Columns: Header 1,Header 2,Header 3,Header 4,Header 5,Header 6 Rows: This, is, a, test, CSV, file Tons, of, data, in here, is, super important \"Header 1\",\"Header 2\",\"Header 3\",\"Header 4\",\"Header 5\",\"Header 6\" \"This\",\"is\",\"a\",\"test\",\"CSV\",\"file\" \"Tons\",\"of\",\"data\",\"in here\",\"is\",\"super\" \"important\""
  },
  "index.html": {
    "href": "index.html",
    "title": "FileCurator | FileCurator API Reference",
    "keywords": "FileCurator FileCurator is a library used to simplify file access and management on your system. It aims to make accessing a local file as simple as accessing a URL or 3rd party system like Dropbox. Basic Usage The system relies on an IoC wrapper called Canister. While Canister has a built in IoC container, it's purpose is to actually wrap your container of choice in a way that simplifies setup and usage for other libraries that don't want to be tied to a specific IoC container. FileCurator uses it to detect and pull in file system providers. As such you must set up Canister in order to use FileCurator: services.AddCanisterModules(configure => configure.RegisterFileCurator()); This line is required prior to using the extension methods, FileInfo, and DirectoryInfo classes for the first time. Once Canister is set up, you can call the classes provided: var MyFile = new FileInfo(\"~/MyFile.txt\"); MyFile = new FileInfo(\"./MyFile.txt\"); MyFile = new FileInfo(\"MyFile.txt\"); MyFile = new FileInfo(\"http://www.google.com\"); MyFile = new FileInfo(\"resource://MyDLL/MyDLL.Resources.MyFile.txt\"); The FileInfo and DirectoryInfo classes take a string for the file path as well as a user name, password, and domain, assuming the file system you are trying to reach requires it. It translates ~ and . to be the local base directory. From there you will have access to the file's contents and information. Similarly you can pass in web addresses or the location of embedded resource files and will be able to read them accordingly. Embedded Resources For embedded resources, the syntax is: resource://MyDLL/MyDLL.Resources.Directory.MyFile.txt Where resource:// lets the system know you want to retrieve an embedded resource. MyDLL is the name of the Assembly that the resource is found in. And MyFile.txt is the name of the file. Depending on where you placed the file the path inside the project will be the Resources.Directory portion of the above example. In the above case it was placed in the /Resources/Directory folder inside the assembly. Instead of slashes the system separates them with a period instead. If you placed the resources at the base of the project, then the Resouces.Directory portion can be left out and it would just be: resource://MyDLL/MyDLL.MyFile.txt Adding File Systems The system comes with a couple of built in file systems for dealing with local files, however you may wish to add other targets as well. In order to do this all that you need to do is create a class that inherits from IFileSystem, a class that inherits from IFile, and one for IDirectory. From there the system will find the new provider and use it when called. Overriding File Systems By default the system comes with a couple of file systems for dealing with local files. However it is possible to override these by simply creating a class that inherits from IFileSystem and setting the correct Name to match the one that you wish to override. There is a base class called LocalFileSystemBase that can help with most of the functions for the file system as well. For instance to override the \"Relative Local\" system with your own you would do the following: public class MyLocalFileSystem : LocalFileSystemBase { /// <summary> /// Name of the file system /// </summary> public override string Name { get { return \"Relative Local\"; } } /// <summary> /// Relative starter /// </summary> protected override string HandleRegexString { get { return @\"^[~|\\.]\"; } } /// <summary> /// Gets the absolute path of the variable passed in /// </summary> /// <param name=\"path\">Path to convert to absolute</param> /// <returns>The absolute path of the path passed in</returns> protected override string AbsolutePath(string path) { ... } } From there the system will override the default \"Relative Local\" provider with your own. Parsing Files FileCurator also has a number of file formats that it understands and can parse: CSV TSV Tab delimited Excel (XLSX files only) HTML files ICS (iCalendar files) EML MHT PowerPoint (PPTX and PPSX) RSS VCS (vCal files) VCF (vCard files) Word (DOCX files only) XML And of course TXT files... There are also a few items that are not .Net Core/.Net Standard supported in the FileCurator.Windows package: PDF MSG files RTF Once a .Net Standard library is available to parse these items that is open sourced (and without a funky license), these will be moved into the main library. Anyway, in order to parse a file you would do the following: var MyFile = new FileInfo(\"~/MyFile.txt\").Parse(); The above code opens the MyFile.txt document and parses it into a IGenericFile object. This object contains a Content property, a Title property, and a Meta property. For the above text file, only the Content property is filled in. However you can also do this: var MyEmail = new FileInfo(\"~/MyEmail.eml\").Parse(); This will take the content of the email and place it in the Content property, the subject of the email is in Title. However you may be saying, what about To, or BCC, or From fields? That's why there is another Parse method: var MyEmail = new FileInfo(\"~/MyEmail.eml\").Parse<IMessage>(); This time we get back an IMessage object instead of an IGenericFile object. And the IMessage object has fields for To, BCC, CC, From, Sent date, etc. The Parse<>() method takes any type that inherits from IGenericFile. The built in types are: IMessage ITable IFeed ICard ICalendar And each of these correspond to a particular set of file formats: IMessage - EML, MHT, and MSG files. ITable - Delimited (CSV, TSV, etc.) and Excel files. IFeed - RSS files. ICard - vCards ICalendar - iCal and vCal files. All other file types are parsed as IGenericFile objects. And calling for an object of type A when the parser returns type B will throw an exception. So if you have no idea what the file is, it's best to just use the Parse() method instead. Writing an object to a file is similarly simple: var MyTable = new GenericTable(); MyTable.Columns.Add(\"Column Header 1\"); MyTable.Columns.Add(\"Column Header 2\"); MyTable.Rows.Add(new GenericRow()); MyTable.Rows[0].Cells.Add(new GenericCell(\"My Data\")); MyTable.Rows[0].Cells.Add(new GenericCell(\"Goes Here\")); new FileInfo(\"~/MyFile.xlsx\").Write(MyTable); The above code creates a table object with 2 column headers and a single row containing two cells, the first contains \"My Data\" and the second contains \"Goes Here\". The FileInfo object then takes the extension of the file that you are saving to and sends it to the proper format handler for writing the data to disk. In the above case it would be the Excel handler. You can similarly take the ITable object and save it as a CSV: new FileInfo(\"~/MyFile.csv\").Write(MyTable); No other code needs to change, just the file extension and it saves it properly as a CSV. There are also extension methods to work with Streams instead of just FileInfo objects: using(var TempStream = new MemoryStream()) { TempStream.Write(new GenericFile(\"This is my content\",\"My Title\",\"\"), MimeType.Word); } The above code would write to the TempStream object a word doc that contains \"This is my content\" in the body and have a title of \"My Title\". You can similarly parse Stream objects like the FileInfo object but the only difference is that it takes in a MimeType object. This is to help it figure out what sort of file is in the stream. However for unknown files you can specify MimeType.Unknown. The system will then try its best to figure out what the file is and act accordingly. Writing Your Own Format Parser All format parsers must inherit from the IFormat interface. However there is a base class to help simplify some of the process called FormatBaseClass<TFileReader, TFileWriter, TFile>, but it is not required. As an example: /// <summary> /// Text format /// </summary> /// <seealso cref=\"BaseClasses.FormatBaseClass{TxtReader, TxtWriter, IGenericFile}\"/> public class TxtFormat : FormatBaseClass<TxtReader, TxtWriter, IGenericFile> { /// <summary> /// Gets the content types. /// </summary> /// <value>The content types.</value> public override string[] ContentTypes => new[] { \"TEXT/PLAIN\" }; /// <summary> /// Gets or sets the display name. /// </summary> /// <value>The display name.</value> public override string DisplayName => \"Text\"; /// <summary> /// Gets or sets the file types. /// </summary> /// <value>The file types.</value> public override string[] FileTypes => new[] { \"TXT\" }; } The above class is the TXT file parser. It also has a reader class: /// <summary> /// TXT file reader /// </summary> /// <seealso cref=\"Interfaces.IGenericFileReader{IGenericFile}\"/> public class TxtReader : ReaderBaseClass<IGenericFile> { /// <summary> /// Gets the header identifier. /// </summary> /// <value>The header identifier.</value> public override byte[] HeaderIdentifier => new byte[0]; /// <summary> /// Reads the specified stream. /// </summary> /// <param name=\"stream\">The stream.</param> /// <returns>The file</returns> public override IGenericFile Read(Stream stream) { return new GenericFile(stream.ReadAll(), \"\", \"\"); } } And a writer class: /// <summary> /// Txt Writer /// </summary> /// <seealso cref=\"IGenericFileWriter\"/> public class TxtWriter : IGenericFileWriter { /// <summary> /// Writes the file to the specified writer. /// </summary> /// <param name=\"writer\">The writer.</param> /// <param name=\"file\">The file.</param> /// <returns>True if it writes successfully, false otherwise.</returns> public bool Write(Stream writer, IGenericFile file) { var TempData = Encoding.UTF8.GetBytes(file.ToString()); writer.Write(TempData, 0, TempData.Length); return true; } } You can create something similar for your formats as well. From there the system will automatically pick up your format and use it when appropriate. You can also override the existing formats with your own. You just need to state the content type and file types that you wish to intercept and it will use your items instead of the corresponding items in FileCurator. Installation The library is available via Nuget with the package name \"FileCurator\". To install it run the following command in the Package Manager Console: Install-Package FileCurator The file parsers that are not .Net Standard yet are also available with the package name of \"FileCurator.Windows\". To install it run the following command in the Package Manager Console: Install-Package FileCurator.Windows This package, however, is .Net Framework only and generally not needed as most formats have been moved to .Net Standard/.Net 5+. Build Process In order to build the library you will require the following as a minimum: Visual Studio 2019 .Net 5 Other than that, just clone the project and you should be able to load the solution and build without too much effort."
  }
}